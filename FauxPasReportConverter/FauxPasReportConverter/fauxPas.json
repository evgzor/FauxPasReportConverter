{
  "buildConfigurationName": "Release",
  "diagnostics": [
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "startScan",
      "extent": {
        "end": {
          "byteColumn": 81,
          "byteOffset": 4689,
          "line": 144,
          "utf16Column": 80,
          "utf16Offset": 4688
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 4617,
          "line": 144,
          "utf16Column": 8,
          "utf16Offset": 4616
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Discover_SLCompanionVC.m",
      "fileSnippet": "[butCancelRefresh setTitle:@\"CANCEL\" forState:UIControlStateHighlighted]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIButton setTitle:forState:]</code> called with string <code class=\"fauxpas-string\">CANCEL</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIButton setTitle:forState:] called with string CANCEL",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "stopScan",
      "extent": {
        "end": {
          "byteColumn": 82,
          "byteOffset": 5167,
          "line": 158,
          "utf16Column": 81,
          "utf16Offset": 5166
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 5094,
          "line": 158,
          "utf16Column": 8,
          "utf16Offset": 5093
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Discover_SLCompanionVC.m",
      "fileSnippet": "[butCancelRefresh setTitle:@\"REFRESH\" forState:UIControlStateHighlighted]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIButton setTitle:forState:]</code> called with string <code class=\"fauxpas-string\">REFRESH</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIButton setTitle:forState:] called with string REFRESH",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 142,
          "byteOffset": 10904,
          "line": 327,
          "utf16Column": 141,
          "utf16Offset": 10904
        },
        "start": {
          "byteColumn": 2,
          "byteOffset": 10764,
          "line": 327,
          "utf16Column": 1,
          "utf16Offset": 10764
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SignOff_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillHide:) name:UIKeyboardWillHideNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "SetBillingState:",
      "extent": {
        "end": {
          "byteColumn": 59,
          "byteOffset": 29256,
          "line": 754,
          "utf16Column": 58,
          "utf16Offset": 29256
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 29222,
          "line": 754,
          "utf16Column": 24,
          "utf16Offset": 29222
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[NSNumber numberWithInt:billstate]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "dososcancel",
      "extent": {
        "end": {
          "byteColumn": 110,
          "byteOffset": 4198,
          "line": 119,
          "utf16Column": 109,
          "utf16Offset": 4198
        },
        "start": {
          "byteColumn": 20,
          "byteOffset": 3849,
          "line": 117,
          "utf16Column": 19,
          "utf16Offset": 3849
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SOS_ViewController.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:[@\"Cancel \" stringByAppendingString:[TextStyle emerg_stat]]\n                                          message:[NSString stringWithFormat:@\"Are you sure you want to cancel your %@?\",[TextStyle emerg_stat]]\n                                         delegate:self cancelButtonTitle:@\"No\" otherButtonTitles:@\"Yes\", nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">No</code>, <code class=\"fauxpas-string\">Yes</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings No, Yes",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 29,
          "byteOffset": 16205,
          "line": 417,
          "utf16Column": 29,
          "utf16Offset": 16205
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 16176,
          "line": 417,
          "utf16Column": 0,
          "utf16Offset": 16176
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.h",
      "fileSnippet": "@interface MyQueue : NSObject",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "MyQueue",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "CreateLicenseSN",
      "extent": {
        "end": {
          "byteColumn": 40,
          "byteOffset": 2410,
          "line": 70,
          "utf16Column": 39,
          "utf16Offset": 2410
        },
        "start": {
          "byteColumn": 21,
          "byteOffset": 2391,
          "line": 70,
          "utf16Column": 20,
          "utf16Offset": 2391
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckSN_ViewController.m",
      "fileSnippet": "NSError *clearerror",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when <code class=\"fauxpas-objcclass\">NSError</code> or <code class=\"fauxpas-typedef\">CFErrorRef</code> variable values are never used.</p> <p>If you are not interested in the error return value of a method or function, pass <code class=\"fauxpas-codesymbol\">NULL</code> for the error argument.</p>",
        "ruleName": "Unused error value",
        "ruleShortName": "UnusedErrorValue",
        "ruleWarning": null
      },
      "identifier": "clearerror",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Warns when NSError or CFErrorRef variable values are never used. If you are not interested in the error return value of a method or function, pass NULL for the error argument.",
      "ruleName": "Unused error value",
      "ruleShortName": "UnusedErrorValue",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 60,
          "byteOffset": 1521,
          "line": 45,
          "utf16Column": 60,
          "utf16Offset": 1521
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 1461,
          "line": 45,
          "utf16Column": 0,
          "utf16Offset": 1461
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/NetActivityView.h",
      "fileSnippet": "@interface ConnectionStatusView : UIView<UpdateConnDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "ConnectionStatusView",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 106,
          "byteOffset": 355,
          "line": 13,
          "utf16Column": 106,
          "utf16Offset": 355
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 249,
          "line": 13,
          "utf16Column": 0,
          "utf16Offset": 249
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SetPassword_ViewController.h",
      "fileSnippet": "@interface SetPassword_ViewController : UIViewController<HandleURLConDelegate,UIGestureRecognizerDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "SetPassword_ViewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "autoreconnectperipheral",
      "extent": {
        "end": {
          "byteColumn": 169,
          "byteOffset": 6500,
          "line": 225,
          "utf16Column": 168,
          "utf16Offset": 6499
        },
        "start": {
          "byteColumn": 99,
          "byteOffset": 6430,
          "line": 225,
          "utf16Column": 98,
          "utf16Offset": 6429
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "[NSArray arrayWithObjects:[CBUUID UUIDWithString:FK_SERVICE_GATT],nil]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSArray arrayWithObjects:]</code> is called. Consider using an Objective-C container literal expression instead.</p><p>NOTE: there is a crucial difference between the current implementation and the suggestion here: While a nil value for any of the given values to this method will only terminate the argument list, a nil value in the literal container expression will result in a runtime exception.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSArray arrayWithObjects:] is called. Consider using an Objective-C container literal expression instead.NOTE: there is a crucial difference between the current implementation and the suggestion here: While a nil value for any of the given values to this method will only terminate the argument list, a nil value in the literal container expression will result in a runtime exception.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "moveToUserInfoScreen",
      "extent": {
        "end": {
          "byteColumn": 102,
          "byteOffset": 10195,
          "line": 207,
          "utf16Column": 101,
          "utf16Offset": 10195
        },
        "start": {
          "byteColumn": 34,
          "byteOffset": 9988,
          "line": 206,
          "utf16Column": 33,
          "utf16Offset": 9988
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckSN_ViewController.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"License Expired\" message:@\"Your License Has Expired.\" delegate:self \n                                                  cancelButtonTitle:@\"OK\" otherButtonTitles:nil, nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">License Expired</code>, <code class=\"fauxpas-string\">Your License Has Expired.</code>, <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings License Expired, Your License Has Expired., OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 145,
          "byteOffset": 10761,
          "line": 326,
          "utf16Column": 144,
          "utf16Offset": 10761
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 10621,
          "line": 326,
          "utf16Column": 4,
          "utf16Offset": 10621
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SignOff_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillShow:) name:UIKeyboardWillShowNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "AutoDismissSingleAlert:",
      "extent": {
        "end": {
          "byteColumn": 94,
          "byteOffset": 103010,
          "line": 2581,
          "utf16Column": 93,
          "utf16Offset": 103010
        },
        "start": {
          "byteColumn": 65,
          "byteOffset": 102981,
          "line": 2581,
          "utf16Column": 64,
          "utf16Offset": 102981
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[NSNumber numberWithInt:type]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 36,
          "byteOffset": 3677,
          "line": 119,
          "utf16Column": 36,
          "utf16Offset": 3677
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 3641,
          "line": 119,
          "utf16Column": 0,
          "utf16Offset": 3641
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@interface ConfigSettings : NSObject",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "ConfigSettings",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "hazardclick",
      "extent": {
        "end": {
          "byteColumn": 126,
          "byteOffset": 5806,
          "line": 138,
          "utf16Column": 125,
          "utf16Offset": 5806
        },
        "start": {
          "byteColumn": 35,
          "byteOffset": 5335,
          "line": 136,
          "utf16Column": 34,
          "utf16Offset": 5335
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Hazard_ViewController.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:[[TextStyle offduty_cap] stringByAppendingString:@\" Warning\"]\n                                                             message:[NSString stringWithFormat:@\"%@ time expires before your %@. Your %@ time will be automatically extended.\",[TextStyle offduty_cap],[TextStyle hazard_stat],[TextStyle offduty_cap]]\n                                                            delegate:self cancelButtonTitle:@\"OK\" otherButtonTitles:nil, nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with string <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with string OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CreateLicenseSN",
      "extent": {
        "end": {
          "byteColumn": 59,
          "byteOffset": 2773,
          "line": 77,
          "utf16Column": 58,
          "utf16Offset": 2773
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 2731,
          "line": 77,
          "utf16Column": 16,
          "utf16Offset": 2731
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckSN_ViewController.m",
      "fileSnippet": "NSLog(@\"%@\",@\"Error clearing config file\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "finishedReceive:error:data:",
      "extent": {
        "end": {
          "byteColumn": 56,
          "byteOffset": 21694,
          "line": 530,
          "utf16Column": 55,
          "utf16Offset": 21694
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 21655,
          "line": 530,
          "utf16Column": 16,
          "utf16Offset": 21655
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckSN_ViewController.m",
      "fileSnippet": "NSLog(@\"Register Received:\\n%@\",stdata)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 52,
          "byteOffset": 1944,
          "line": 67,
          "utf16Column": 51,
          "utf16Offset": 1944
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 1905,
          "line": 67,
          "utf16Column": 12,
          "utf16Offset": 1905
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_ViewController.m",
      "fileSnippet": "[cellTitle setText:@\"User Information\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">User Information</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string User Information",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/PatrolMsgs_ViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetPassword",
      "extent": {
        "end": {
          "byteColumn": 35,
          "byteOffset": 90789,
          "line": 2259,
          "utf16Column": 34,
          "utf16Offset": 90789
        },
        "start": {
          "byteColumn": 16,
          "byteOffset": 90770,
          "line": 2259,
          "utf16Column": 15,
          "utf16Offset": 90770
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "(temp) ? temp : @\"\"",
      "html": {
        "info": null,
        "ruleDescription": "Expressions of the form <code>(obj ? obj : other)</code> should be written as <code>obj ?: other</code>.",
        "ruleName": "Null coalescing operator usage",
        "ruleShortName": "NullCoalescingOp",
        "ruleWarning": "Please note that in the form <code>(obj ? obj : other)</code> the <code>obj</code> expression is evaluated twice, while in the <code>obj ?: other</code> form it is evaluated only once."
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "Expressions of the form (obj ? obj : other) should be written as obj ?: other.",
      "ruleName": "Null coalescing operator usage",
      "ruleShortName": "NullCoalescingOp",
      "ruleWarning": "Please note that in the form (obj ? obj : other) the obj expression is evaluated twice, while in the obj ?: other form it is evaluated only once.",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ExtractNameFromTemplateLevel:",
      "extent": {
        "end": {
          "byteColumn": 68,
          "byteOffset": 35224,
          "line": 904,
          "utf16Column": 67,
          "utf16Offset": 35224
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 35165,
          "line": 904,
          "utf16Column": 8,
          "utf16Offset": 35165
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"%@ %@\",@\"Error in Template Level\",exception.reason)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "loadContactSettingsFile",
      "extent": {
        "end": {
          "byteColumn": 23,
          "byteOffset": 7028,
          "line": 242,
          "utf16Column": 22,
          "utf16Offset": 7028
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 7014,
          "line": 242,
          "utf16Column": 8,
          "utf16Offset": 7014
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSError *error",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when <code class=\"fauxpas-objcclass\">NSError</code> or <code class=\"fauxpas-typedef\">CFErrorRef</code> variable values are never used.</p> <p>If you are not interested in the error return value of a method or function, pass <code class=\"fauxpas-codesymbol\">NULL</code> for the error argument.</p>",
        "ruleName": "Unused error value",
        "ruleShortName": "UnusedErrorValue",
        "ruleWarning": null
      },
      "identifier": "error",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Warns when NSError or CFErrorRef variable values are never used. If you are not interested in the error return value of a method or function, pass NULL for the error argument.",
      "ruleName": "Unused error value",
      "ruleShortName": "UnusedErrorValue",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 197,
          "byteOffset": 435,
          "line": 12,
          "utf16Column": 197,
          "utf16Offset": 435
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 238,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 238
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/ConfigureTemplates_ViewController.h",
      "fileSnippet": "@interface ConfigureTemplates_ViewController : UIViewController<UITableViewDataSource,UITableViewDelegate,UIGestureRecognizerDelegate,ConfigureTemplateDelegate,HandleURLConDelegate,NetViewDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "ConfigureTemplates_ViewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 14,
          "byteOffset": 85140,
          "line": 2071,
          "utf16Column": 13,
          "utf16Offset": 85140
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 85135,
          "line": 2071,
          "utf16Column": 8,
          "utf16Offset": 85135
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "error",
      "html": {
        "info": null,
        "ruleDescription": "Methods that pass back <code class=\"fauxpas-objcclass\">NSError</code> objects by reference return <code class=\"fauxpas-codesymbol\">NO</code> or <code class=\"fauxpas-codesymbol\">nil</code> to indicate an error condition. This rule warns if the <code class=\"fauxpas-objcclass\">NSError</code> pointer is checked against <code class=\"fauxpas-codesymbol\">nil</code> without checking the return value.",
        "ruleName": "Fragile error condition check",
        "ruleShortName": "ErrorConditionCheck",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Methods that pass back NSError objects by reference return NO or nil to indicate an error condition. This rule warns if the NSError pointer is checked against nil without checking the return value.",
      "ruleName": "Fragile error condition check",
      "ruleShortName": "ErrorConditionCheck",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 37,
          "byteOffset": 4285,
          "line": 142,
          "utf16Column": 37,
          "utf16Offset": 4285
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 4248,
          "line": 142,
          "utf16Column": 0,
          "utf16Offset": 4248
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@interface ContactSettings : NSObject",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "ContactSettings",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_default/checkin_down@2x.png",
      "fileSnippet": null,
      "html": {
        "info": "<div class=\"fauxpas-filename\">checkin_down@2x.png</div> resolution (128 x 130) should be 2x that of <div class=\"fauxpas-filename\">checkin_down.png</div> (64 x 66). Expected resolution: 128 x 132.",
        "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
        "ruleName": "Unexpected retina image resolution",
        "ruleShortName": "RetinaImagesResolution",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "checkin_down@2x.png resolution (128 x 130) should be 2x that of checkin_down.png (64 x 66). Expected resolution: 128 x 132.",
      "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
      "ruleName": "Unexpected retina image resolution",
      "ruleShortName": "RetinaImagesResolution",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetSecurePassword",
      "extent": {
        "end": {
          "byteColumn": 35,
          "byteOffset": 90980,
          "line": 2268,
          "utf16Column": 34,
          "utf16Offset": 90980
        },
        "start": {
          "byteColumn": 16,
          "byteOffset": 90961,
          "line": 2268,
          "utf16Column": 15,
          "utf16Offset": 90961
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "(temp) ? temp : @\"\"",
      "html": {
        "info": null,
        "ruleDescription": "Expressions of the form <code>(obj ? obj : other)</code> should be written as <code>obj ?: other</code>.",
        "ruleName": "Null coalescing operator usage",
        "ruleShortName": "NullCoalescingOp",
        "ruleWarning": "Please note that in the form <code>(obj ? obj : other)</code> the <code>obj</code> expression is evaluated twice, while in the <code>obj ?: other</code> form it is evaluated only once."
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "Expressions of the form (obj ? obj : other) should be written as obj ?: other.",
      "ruleName": "Null coalescing operator usage",
      "ruleShortName": "NullCoalescingOp",
      "ruleWarning": "Please note that in the form (obj ? obj : other) the obj expression is evaluated twice, while in the obj ?: other form it is evaluated only once.",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "centralManager:didDisconnectPeripheral:error:",
      "extent": {
        "end": {
          "byteColumn": 158,
          "byteOffset": 11437,
          "line": 347,
          "utf16Column": 157,
          "utf16Offset": 11436
        },
        "start": {
          "byteColumn": 26,
          "byteOffset": 11305,
          "line": 347,
          "utf16Column": 25,
          "utf16Offset": 11304
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"Dissconect\" message:@\"Disconnected\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">Dissconect</code>, <code class=\"fauxpas-string\">Disconnected</code>, <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings Dissconect, Disconnected, OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 143,
          "byteOffset": 384,
          "line": 13,
          "utf16Column": 143,
          "utf16Offset": 383
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 241,
          "line": 13,
          "utf16Column": 0,
          "utf16Offset": 240
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_SLCTestMode.h",
      "fileSnippet": "@interface Options_SLCTestMode : UIViewController<UITableViewDataSource,UITableViewDelegate,UIGestureRecognizerDelegate,FitKatTestModeDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "Options_SLCTestMode",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RemoveRecentLoc:",
      "extent": {
        "end": {
          "byteColumn": 85,
          "byteOffset": 84837,
          "line": 2059,
          "utf16Column": 84,
          "utf16Offset": 84837
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 84761,
          "line": 2059,
          "utf16Column": 8,
          "utf16Offset": 84761
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"[ERROR] COREDATA: Save raised an error - '%@'\", [error description])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "init",
      "extent": {
        "end": {
          "byteColumn": 23,
          "byteOffset": 1155,
          "line": 58,
          "utf16Column": 22,
          "utf16Offset": 1155
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 1141,
          "line": 58,
          "utf16Column": 8,
          "utf16Offset": 1141
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "packetdata = 0",
      "html": {
        "info": "Literal zero is assigned to pointer type variable or member. If this is intentional, use <code>NULL</code>, <code>nil</code>, or <code>Nil</code> instead.",
        "ruleDescription": "Assigning the literal zero to a pointer value might be an indication of a mistake where the programmer actually wanted to assign to an integer-typed member of the pointer type value. Assigning <code>NULL</code>, <code>nil</code>, or <code>Nil</code> instead suppresses warnings from this rule.",
        "ruleName": "Assignment of literal zero to pointer",
        "ruleShortName": "ZeroAssignmentToPointer",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "Literal zero is assigned to pointer type variable or member. If this is intentional, use NULL, nil, or Nil instead.",
      "ruleDescription": "Assigning the literal zero to a pointer value might be an indication of a mistake where the programmer actually wanted to assign to an integer-typed member of the pointer type value. Assigning NULL, nil, or Nil instead suppresses warnings from this rule.",
      "ruleName": "Assignment of literal zero to pointer",
      "ruleShortName": "ZeroAssignmentToPointer",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "updatecaptions",
      "extent": {
        "end": {
          "byteColumn": 51,
          "byteOffset": 3133,
          "line": 115,
          "utf16Column": 50,
          "utf16Offset": 3133
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 3091,
          "line": 115,
          "utf16Column": 8,
          "utf16Offset": 3091
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckinSettings_ViewController.m",
      "fileSnippet": "[lblTitle setText:@\"SAFETY TIMER ENABLED\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">SAFETY TIMER ENABLED</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string SAFETY TIMER ENABLED",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Main_ViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_default/emergencycancel_down.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 32,
          "byteOffset": 500,
          "line": 19,
          "utf16Column": 32,
          "utf16Offset": 500
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 468,
          "line": 19,
          "utf16Column": 0,
          "utf16Offset": 468
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FileNames.h",
      "fileSnippet": "@interface FileNames : NSObject ",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "FileNames",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/intercon_iamok/intercon_emergencywhite.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/Application icons/Safetylink1024.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/Application icons/Safetylink1024.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ReceivedMessage:data:",
      "extent": {
        "end": {
          "byteColumn": 44,
          "byteOffset": 68878,
          "line": 1920,
          "utf16Column": 43,
          "utf16Offset": 68878
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 68859,
          "line": 1920,
          "utf16Column": 24,
          "utf16Offset": 68859
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "NSLog(@\"Nav Login\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "finishedReceive:error:data:",
      "extent": {
        "end": {
          "byteColumn": 51,
          "byteOffset": 13341,
          "line": 352,
          "utf16Column": 50,
          "utf16Offset": 13340
        },
        "start": {
          "byteColumn": 21,
          "byteOffset": 13311,
          "line": 352,
          "utf16Column": 20,
          "utf16Offset": 13310
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_UserInfoVC.m",
      "fileSnippet": "NSLog(@\"Result Tag Not Found\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "DoConfigRequest",
      "extent": {
        "end": {
          "byteColumn": 117,
          "byteOffset": 51206,
          "line": 1267,
          "utf16Column": 116,
          "utf16Offset": 51206
        },
        "start": {
          "byteColumn": 45,
          "byteOffset": 51134,
          "line": 1267,
          "utf16Column": 44,
          "utf16Offset": 51134
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[[[NSBundle mainBundle] infoDictionary] objectForKey:@\"CFBundleVersion\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "SetSLBandUUID:name:",
      "extent": {
        "end": {
          "byteColumn": 107,
          "byteOffset": 3167,
          "line": 111,
          "utf16Column": 106,
          "utf16Offset": 3166
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 3085,
          "line": 111,
          "utf16Column": 24,
          "utf16Offset": 3084
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "name = [name stringByReplacingOccurrencesOfString:@\"PR125A\" withString:@\"SL BAND\"]",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "finishedReceive:error:data:",
      "extent": {
        "end": {
          "byteColumn": 148,
          "byteOffset": 26551,
          "line": 613,
          "utf16Column": 147,
          "utf16Offset": 26551
        },
        "start": {
          "byteColumn": 82,
          "byteOffset": 26485,
          "line": 613,
          "utf16Column": 81,
          "utf16Offset": 26485
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckSN_ViewController.m",
      "fileSnippet": "[[error userInfo] objectForKey:NSURLErrorFailingURLStringErrorKey]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 145,
          "byteOffset": 1291,
          "line": 40,
          "utf16Column": 144,
          "utf16Offset": 1290
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 1151,
          "line": 40,
          "utf16Column": 4,
          "utf16Offset": 1150
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_UserInfoVC.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillShow:) name:UIKeyboardWillShowNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "setalertrepeatcount:",
      "extent": {
        "end": {
          "byteColumn": 62,
          "byteOffset": 104559,
          "line": 2619,
          "utf16Column": 61,
          "utf16Offset": 104559
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 104522,
          "line": 2619,
          "utf16Column": 24,
          "utf16Offset": 104522
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[NSNumber numberWithInt:alertRepeats]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/BillingEntry.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 34,
          "byteOffset": 1365,
          "line": 46,
          "utf16Column": 34,
          "utf16Offset": 1365
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 1331,
          "line": 46,
          "utf16Column": 0,
          "utf16Offset": 1331
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@interface ThemeOptions : NSObject",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "ThemeOptions",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 140,
          "byteOffset": 362,
          "line": 12,
          "utf16Column": 140,
          "utf16Offset": 362
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 222,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 222
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Assist_ViewController.h",
      "fileSnippet": "@interface Assist_ViewController : UIViewController<UITableViewDataSource,UITableViewDelegate,UpdateGUIDelegate,UIGestureRecognizerDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "Assist_ViewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 14,
          "byteOffset": 82098,
          "line": 1982,
          "utf16Column": 13,
          "utf16Offset": 82098
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 82093,
          "line": 1982,
          "utf16Column": 8,
          "utf16Offset": 82093
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "error",
      "html": {
        "info": null,
        "ruleDescription": "Methods that pass back <code class=\"fauxpas-objcclass\">NSError</code> objects by reference return <code class=\"fauxpas-codesymbol\">NO</code> or <code class=\"fauxpas-codesymbol\">nil</code> to indicate an error condition. This rule warns if the <code class=\"fauxpas-objcclass\">NSError</code> pointer is checked against <code class=\"fauxpas-codesymbol\">nil</code> without checking the return value.",
        "ruleName": "Fragile error condition check",
        "ruleShortName": "ErrorConditionCheck",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Methods that pass back NSError objects by reference return NO or nil to indicate an error condition. This rule warns if the NSError pointer is checked against nil without checking the return value.",
      "ruleName": "Fragile error condition check",
      "ruleShortName": "ErrorConditionCheck",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "TCPPacket_SPTemplateReply",
      "extent": {
        "end": {
          "byteColumn": 39,
          "byteOffset": 5387,
          "line": 190,
          "utf16Column": 38,
          "utf16Offset": 5387
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 5349,
          "line": 190,
          "utf16Column": 0,
          "utf16Offset": 5349
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.h",
      "fileSnippet": "@property (nonatomic) NSString *level3",
      "html": {
        "info": "The <code>level3</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The level3 property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 145,
          "byteOffset": 12231,
          "line": 369,
          "utf16Column": 144,
          "utf16Offset": 12231
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 12091,
          "line": 369,
          "utf16Column": 4,
          "utf16Offset": 12091
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SignOn_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillShow:) name:UIKeyboardWillShowNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/common/aware360logo_trans_h90.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RegisterLocalNotifications",
      "extent": {
        "end": {
          "byteColumn": 71,
          "byteOffset": 71545,
          "line": 1725,
          "utf16Column": 70,
          "utf16Offset": 71545
        },
        "start": {
          "byteColumn": 43,
          "byteOffset": 71517,
          "line": 1725,
          "utf16Column": 42,
          "utf16Offset": 71517
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[allcurrent objectAtIndex:i]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSArray objectAtIndex:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSArray objectAtIndex:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "LevelData",
      "extent": {
        "end": {
          "byteColumn": 43,
          "byteOffset": 13869,
          "line": 346,
          "utf16Column": 42,
          "utf16Offset": 13869
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 13827,
          "line": 346,
          "utf16Column": 0,
          "utf16Offset": 13827
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.h",
      "fileSnippet": "@property (nonatomic) NSString *levelemail",
      "html": {
        "info": "The <code>levelemail</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The levelemail property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 140,
          "byteOffset": 362,
          "line": 12,
          "utf16Column": 140,
          "utf16Offset": 362
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 222,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 222
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SignOn_ViewController.h",
      "fileSnippet": "@interface SignOn_ViewController : UIViewController<UITableViewDataSource,UITableViewDelegate,UpdateGUIDelegate,UIGestureRecognizerDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "SignOn_ViewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "Encode:offset:size:",
      "extent": {
        "end": {
          "byteColumn": 36,
          "byteOffset": 34943,
          "line": 1033,
          "utf16Column": 35,
          "utf16Offset": 34943
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 34916,
          "line": 1033,
          "utf16Column": 8,
          "utf16Offset": 34916
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "sz = (GCSInt)[block length]",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 220,
          "byteOffset": 29478,
          "line": 745,
          "utf16Column": 219,
          "utf16Offset": 29478
        },
        "start": {
          "byteColumn": 36,
          "byteOffset": 29294,
          "line": 745,
          "utf16Column": 35,
          "utf16Offset": 29294
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Main_ViewController.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"Error\" message:@\"SafetyLink Companion Setup Not Complete. Go to Preferences?\" delegate:self cancelButtonTitle:@\"No\" otherButtonTitles: @\"Yes\", nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">Error</code>, <code class=\"fauxpas-string\">SafetyLink Companion Setup Not Complete. Go to Preferences?</code>, <code class=\"fauxpas-string\">No</code>, <code class=\"fauxpas-string\">Yes</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings Error, SafetyLink Companion Setup Not Complete. Go to Preferences?, No, Yes",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "Encrypt:bufsize:",
      "extent": {
        "end": {
          "byteColumn": 18,
          "byteOffset": 9620,
          "line": 299,
          "utf16Column": 17,
          "utf16Offset": 9620
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 9611,
          "line": 299,
          "utf16Column": 8,
          "utf16Offset": 9611
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Encryption.m",
      "fileSnippet": "--bufsize",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "peripheral:didWriteValueForCharacteristic:error:",
      "extent": {
        "end": {
          "byteColumn": 97,
          "byteOffset": 20239,
          "line": 596,
          "utf16Column": 96,
          "utf16Offset": 20238
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 20147,
          "line": 596,
          "utf16Column": 4,
          "utf16Offset": 20146
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "NSLog(@\"------------Write Value %@------------\", [characteristic.UUID representativeString])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ReceivedMessage:data:",
      "extent": {
        "end": {
          "byteColumn": 68,
          "byteOffset": 72021,
          "line": 1972,
          "utf16Column": 67,
          "utf16Offset": 72021
        },
        "start": {
          "byteColumn": 33,
          "byteOffset": 71986,
          "line": 1972,
          "utf16Column": 32,
          "utf16Offset": 71986
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "NSLog(@\"Rcvd %i\",sphdr.sequencenum)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "application:didReceiveRemoteNotification:",
      "extent": {
        "end": {
          "byteColumn": 65,
          "byteOffset": 2868,
          "line": 77,
          "utf16Column": 64,
          "utf16Offset": 2868
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 2812,
          "line": 77,
          "utf16Column": 8,
          "utf16Offset": 2812
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SafetyLinkAppDelegate.m",
      "fileSnippet": "NSLog(@\"Receive Local Notification Unknown %@\",alertMsg)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": "StorageContainer",
      "extent": {
        "end": {
          "byteColumn": 26,
          "byteOffset": 15524,
          "line": 448,
          "utf16Column": 25,
          "utf16Offset": 15524
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 15499,
          "line": 448,
          "utf16Column": 0,
          "utf16Offset": 15499
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "-(NSDate*)getOffDutyTime;",
      "html": {
        "info": "In Cocoa, it is idiomatic for accessor methods to be named in the form <code>something</code> instead of e.g. <code>getSomething</code>.",
        "ruleDescription": "Warns if getter methods are named in the form <code>getSomething</code> instead of <code>something</code>.",
        "ruleName": "Unidiomatic accessor naming",
        "ruleShortName": "UnidiomaticAccessorNaming",
        "ruleWarning": null
      },
      "identifier": "-[StorageContainer getOffDutyTime]",
      "impact": "Style",
      "info": "In Cocoa, it is idiomatic for accessor methods to be named in the form something instead of e.g. getSomething.",
      "ruleDescription": "Warns if getter methods are named in the form getSomething instead of something.",
      "ruleName": "Unidiomatic accessor naming",
      "ruleShortName": "UnidiomaticAccessorNaming",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:viewForHeaderInSection:",
      "extent": {
        "end": {
          "byteColumn": 49,
          "byteOffset": 2288,
          "line": 78,
          "utf16Column": 48,
          "utf16Offset": 2287
        },
        "start": {
          "byteColumn": 27,
          "byteOffset": 2266,
          "line": 78,
          "utf16Column": 26,
          "utf16Offset": 2265
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_NotificationsVC.m",
      "fileSnippet": "label.text = @\"Events\"",
      "html": {
        "info": "<code class=\"fauxpas-objcproperty\">UILabel.text</code> value set to string <code class=\"fauxpas-string\">Events</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "UILabel.text value set to string Events",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/HTTPHelper.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ContactInfo",
      "extent": {
        "end": {
          "byteColumn": 55,
          "byteOffset": 951,
          "line": 36,
          "utf16Column": 54,
          "utf16Offset": 951
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 897,
          "line": 36,
          "utf16Column": 0,
          "utf16Offset": 897
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *tollfreedisplay",
      "html": {
        "info": "The <code>tollfreedisplay</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The tollfreedisplay property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "peripheral:didDiscoverServices:",
      "extent": {
        "end": {
          "byteColumn": 162,
          "byteOffset": 16846,
          "line": 511,
          "utf16Column": 161,
          "utf16Offset": 16845
        },
        "start": {
          "byteColumn": 24,
          "byteOffset": 16708,
          "line": 511,
          "utf16Column": 23,
          "utf16Offset": 16707
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "[NSArray arrayWithObjects:[CBUUID UUIDWithString:FK_CHARACTERISTIC_USERSETTING],[CBUUID UUIDWithString:FK_CHARACTERISTIC_ACTIVITIES], nil]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSArray arrayWithObjects:]</code> is called. Consider using an Objective-C container literal expression instead.</p><p>NOTE: there is a crucial difference between the current implementation and the suggestion here: While a nil value for any of the given values to this method will only terminate the argument list, a nil value in the literal container expression will result in a runtime exception.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSArray arrayWithObjects:] is called. Consider using an Objective-C container literal expression instead.NOTE: there is a crucial difference between the current implementation and the suggestion here: While a nil value for any of the given values to this method will only terminate the argument list, a nil value in the literal container expression will result in a runtime exception.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 143,
          "byteOffset": 12459,
          "line": 373,
          "utf16Column": 142,
          "utf16Offset": 12459
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 12321,
          "line": 373,
          "utf16Column": 4,
          "utf16Offset": 12321
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/BillingInfo_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardDidShow:) name:UIKeyboardDidShowNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 55,
          "byteOffset": 5239,
          "line": 149,
          "utf16Column": 54,
          "utf16Offset": 5238
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 5209,
          "line": 149,
          "utf16Column": 24,
          "utf16Offset": 5208
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_AppInfoVC.m",
      "fileSnippet": "[cellTitle setText:@\"Battery\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Battery</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Battery",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/telelink_journey/telelink_iconcheckinselected2.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "displaysinglealert:body:type:",
      "extent": {
        "end": {
          "byteColumn": 149,
          "byteOffset": 101889,
          "line": 2555,
          "utf16Column": 148,
          "utf16Offset": 101889
        },
        "start": {
          "byteColumn": 34,
          "byteOffset": 101774,
          "line": 2555,
          "utf16Column": 33,
          "utf16Offset": 101774
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:title message:body delegate:self cancelButtonTitle:@\"OK\" otherButtonTitles: nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with string <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with string OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CommentsDelegate.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_default/assist_down@2x.png",
      "fileSnippet": null,
      "html": {
        "info": "<div class=\"fauxpas-filename\">assist_down@2x.png</div> resolution (128 x 130) should be 2x that of <div class=\"fauxpas-filename\">assist_down.png</div> (64 x 66). Expected resolution: 128 x 132.",
        "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
        "ruleName": "Unexpected retina image resolution",
        "ruleShortName": "RetinaImagesResolution",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "assist_down@2x.png resolution (128 x 130) should be 2x that of assist_down.png (64 x 66). Expected resolution: 128 x 132.",
      "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
      "ruleName": "Unexpected retina image resolution",
      "ruleShortName": "RetinaImagesResolution",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_default/hazard_down@2x.png",
      "fileSnippet": null,
      "html": {
        "info": "<div class=\"fauxpas-filename\">hazard_down@2x.png</div> resolution (128 x 130) should be 2x that of <div class=\"fauxpas-filename\">hazard_down.png</div> (64 x 66). Expected resolution: 128 x 132.",
        "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
        "ruleName": "Unexpected retina image resolution",
        "ruleShortName": "RetinaImagesResolution",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "hazard_down@2x.png resolution (128 x 130) should be 2x that of hazard_down.png (64 x 66). Expected resolution: 128 x 132.",
      "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
      "ruleName": "Unexpected retina image resolution",
      "ruleShortName": "RetinaImagesResolution",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "application:didReceiveRemoteNotification:",
      "extent": {
        "end": {
          "byteColumn": 68,
          "byteOffset": 2781,
          "line": 73,
          "utf16Column": 67,
          "utf16Offset": 2781
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 2722,
          "line": 73,
          "utf16Column": 8,
          "utf16Offset": 2722
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SafetyLinkAppDelegate.m",
      "fileSnippet": "NSLog(@\"Receive Local Notification Background %@\",alertMsg)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "locationManager:didFailWithError:",
      "extent": {
        "end": {
          "byteColumn": 38,
          "byteOffset": 6057,
          "line": 146,
          "utf16Column": 37,
          "utf16Offset": 6057
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 6024,
          "line": 146,
          "utf16Column": 4,
          "utf16Offset": 6024
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/LocationController.m",
      "fileSnippet": "NSLog(@\"Recevied Location Error\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ContactInfo",
      "extent": {
        "end": {
          "byteColumn": 52,
          "byteOffset": 1219,
          "line": 41,
          "utf16Column": 51,
          "utf16Offset": 1219
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1168,
          "line": 41,
          "utf16Column": 0,
          "utf16Offset": 1168
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *websitevalue",
      "html": {
        "info": "The <code>websitevalue</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The websitevalue property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "butPhoneMonitorClick:",
      "extent": {
        "end": {
          "byteColumn": 124,
          "byteOffset": 8446,
          "line": 241,
          "utf16Column": 123,
          "utf16Offset": 8446
        },
        "start": {
          "byteColumn": 30,
          "byteOffset": 8201,
          "line": 240,
          "utf16Column": 29,
          "utf16Offset": 8201
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SOS_ViewController.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"Contact Monitor Center\" message:@\"Are you sure you want to call the Monitor Center?\"\n                                                       delegate:self cancelButtonTitle:@\"No\" otherButtonTitles:@\"Yes\", nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">Contact Monitor Center</code>, <code class=\"fauxpas-string\">Are you sure you want to call the Monitor Center?</code>, <code class=\"fauxpas-string\">No</code>, <code class=\"fauxpas-string\">Yes</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings Contact Monitor Center, Are you sure you want to call the Monitor Center?, No, Yes",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "butSubmitClick:",
      "extent": {
        "end": {
          "byteColumn": 118,
          "byteOffset": 828,
          "line": 26,
          "utf16Column": 117,
          "utf16Offset": 828
        },
        "start": {
          "byteColumn": 27,
          "byteOffset": 627,
          "line": 25,
          "utf16Column": 26,
          "utf16Offset": 627
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SetPassword_ViewController.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"Input Error\" message:@\"Email cannot be empty.\"\n                                                    delegate:self cancelButtonTitle:@\"OK\" otherButtonTitles:nil, nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">Input Error</code>, <code class=\"fauxpas-string\">Email cannot be empty.</code>, <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings Input Error, Email cannot be empty., OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RegisterLocalNotifications",
      "extent": {
        "end": {
          "byteColumn": 119,
          "byteOffset": 69136,
          "line": 1685,
          "utf16Column": 118,
          "utf16Offset": 69136
        },
        "start": {
          "byteColumn": 77,
          "byteOffset": 69094,
          "line": 1685,
          "utf16Column": 76,
          "utf16Offset": 69094
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[NSNumber numberWithInt:LNT_HAZARD_EXPIRE]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 85,
          "byteOffset": 4827,
          "line": 163,
          "utf16Column": 84,
          "utf16Offset": 4826
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 4755,
          "line": 163,
          "utf16Column": 12,
          "utf16Offset": 4754
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_SLCTestMode.m",
      "fileSnippet": "[cellTitle setText:@\"Double press the SOS button to test the SOS event\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Double press the SOS button to test the SOS event</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Double press the SOS button to test the SOS event",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "PrepareSendData:eventtype:",
      "extent": {
        "end": {
          "byteColumn": 73,
          "byteOffset": 49364,
          "line": 1475,
          "utf16Column": 72,
          "utf16Offset": 49364
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 49316,
          "line": 1475,
          "utf16Column": 24,
          "utf16Offset": 49316
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "NSLog(@\"Send SOS Cancel On %i\",send.sequencenum)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "ConnectToHostPort",
      "extent": {
        "end": {
          "byteColumn": 44,
          "byteOffset": 28292,
          "line": 814,
          "utf16Column": 43,
          "utf16Offset": 28292
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 28261,
          "line": 814,
          "utf16Column": 12,
          "utf16Offset": 28261
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "[outputStream setDelegate:self]",
      "html": {
        "info": "TCPComms attaches itself as a <code class=\"fauxpas-objcclass\">NSOutputStream</code> delegate, but does not detach in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>.",
        "ruleDescription": "When an object sets itself as the delegate or data source of one of its members, it must detach that reference in its <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code> method.",
        "ruleName": "Undetached delegate or data source",
        "ruleShortName": "UndetachedDelegate",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "TCPComms attaches itself as a NSOutputStream delegate, but does not detach in -[NSObject dealloc].",
      "ruleDescription": "When an object sets itself as the delegate or data source of one of its members, it must detach that reference in its -[NSObject dealloc] method.",
      "ruleName": "Undetached delegate or data source",
      "ruleShortName": "UndetachedDelegate",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "PrepareSendData:eventtype:",
      "extent": {
        "end": {
          "byteColumn": 66,
          "byteOffset": 47760,
          "line": 1445,
          "utf16Column": 65,
          "utf16Offset": 47760
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 47719,
          "line": 1445,
          "utf16Column": 24,
          "utf16Offset": 47719
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "NSLog(@\"Send Hazard %i\",send.sequencenum)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_default/hazardcancel_up@2x.png",
      "fileSnippet": null,
      "html": {
        "info": "<div class=\"fauxpas-filename\">hazardcancel_up@2x.png</div> resolution (128 x 130) should be 2x that of <div class=\"fauxpas-filename\">hazardcancel_up.png</div> (64 x 66). Expected resolution: 128 x 132.",
        "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
        "ruleName": "Unexpected retina image resolution",
        "ruleShortName": "RetinaImagesResolution",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "hazardcancel_up@2x.png resolution (128 x 130) should be 2x that of hazardcancel_up.png (64 x 66). Expected resolution: 128 x 132.",
      "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
      "ruleName": "Unexpected retina image resolution",
      "ruleShortName": "RetinaImagesResolution",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_default/assistcancel_up@2x.png",
      "fileSnippet": null,
      "html": {
        "info": "<div class=\"fauxpas-filename\">assistcancel_up@2x.png</div> resolution (128 x 130) should be 2x that of <div class=\"fauxpas-filename\">assistcancel_up.png</div> (64 x 66). Expected resolution: 128 x 132.",
        "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
        "ruleName": "Unexpected retina image resolution",
        "ruleShortName": "RetinaImagesResolution",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "assistcancel_up@2x.png resolution (128 x 130) should be 2x that of assistcancel_up.png (64 x 66). Expected resolution: 128 x 132.",
      "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
      "ruleName": "Unexpected retina image resolution",
      "ruleShortName": "RetinaImagesResolution",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_default/assist_down.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_default/hazard_down.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ScheduleOption",
      "extent": {
        "end": {
          "byteColumn": 36,
          "byteOffset": 14300,
          "line": 361,
          "utf16Column": 35,
          "utf16Offset": 14300
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 14265,
          "line": 361,
          "utf16Column": 0,
          "utf16Offset": 14265
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.h",
      "fileSnippet": "@property (nonatomic) NSString *msg",
      "html": {
        "info": "The <code>msg</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The msg property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "TCPComms",
      "extent": {
        "end": {
          "byteColumn": 47,
          "byteOffset": 7188,
          "line": 261,
          "utf16Column": 46,
          "utf16Offset": 7188
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 7142,
          "line": 261,
          "utf16Column": 0,
          "utf16Offset": 7142
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *hosturi",
      "html": {
        "info": "The <code>hosturi</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The hosturi property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 143,
          "byteOffset": 8033,
          "line": 197,
          "utf16Column": 142,
          "utf16Offset": 8033
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 7895,
          "line": 197,
          "utf16Column": 4,
          "utf16Offset": 7895
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SetPassword_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardDidShow:) name:UIKeyboardDidShowNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetEventBody:",
      "extent": {
        "end": {
          "byteColumn": 71,
          "byteOffset": 9242,
          "line": 283,
          "utf16Column": 70,
          "utf16Offset": 9242
        },
        "start": {
          "byteColumn": 43,
          "byteOffset": 9214,
          "line": 283,
          "utf16Column": 42,
          "utf16Offset": 9214
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "[eventbody objectForKey:key]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/intercon_iamok/intercon_backblue.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "PrepareSendData:eventtype:",
      "extent": {
        "end": {
          "byteColumn": 67,
          "byteOffset": 47500,
          "line": 1440,
          "utf16Column": 66,
          "utf16Offset": 47500
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 47458,
          "line": 1440,
          "utf16Column": 24,
          "utf16Offset": 47458
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "NSLog(@\"Send OffDuty %i\",send.sequencenum)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "dealloc",
      "extent": {
        "end": {
          "byteColumn": 17,
          "byteOffset": 5475,
          "line": 177,
          "utf16Column": 16,
          "utf16Offset": 5473
        },
        "start": {
          "byteColumn": 2,
          "byteOffset": 5460,
          "line": 177,
          "utf16Column": 1,
          "utf16Offset": 5458
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SMXMLDocument.m",
      "fileSnippet": "self.root = nil",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "root",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "loadConfigWhileRunning:",
      "extent": {
        "end": {
          "byteColumn": 76,
          "byteOffset": 8425,
          "line": 277,
          "utf16Column": 75,
          "utf16Offset": 8425
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 8358,
          "line": 277,
          "utf16Column": 8,
          "utf16Offset": 8358
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"%@ %@\",@\"Error in Configuration Response\",exception.reason)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "SendStartStopJourney:",
      "extent": {
        "end": {
          "byteColumn": 255,
          "byteOffset": 61134,
          "line": 1513,
          "utf16Column": 254,
          "utf16Offset": 61134
        },
        "start": {
          "byteColumn": 31,
          "byteOffset": 60910,
          "line": 1513,
          "utf16Column": 30,
          "utf16Offset": 60910
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[[NSArray alloc] initWithObjects:@\"---Stop Journey\", [@\"CurrentLoc=\" stringByAppendingString:selectedlocation] , [@\"DestLoc=\" stringByAppendingString:billingselect] , [@\"RouteDetails=\" stringByAppendingString:comments], nil]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSArray initWithObjects:]</code> is called. Consider using an Objective-C container literal expression instead.</p><p>NOTE: there is a crucial difference between the current implementation and the suggestion here: While a nil value for any of the given values to this method will only terminate the argument list, a nil value in the literal container expression will result in a runtime exception.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSArray initWithObjects:] is called. Consider using an Objective-C container literal expression instead.NOTE: there is a crucial difference between the current implementation and the suggestion here: While a nil value for any of the given values to this method will only terminate the argument list, a nil value in the literal container expression will result in a runtime exception.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "viewWillAppear:",
      "extent": {
        "end": {
          "byteColumn": 81,
          "byteOffset": 3553,
          "line": 114,
          "utf16Column": 80,
          "utf16Offset": 3553
        },
        "start": {
          "byteColumn": 52,
          "byteOffset": 3524,
          "line": 114,
          "utf16Column": 51,
          "utf16Offset": 3524
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Checkin_ViewController.m",
      "fileSnippet": "[visibleRows objectAtIndex:0]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSArray objectAtIndex:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSArray objectAtIndex:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": null,
      "fileSnippet": null,
      "html": {
        "info": "<p>The value of the build setting <code>FRAMEWORK_SEARCH_PATHS</code> contains the absolute path <div class=\"fauxpas-filepath\">/Users/MButler/Documents/XCode Projects/test1</div>. Make this path relative instead by using an appropriate build setting variable (e.g. <code>$(SRCROOT)</code>, <code>$(CONFIGURATION_BUILD_DIR)</code> or <code>$(SDKROOT)</code>).</p><p>Target <div class=\"fauxpas-target\">SafetyLink</div> build settings, build configuration <div class=\"fauxpas-buildconfig\">Release</div></p>",
        "ruleDescription": "The project build configurations should not contain absolute path references. This will become a problem as soon as the project is moved to another developer’s computer.",
        "ruleName": "Absolute path in build setting value",
        "ruleShortName": "AbsPathInBuildSetting",
        "ruleWarning": null
      },
      "identifier": "FRAMEWORK_SEARCH_PATHS",
      "impact": "Maintainability",
      "info": "The value of the build setting FRAMEWORK_SEARCH_PATHS contains the absolute path /Users/MButler/Documents/XCode Projects/test1. Make this path relative instead by using an appropriate build setting variable (e.g. $(SRCROOT), $(CONFIGURATION_BUILD_DIR) or $(SDKROOT)).Target SafetyLink build settings, build configuration Release",
      "ruleDescription": "The project build configurations should not contain absolute path references. This will become a problem as soon as the project is moved to another developer’s computer.",
      "ruleName": "Absolute path in build setting value",
      "ruleShortName": "AbsPathInBuildSetting",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "Context",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 12120,
          "line": 399,
          "utf16Column": 13,
          "utf16Offset": 12120
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 12107,
          "line": 398,
          "utf16Column": 0,
          "utf16Offset": 12107
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.m",
      "fileSnippet": "-(id)userInfo",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[UIAlertView userInfo]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "UpdateUserSettingsNameEmail:useremail:",
      "extent": {
        "end": {
          "byteColumn": 110,
          "byteOffset": 94233,
          "line": 2373,
          "utf16Column": 109,
          "utf16Offset": 94233
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 94128,
          "line": 2373,
          "utf16Column": 4,
          "utf16Offset": 94128
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "useremail = [useremail stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]]",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": null,
      "fileSnippet": null,
      "html": {
        "info": "<strong>Temporary files</strong> should be ignored in the version control system. The un-ignored paths are: <ul><li><code>*.swp</code></li></ul>",
        "ruleDescription": "Warns whenever some files that are recommended to be ignored by the version control system are not ignored, or vice versa.",
        "ruleName": "Recommended VCS ignores",
        "ruleShortName": "RecommendedVCSIgnores",
        "ruleWarning": null
      },
      "identifier": "Temporary files",
      "impact": "Maintainability",
      "info": "Temporary files should be ignored in the version control system. The un-ignored paths are: *.swp",
      "ruleDescription": "Warns whenever some files that are recommended to be ignored by the version control system are not ignored, or vice versa.",
      "ruleName": "Recommended VCS ignores",
      "ruleShortName": "RecommendedVCSIgnores",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/common/sendsuccess.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "doAlertCheckin:body:",
      "extent": {
        "end": {
          "byteColumn": 139,
          "byteOffset": 94919,
          "line": 2395,
          "utf16Column": 138,
          "utf16Offset": 94919
        },
        "start": {
          "byteColumn": 24,
          "byteOffset": 94804,
          "line": 2395,
          "utf16Column": 23,
          "utf16Offset": 94804
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:title message:body delegate:self cancelButtonTitle:@\"OK\" otherButtonTitles: nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with string <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with string OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "dealloc",
      "extent": {
        "end": {
          "byteColumn": 23,
          "byteOffset": 1195,
          "line": 31,
          "utf16Column": 22,
          "utf16Offset": 1195
        },
        "start": {
          "byteColumn": 2,
          "byteOffset": 1174,
          "line": 31,
          "utf16Column": 1,
          "utf16Offset": 1174
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SMXMLDocument.m",
      "fileSnippet": "self.attributes = nil",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "attributes",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "viewWillAppear:",
      "extent": {
        "end": {
          "byteColumn": 64,
          "byteOffset": 5420,
          "line": 130,
          "utf16Column": 63,
          "utf16Offset": 5420
        },
        "start": {
          "byteColumn": 35,
          "byteOffset": 5391,
          "line": 130,
          "utf16Column": 34,
          "utf16Offset": 5391
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SettingPickList_ViewController.m",
      "fileSnippet": "capTitle.text=@\"REPEAT ALERT\"",
      "html": {
        "info": "<code class=\"fauxpas-objcproperty\">UILabel.text</code> value set to string <code class=\"fauxpas-string\">REPEAT ALERT</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "UILabel.text value set to string REPEAT ALERT",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ConnectionStatusUpdated",
      "extent": {
        "end": {
          "byteColumn": 72,
          "byteOffset": 7476,
          "line": 226,
          "utf16Column": 71,
          "utf16Offset": 7476
        },
        "start": {
          "byteColumn": 44,
          "byteOffset": 7448,
          "line": 226,
          "utf16Column": 43,
          "utf16Offset": 7448
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/NetActivityView.m",
      "fileSnippet": "caplicexpirein.text=@\"Today\"",
      "html": {
        "info": "<code class=\"fauxpas-objcproperty\">UILabel.text</code> value set to string <code class=\"fauxpas-string\">Today</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "UILabel.text value set to string Today",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_ViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckSN_ViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/MsgInfo_ViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/OffTime_ViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Checkin_ViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RegisterLocalNotifications",
      "extent": {
        "end": {
          "byteColumn": 116,
          "byteOffset": 74501,
          "line": 1770,
          "utf16Column": 115,
          "utf16Offset": 74501
        },
        "start": {
          "byteColumn": 73,
          "byteOffset": 74458,
          "line": 1770,
          "utf16Column": 72,
          "utf16Offset": 74458
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[NSNumber numberWithInt:LNT_OFFDUTY_EXPIRE]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SignOff_ViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 31,
          "byteOffset": 6723,
          "line": 239,
          "utf16Column": 31,
          "utf16Offset": 6723
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 6692,
          "line": 239,
          "utf16Column": 0,
          "utf16Offset": 6692
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.h",
      "fileSnippet": "@interface EventBody : NSObject",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "EventBody",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "SMXMLElement",
      "extent": {
        "end": {
          "byteColumn": 48,
          "byteOffset": 1757,
          "line": 46,
          "utf16Column": 47,
          "utf16Offset": 1757
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1710,
          "line": 46,
          "utf16Column": 0,
          "utf16Offset": 1710
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SMXMLDocument.h",
      "fileSnippet": "@property (nonatomic, retain) NSArray *children",
      "html": {
        "info": "The <code>children</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The children property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "butConfimClick:",
      "extent": {
        "end": {
          "byteColumn": 126,
          "byteOffset": 7743,
          "line": 224,
          "utf16Column": 125,
          "utf16Offset": 7743
        },
        "start": {
          "byteColumn": 23,
          "byteOffset": 7640,
          "line": 224,
          "utf16Column": 22,
          "utf16Offset": 7640
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/ConfigureTemplates_ViewController.m",
      "fileSnippet": "[[ [storeCon contactsettings]level2source] objectForKey:[[storeCon contactsettings]selected_level2key]]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RegisterLocalNotifications",
      "extent": {
        "end": {
          "byteColumn": 116,
          "byteOffset": 68127,
          "line": 1664,
          "utf16Column": 115,
          "utf16Offset": 68127
        },
        "start": {
          "byteColumn": 73,
          "byteOffset": 68084,
          "line": 1664,
          "utf16Column": 72,
          "utf16Offset": 68084
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[NSNumber numberWithInt:LNT_CHECKIN_EXPIRE]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetUserEmail",
      "extent": {
        "end": {
          "byteColumn": 66,
          "byteOffset": 91125,
          "line": 2276,
          "utf16Column": 65,
          "utf16Offset": 91125
        },
        "start": {
          "byteColumn": 26,
          "byteOffset": 91085,
          "line": 2276,
          "utf16Column": 25,
          "utf16Offset": 91085
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[usersettings objectForKey:@\"useremail\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 159,
          "byteOffset": 381,
          "line": 12,
          "utf16Column": 159,
          "utf16Offset": 381
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 222,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 222
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Hazard_ViewController.h",
      "fileSnippet": "@interface Hazard_ViewController : UIViewController<UITableViewDataSource,UITableViewDelegate,UpdateGUIDelegate,UIGestureRecognizerDelegate,UITextViewDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "Hazard_ViewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 58,
          "byteOffset": 9137,
          "line": 228,
          "utf16Column": 57,
          "utf16Offset": 9136
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 9104,
          "line": 228,
          "utf16Column": 24,
          "utf16Offset": 9103
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_AppInfoVC.m",
      "fileSnippet": "[cellTitle setText:@\"Reg Server\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Reg Server</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Reg Server",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 184,
          "byteOffset": 408,
          "line": 12,
          "utf16Column": 184,
          "utf16Offset": 408
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 224,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 224
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Location_ViewController.h",
      "fileSnippet": "@interface Location_ViewController : UIViewController<UITableViewDataSource,UITableViewDelegate,UpdateLocationDelegate,UpdateConnDelegate,UpdateGUIDelegate,UIGestureRecognizerDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "Location_ViewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "ShowActivityView:cancmsg:",
      "extent": {
        "end": {
          "byteColumn": 30,
          "byteOffset": 2948,
          "line": 90,
          "utf16Column": 29,
          "utf16Offset": 2948
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 2927,
          "line": 90,
          "utf16Column": 8,
          "utf16Offset": 2927
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/ConfigureTemplates_ViewController.m",
      "fileSnippet": "netview.delegate=self",
      "html": {
        "info": "ConfigureTemplates_ViewController attaches itself as a <code class=\"fauxpas-objcclass\">NetActivityView</code> delegate, but does not detach in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>.",
        "ruleDescription": "When an object sets itself as the delegate or data source of one of its members, it must detach that reference in its <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code> method.",
        "ruleName": "Undetached delegate or data source",
        "ruleShortName": "UndetachedDelegate",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "ConfigureTemplates_ViewController attaches itself as a NetActivityView delegate, but does not detach in -[NSObject dealloc].",
      "ruleDescription": "When an object sets itself as the delegate or data source of one of its members, it must detach that reference in its -[NSObject dealloc] method.",
      "ruleName": "Undetached delegate or data source",
      "ruleShortName": "UndetachedDelegate",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "displaysinglealert:body:type:",
      "extent": {
        "end": {
          "byteColumn": 74,
          "byteOffset": 100338,
          "line": 2517,
          "utf16Column": 73,
          "utf16Offset": 100338
        },
        "start": {
          "byteColumn": 45,
          "byteOffset": 100309,
          "line": 2517,
          "utf16Column": 44,
          "utf16Offset": 100309
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[NSNumber numberWithInt:type]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "butPhoneMonitorClick:",
      "extent": {
        "end": {
          "byteColumn": 124,
          "byteOffset": 8208,
          "line": 211,
          "utf16Column": 123,
          "utf16Offset": 8208
        },
        "start": {
          "byteColumn": 30,
          "byteOffset": 7963,
          "line": 210,
          "utf16Column": 29,
          "utf16Offset": 7963
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Main_ViewController.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"Contact Monitor Center\" message:@\"Are you sure you want to call the Monitor Center?\"\n                                                       delegate:self cancelButtonTitle:@\"No\" otherButtonTitles:@\"Yes\", nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">Contact Monitor Center</code>, <code class=\"fauxpas-string\">Are you sure you want to call the Monitor Center?</code>, <code class=\"fauxpas-string\">No</code>, <code class=\"fauxpas-string\">Yes</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings Contact Monitor Center, Are you sure you want to call the Monitor Center?, No, Yes",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ScheduleLocalNotification:alertbody:type:",
      "extent": {
        "end": {
          "byteColumn": 125,
          "byteOffset": 6168,
          "line": 170,
          "utf16Column": 124,
          "utf16Offset": 6168
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 6056,
          "line": 170,
          "utf16Column": 12,
          "utf16Offset": 6056
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.m",
      "fileSnippet": "[[[StorageContainer singleInstance] singlenotifications] setObject:notlist forKey:[NSNumber numberWithInt:type]]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSMutableDictionary setObject:forKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSMutableDictionary setObject:forKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "TCPPacket_SPHeader",
      "extent": {
        "end": {
          "byteColumn": 48,
          "byteOffset": 2212,
          "line": 85,
          "utf16Column": 47,
          "utf16Offset": 2212
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 2165,
          "line": 85,
          "utf16Column": 0,
          "utf16Offset": 2165
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.h",
      "fileSnippet": "@property (nonatomic,retain) NSData *packetdata",
      "html": {
        "info": "The <code>packetdata</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The packetdata property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_commercial/aware360icon_orange.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TextMessage.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 69,
          "byteOffset": 4571,
          "line": 156,
          "utf16Column": 68,
          "utf16Offset": 4570
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 4519,
          "line": 156,
          "utf16Column": 16,
          "utf16Offset": 4518
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_SLCTestMode.m",
      "fileSnippet": "[cellTitle setText:@\"SafetyLink Band Not Connected\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">SafetyLink Band Not Connected</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string SafetyLink Band Not Connected",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RegisterLocalNotifications",
      "extent": {
        "end": {
          "byteColumn": 118,
          "byteOffset": 68010,
          "line": 1663,
          "utf16Column": 117,
          "utf16Offset": 68010
        },
        "start": {
          "byteColumn": 73,
          "byteOffset": 67965,
          "line": 1663,
          "utf16Column": 72,
          "utf16Offset": 67965
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[NSNumber numberWithInt:LNT_CHECKIN_PREWARN2]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 46,
          "byteOffset": 5713,
          "line": 144,
          "utf16Column": 45,
          "utf16Offset": 5712
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 5680,
          "line": 144,
          "utf16Column": 12,
          "utf16Offset": 5679
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_SLCompanionVC.m",
      "fileSnippet": "cellvalue.text=@\"SafetyLink Band\"",
      "html": {
        "info": "<code class=\"fauxpas-objcproperty\">UILabel.text</code> value set to string <code class=\"fauxpas-string\">SafetyLink Band</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "UILabel.text value set to string SafetyLink Band",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "TCPPacket_SPTemplateReply",
      "extent": {
        "end": {
          "byteColumn": 39,
          "byteOffset": 5347,
          "line": 189,
          "utf16Column": 38,
          "utf16Offset": 5347
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 5309,
          "line": 189,
          "utf16Column": 0,
          "utf16Offset": 5309
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.h",
      "fileSnippet": "@property (nonatomic) NSString *level2",
      "html": {
        "info": "The <code>level2</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The level2 property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ChangeHeader:",
      "extent": {
        "end": {
          "byteColumn": 30,
          "byteOffset": 41057,
          "line": 1251,
          "utf16Column": 29,
          "utf16Offset": 41057
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 41040,
          "line": 1251,
          "utf16Column": 12,
          "utf16Offset": 41040
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "[Constants alloc]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "Constants",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 49,
          "byteOffset": 9917,
          "line": 223,
          "utf16Column": 48,
          "utf16Offset": 9916
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 9881,
          "line": 223,
          "utf16Column": 12,
          "utf16Offset": 9880
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_SLCompanionVC.m",
      "fileSnippet": "[cellTitle setText:@\"Factory Reset\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Factory Reset</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Factory Reset",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 83,
          "byteOffset": 11611,
          "line": 353,
          "utf16Column": 82,
          "utf16Offset": 11611
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 11541,
          "line": 353,
          "utf16Column": 12,
          "utf16Offset": 11541
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/BillingInfo_ViewController.m",
      "fileSnippet": "[butStartStop setTitle:@\"START JOURNEY\" forState:UIControlStateNormal]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIButton setTitle:forState:]</code> called with string <code class=\"fauxpas-string\">START JOURNEY</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIButton setTitle:forState:] called with string START JOURNEY",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RemoveRecentBillingAtIndex:",
      "extent": {
        "end": {
          "byteColumn": 63,
          "byteOffset": 87941,
          "line": 2155,
          "utf16Column": 62,
          "utf16Offset": 87941
        },
        "start": {
          "byteColumn": 28,
          "byteOffset": 87906,
          "line": 2155,
          "utf16Column": 27,
          "utf16Offset": 87906
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[recentbillentry objectAtIndex:idx]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSArray objectAtIndex:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSArray objectAtIndex:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 132,
          "byteOffset": 10909,
          "line": 286,
          "utf16Column": 131,
          "utf16Offset": 10909
        },
        "start": {
          "byteColumn": 30,
          "byteOffset": 10807,
          "line": 286,
          "utf16Column": 29,
          "utf16Offset": 10807
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/ConfigureTemplates_ViewController.m",
      "fileSnippet": "[[[storeCon contactsettings]level4source] objectForKey:[[storeCon contactsettings]selected_level4key]]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 75,
          "byteOffset": 9993,
          "line": 224,
          "utf16Column": 74,
          "utf16Offset": 9992
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 9931,
          "line": 224,
          "utf16Column": 12,
          "utf16Offset": 9930
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_SLCompanionVC.m",
      "fileSnippet": "[cellDesc setText:@\"Set the Safetylink Band to shipping mode\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Set the Safetylink Band to shipping mode</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Set the Safetylink Band to shipping mode",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetContactSettingsFileName",
      "extent": {
        "end": {
          "byteColumn": 42,
          "byteOffset": 1319,
          "line": 47,
          "utf16Column": 41,
          "utf16Offset": 1319
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 1290,
          "line": 47,
          "utf16Column": 12,
          "utf16Offset": 1290
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FileNames.m",
      "fileSnippet": "[FileNames GetPreferencesDir]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "FileNames",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 143,
          "byteOffset": 12518,
          "line": 371,
          "utf16Column": 142,
          "utf16Offset": 12518
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 12380,
          "line": 371,
          "utf16Column": 4,
          "utf16Offset": 12380
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SignOn_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardDidShow:) name:UIKeyboardDidShowNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "finishedReceive:error:data:",
      "extent": {
        "end": {
          "byteColumn": 56,
          "byteOffset": 53128,
          "line": 1304,
          "utf16Column": 55,
          "utf16Offset": 53128
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 53097,
          "line": 1304,
          "utf16Column": 24,
          "utf16Offset": 53097
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"Configuration Updated\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 30,
          "byteOffset": 214,
          "line": 10,
          "utf16Column": 29,
          "utf16Offset": 214
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 193,
          "line": 10,
          "utf16Column": 8,
          "utf16Offset": 193
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/GCSTypes.h",
      "fileSnippet": "SafetyLink_GCSTypes_h",
      "html": {
        "info": null,
        "ruleDescription": "Simplify the header by replacing the macro definition check -based include guard with the ‘once’ pragma.",
        "ruleName": "Macro-based include guard",
        "ruleShortName": "MacroBasedIncludeGuard",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "Simplify the header by replacing the macro definition check -based include guard with the ‘once’ pragma.",
      "ruleName": "Macro-based include guard",
      "ruleShortName": "MacroBasedIncludeGuard",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_commercial/aware360_iconassist.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ContactSettings",
      "extent": {
        "end": {
          "byteColumn": 58,
          "byteOffset": 5112,
          "line": 165,
          "utf16Column": 57,
          "utf16Offset": 5112
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 5055,
          "line": 165,
          "utf16Column": 0,
          "utf16Offset": 5055
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *selected_level2key",
      "html": {
        "info": "The <code>selected_level2key</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The selected_level2key property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "application:didRegisterForRemoteNotificationsWithDeviceToken:",
      "extent": {
        "end": {
          "byteColumn": 43,
          "byteOffset": 6552,
          "line": 156,
          "utf16Column": 42,
          "utf16Offset": 6552
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 6514,
          "line": 156,
          "utf16Column": 4,
          "utf16Offset": 6514
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SafetyLinkAppDelegate.m",
      "fileSnippet": "NSLog(@\"My token is: %@\", deviceToken)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "centralManager:didDiscoverPeripheral:advertisementData:RSSI:",
      "extent": {
        "end": {
          "byteColumn": 110,
          "byteOffset": 9748,
          "line": 317,
          "utf16Column": 109,
          "utf16Offset": 9747
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 9647,
          "line": 317,
          "utf16Column": 8,
          "utf16Offset": 9646
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "NSLog(@\"Discovered %@ : %@ : %@\",peripheral.name,peripheral.identifier.UUIDString,[RSSI stringValue])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CreateLicenseSN",
      "extent": {
        "end": {
          "byteColumn": 52,
          "byteOffset": 3798,
          "line": 97,
          "utf16Column": 51,
          "utf16Offset": 3798
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 3755,
          "line": 97,
          "utf16Column": 8,
          "utf16Offset": 3755
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckSN_ViewController.m",
      "fileSnippet": "NSLog(@\"%@\",@\"Error creating license file\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Encryption.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetRegRequest",
      "extent": {
        "end": {
          "byteColumn": 117,
          "byteOffset": 4514,
          "line": 108,
          "utf16Column": 116,
          "utf16Offset": 4514
        },
        "start": {
          "byteColumn": 45,
          "byteOffset": 4442,
          "line": 108,
          "utf16Column": 44,
          "utf16Offset": 4442
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckSN_ViewController.m",
      "fileSnippet": "[[[NSBundle mainBundle] infoDictionary] objectForKey:@\"CFBundleVersion\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_default/assist_up@2x.png",
      "fileSnippet": null,
      "html": {
        "info": "<div class=\"fauxpas-filename\">assist_up@2x.png</div> resolution (128 x 130) should be 2x that of <div class=\"fauxpas-filename\">assist_up.png</div> (64 x 66). Expected resolution: 128 x 132.",
        "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
        "ruleName": "Unexpected retina image resolution",
        "ruleShortName": "RetinaImagesResolution",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "assist_up@2x.png resolution (128 x 130) should be 2x that of assist_up.png (64 x 66). Expected resolution: 128 x 132.",
      "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
      "ruleName": "Unexpected retina image resolution",
      "ruleShortName": "RetinaImagesResolution",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_default/hazard_up@2x.png",
      "fileSnippet": null,
      "html": {
        "info": "<div class=\"fauxpas-filename\">hazard_up@2x.png</div> resolution (128 x 130) should be 2x that of <div class=\"fauxpas-filename\">hazard_up.png</div> (64 x 66). Expected resolution: 128 x 132.",
        "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
        "ruleName": "Unexpected retina image resolution",
        "ruleShortName": "RetinaImagesResolution",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "hazard_up@2x.png resolution (128 x 130) should be 2x that of hazard_up.png (64 x 66). Expected resolution: 128 x 132.",
      "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
      "ruleName": "Unexpected retina image resolution",
      "ruleShortName": "RetinaImagesResolution",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetSLBatteryWarningLevel",
      "extent": {
        "end": {
          "byteColumn": 81,
          "byteOffset": 3435,
          "line": 119,
          "utf16Column": 80,
          "utf16Offset": 3434
        },
        "start": {
          "byteColumn": 33,
          "byteOffset": 3387,
          "line": 119,
          "utf16Column": 32,
          "utf16Offset": 3386
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "[usersettings objectForKey:@\"slbandbatterywarn\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "dealloc",
      "extent": {
        "end": {
          "byteColumn": 17,
          "byteOffset": 1130,
          "line": 28,
          "utf16Column": 16,
          "utf16Offset": 1130
        },
        "start": {
          "byteColumn": 2,
          "byteOffset": 1115,
          "line": 28,
          "utf16Column": 1,
          "utf16Offset": 1115
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SMXMLDocument.m",
      "fileSnippet": "self.name = nil",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "name",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_default/hazardcancel_up.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_default/assistcancel_up.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "displaysinglealert:body:type:",
      "extent": {
        "end": {
          "byteColumn": 146,
          "byteOffset": 101458,
          "line": 2545,
          "utf16Column": 145,
          "utf16Offset": 101458
        },
        "start": {
          "byteColumn": 31,
          "byteOffset": 101343,
          "line": 2545,
          "utf16Column": 30,
          "utf16Offset": 101343
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:title message:body delegate:self cancelButtonTitle:@\"OK\" otherButtonTitles: nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with string <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with string OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ContactInfo",
      "extent": {
        "end": {
          "byteColumn": 50,
          "byteOffset": 1056,
          "line": 38,
          "utf16Column": 49,
          "utf16Offset": 1056
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1007,
          "line": 38,
          "utf16Column": 0,
          "utf16Offset": 1007
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *faxdisplay",
      "html": {
        "info": "The <code>faxdisplay</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The faxdisplay property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "PrepareSendData:eventtype:",
      "extent": {
        "end": {
          "byteColumn": 62,
          "byteOffset": 50382,
          "line": 1493,
          "utf16Column": 61,
          "utf16Offset": 50382
        },
        "start": {
          "byteColumn": 20,
          "byteOffset": 50340,
          "line": 1493,
          "utf16Column": 19,
          "utf16Offset": 50340
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "NSLog(@\"Send unknown %i\",send.sequencenum)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 66,
          "byteOffset": 8097,
          "line": 192,
          "utf16Column": 65,
          "utf16Offset": 8096
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 8044,
          "line": 192,
          "utf16Column": 12,
          "utf16Offset": 8043
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_SLCompanionVC.m",
      "fileSnippet": "[cellDesc setText:@\"Silent when emergency is active\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Silent when emergency is active</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Silent when emergency is active",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ScheduleEmergencyNotification:alertbody:type:",
      "extent": {
        "end": {
          "byteColumn": 70,
          "byteOffset": 3158,
          "line": 109,
          "utf16Column": 69,
          "utf16Offset": 3158
        },
        "start": {
          "byteColumn": 8,
          "byteOffset": 3096,
          "line": 109,
          "utf16Column": 7,
          "utf16Offset": 3096
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.m",
      "fileSnippet": "[Common checkNotifyTypePermission:UIUserNotificationTypeAlert]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "Common",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetEventBody:",
      "extent": {
        "end": {
          "byteColumn": 62,
          "byteOffset": 6677,
          "line": 231,
          "utf16Column": 61,
          "utf16Offset": 6677
        },
        "start": {
          "byteColumn": 34,
          "byteOffset": 6649,
          "line": 231,
          "utf16Column": 33,
          "utf16Offset": 6649
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "[eventbody objectForKey:key]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/VehiclePlate_ViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "MBBase64",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 282,
          "line": 15,
          "utf16Column": 53,
          "utf16Offset": 282
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 229,
          "line": 14,
          "utf16Column": 0,
          "utf16Offset": 229
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Base64.m",
      "fileSnippet": "+ (id)dataWithBase64EncodedString:(NSString *)string;",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "+[NSData dataWithBase64EncodedString:]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:viewForHeaderInSection:",
      "extent": {
        "end": {
          "byteColumn": 52,
          "byteOffset": 2236,
          "line": 77,
          "utf16Column": 51,
          "utf16Offset": 2235
        },
        "start": {
          "byteColumn": 27,
          "byteOffset": 2211,
          "line": 77,
          "utf16Column": 26,
          "utf16Offset": 2210
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_NotificationsVC.m",
      "fileSnippet": "label.text = @\"Emergency\"",
      "html": {
        "info": "<code class=\"fauxpas-objcproperty\">UILabel.text</code> value set to string <code class=\"fauxpas-string\">Emergency</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "UILabel.text value set to string Emergency",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "doAlertHazard:body:",
      "extent": {
        "end": {
          "byteColumn": 138,
          "byteOffset": 95552,
          "line": 2413,
          "utf16Column": 137,
          "utf16Offset": 95552
        },
        "start": {
          "byteColumn": 23,
          "byteOffset": 95437,
          "line": 2413,
          "utf16Column": 22,
          "utf16Offset": 95437
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:title message:body delegate:self cancelButtonTitle:@\"OK\" otherButtonTitles: nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with string <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with string OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "FillBuf:offset:busSize:",
      "extent": {
        "end": {
          "byteColumn": 21,
          "byteOffset": 9405,
          "line": 289,
          "utf16Column": 20,
          "utf16Offset": 9405
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 9397,
          "line": 289,
          "utf16Column": 12,
          "utf16Offset": 9397
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Encryption.m",
      "fileSnippet": "offset++",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 48,
          "byteOffset": 6418,
          "line": 192,
          "utf16Column": 47,
          "utf16Offset": 6417
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 6387,
          "line": 192,
          "utf16Column": 16,
          "utf16Offset": 6386
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_UserInfoVC.m",
      "fileSnippet": "[cellTitle setText:@\"Display:\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Display:</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Display:",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_commercial/aware360_iconemergency.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/intercon_iamok/intercon_company.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "finishedReceive:error:data:",
      "extent": {
        "end": {
          "byteColumn": 143,
          "byteOffset": 5176,
          "line": 148,
          "utf16Column": 142,
          "utf16Offset": 5176
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 5046,
          "line": 148,
          "utf16Column": 12,
          "utf16Offset": 5046
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/ConfigureTemplates_ViewController.m",
      "fileSnippet": "NSLog(@\"Escalation Error - %@ %@\",[error localizedDescription],[[error userInfo] objectForKey:NSURLErrorFailingURLStringErrorKey])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 128,
          "byteOffset": 327,
          "line": 11,
          "utf16Column": 128,
          "utf16Offset": 327
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 199,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 199
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/VehiclePlate_ViewController.h",
      "fileSnippet": "@interface VehiclePlate_ViewController : UIViewController<UITableViewDataSource,UITableViewDelegate,UIGestureRecognizerDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "VehiclePlate_ViewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 142,
          "byteOffset": 31606,
          "line": 798,
          "utf16Column": 141,
          "utf16Offset": 31606
        },
        "start": {
          "byteColumn": 2,
          "byteOffset": 31466,
          "line": 798,
          "utf16Column": 1,
          "utf16Offset": 31466
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Main_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillHide:) name:UIKeyboardWillHideNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CreateNewRecentBilling:bedesc:",
      "extent": {
        "end": {
          "byteColumn": 98,
          "byteOffset": 86928,
          "line": 2127,
          "utf16Column": 97,
          "utf16Offset": 86928
        },
        "start": {
          "byteColumn": 22,
          "byteOffset": 86852,
          "line": 2127,
          "utf16Column": 21,
          "utf16Offset": 86852
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"[ERROR] COREDATA: Save raised an error - '%@'\", [error description])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_default/beveldown.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "application:didFinishLaunchingWithOptions:",
      "extent": {
        "end": {
          "byteColumn": 33,
          "byteOffset": 6368,
          "line": 151,
          "utf16Column": 32,
          "utf16Offset": 6368
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 6340,
          "line": 151,
          "utf16Column": 4,
          "utf16Offset": 6340
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SafetyLinkAppDelegate.m",
      "fileSnippet": "NSLog(@\"Finished Launching\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 70,
          "byteOffset": 312,
          "line": 13,
          "utf16Column": 70,
          "utf16Offset": 312
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 242,
          "line": 13,
          "utf16Column": 0,
          "utf16Offset": 242
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SafetyLinkAppDelegate.h",
      "fileSnippet": "@interface SafetyLinkAppDelegate : UIResponder <UIApplicationDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "SafetyLinkAppDelegate",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "logmsg:loc:",
      "extent": {
        "end": {
          "byteColumn": 66,
          "byteOffset": 4172,
          "line": 103,
          "utf16Column": 65,
          "utf16Offset": 4172
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 3810,
          "line": 101,
          "utf16Column": 8,
          "utf16Offset": 3810
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/LocationController.m",
      "fileSnippet": "NSLog(@\"Location BAD  (%d m) lat(%.4f) lng(%.4f) time(%@) timediff(%.4f)\",(GCSInt)loc.horizontalAccuracy,loc.coordinate.latitude,loc.coordinate.longitude,\n              [NSDateFormatter localizedStringFromDate:loc.timestamp dateStyle:NSDateFormatterShortStyle timeStyle:NSDateFormatterLongStyle],\n              [loc.timestamp timeIntervalSinceDate:lastfixstamp])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "UserReloadConfig",
      "extent": {
        "end": {
          "byteColumn": 52,
          "byteOffset": 32235,
          "line": 835,
          "utf16Column": 51,
          "utf16Offset": 32235
        },
        "start": {
          "byteColumn": 16,
          "byteOffset": 32199,
          "line": 835,
          "utf16Column": 15,
          "utf16Offset": 32199
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"Configuration Error in xml\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 145,
          "byteOffset": 29423,
          "line": 691,
          "utf16Column": 144,
          "utf16Offset": 29423
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 29283,
          "line": 691,
          "utf16Column": 4,
          "utf16Offset": 29283
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckSN_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillShow:) name:UIKeyboardWillShowNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "getOffDutyTime",
      "extent": {
        "end": {
          "byteColumn": 66,
          "byteOffset": 110777,
          "line": 2759,
          "utf16Column": 65,
          "utf16Offset": 110777
        },
        "start": {
          "byteColumn": 24,
          "byteOffset": 110735,
          "line": 2759,
          "utf16Column": 23,
          "utf16Offset": 110735
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[usersettings objectForKey:@\"offdutytime\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Location_ViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 120,
          "byteOffset": 563,
          "line": 9,
          "utf16Column": 119,
          "utf16Offset": 563
        },
        "start": {
          "byteColumn": 49,
          "byteOffset": 492,
          "line": 9,
          "utf16Column": 48,
          "utf16Offset": 492
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SMXMLDocument.m",
      "fileSnippet": "NSLocalizedString(@\"Malformed XML document. Error at line %@:%@.\", @\"\")",
      "html": {
        "info": null,
        "ruleDescription": "Warns if <code class=\"fauxpas-cmacro\">NSLocalizedString()</code> or one of its variants is used without a non-empty comment argument.",
        "ruleName": "Uncommented localized string",
        "ruleShortName": "UncommentedLocalizedString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if NSLocalizedString() or one of its variants is used without a non-empty comment argument.",
      "ruleName": "Uncommented localized string",
      "ruleShortName": "UncommentedLocalizedString",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/UserInfo_ViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "MonitorOptions",
      "extent": {
        "end": {
          "byteColumn": 55,
          "byteOffset": 2269,
          "line": 75,
          "utf16Column": 54,
          "utf16Offset": 2269
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 2215,
          "line": 75,
          "utf16Column": 0,
          "utf16Offset": 2215
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *monitorPhoneNum",
      "html": {
        "info": "The <code>monitorPhoneNum</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The monitorPhoneNum property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "AutoDismissSingleAlert:",
      "extent": {
        "end": {
          "byteColumn": 95,
          "byteOffset": 103011,
          "line": 2581,
          "utf16Column": 94,
          "utf16Offset": 103011
        },
        "start": {
          "byteColumn": 31,
          "byteOffset": 102947,
          "line": 2581,
          "utf16Column": 30,
          "utf16Offset": 102947
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[singlenotifications objectForKey:[NSNumber numberWithInt:type]]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 36,
          "byteOffset": 1487,
          "line": 53,
          "utf16Column": 36,
          "utf16Offset": 1487
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 1451,
          "line": 53,
          "utf16Column": 0,
          "utf16Offset": 1451
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@interface MonitorOptions : NSObject",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "MonitorOptions",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 56,
          "byteOffset": 6404,
          "line": 152,
          "utf16Column": 55,
          "utf16Offset": 6403
        },
        "start": {
          "byteColumn": 21,
          "byteOffset": 6369,
          "line": 152,
          "utf16Column": 20,
          "utf16Offset": 6368
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_NotificationsVC.m",
      "fileSnippet": "[cellTitle setText:@\"Repeat Sound\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Repeat Sound</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Repeat Sound",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "showwarn:",
      "extent": {
        "end": {
          "byteColumn": 100,
          "byteOffset": 7425,
          "line": 185,
          "utf16Column": 99,
          "utf16Offset": 7425
        },
        "start": {
          "byteColumn": 32,
          "byteOffset": 7232,
          "line": 184,
          "utf16Column": 31,
          "utf16Offset": 7232
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Main_ViewController.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"Please Provide Your Location\" message:msg delegate:self \n                                                cancelButtonTitle:@\"OK\" otherButtonTitles:nil, nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">Please Provide Your Location</code>, <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings Please Provide Your Location, OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 51,
          "byteOffset": 6095,
          "line": 154,
          "utf16Column": 50,
          "utf16Offset": 6094
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 6057,
          "line": 154,
          "utf16Column": 12,
          "utf16Offset": 6056
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_SLCompanionVC.m",
      "fileSnippet": "[cellTitle setText:@\"SafetyLink Band\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">SafetyLink Band</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string SafetyLink Band",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/telelink_journey/signal.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SettingPickList_ViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/../Safetylink57.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/../Safetylink57.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 141,
          "byteOffset": 364,
          "line": 12,
          "utf16Column": 141,
          "utf16Offset": 364
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 223,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 223
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/OffTime_ViewController.h",
      "fileSnippet": "@interface OffTime_ViewController : UIViewController<UITableViewDataSource,UITableViewDelegate,UpdateGUIDelegate,UIGestureRecognizerDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "OffTime_ViewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_default/assist_up.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "TCPPacket_SPTemplateReply",
      "extent": {
        "end": {
          "byteColumn": 45,
          "byteOffset": 5616,
          "line": 195,
          "utf16Column": 44,
          "utf16Offset": 5616
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 5572,
          "line": 195,
          "utf16Column": 0,
          "utf16Offset": 5572
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.h",
      "fileSnippet": "@property (nonatomic) NSString *escalationid",
      "html": {
        "info": "The <code>escalationid</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The escalationid property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckinSettings_ViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "AddEventBodyField:val:",
      "extent": {
        "end": {
          "byteColumn": 67,
          "byteOffset": 5443,
          "line": 193,
          "utf16Column": 66,
          "utf16Offset": 5443
        },
        "start": {
          "byteColumn": 37,
          "byteOffset": 5413,
          "line": 193,
          "utf16Column": 36,
          "utf16Offset": 5413
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "[NSNumber numberWithInt:etype]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "SendData:",
      "extent": {
        "end": {
          "byteColumn": 76,
          "byteOffset": 28731,
          "line": 829,
          "utf16Column": 75,
          "utf16Offset": 28731
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 28668,
          "line": 829,
          "utf16Column": 12,
          "utf16Offset": 28668
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "send = [coder Encode:send offset:0 size:(GCSUInt)[send length]]",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CreateNewTextMsg:tfrom:tbody:",
      "extent": {
        "end": {
          "byteColumn": 79,
          "byteOffset": 77636,
          "line": 1853,
          "utf16Column": 78,
          "utf16Offset": 77636
        },
        "start": {
          "byteColumn": 3,
          "byteOffset": 77560,
          "line": 1853,
          "utf16Column": 2,
          "utf16Offset": 77560
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"[ERROR] COREDATA: Save raised an error - '%@'\", [error description])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "UserReloadConfig",
      "extent": {
        "end": {
          "byteColumn": 86,
          "byteOffset": 32374,
          "line": 837,
          "utf16Column": 85,
          "utf16Offset": 32374
        },
        "start": {
          "byteColumn": 53,
          "byteOffset": 32341,
          "line": 837,
          "utf16Column": 52,
          "utf16Offset": 32341
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[StorageContainer singleInstance]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "StorageContainer",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CreateNewRecentVehiclePlates:plateinfo:",
      "extent": {
        "end": {
          "byteColumn": 98,
          "byteOffset": 80929,
          "line": 1950,
          "utf16Column": 97,
          "utf16Offset": 80929
        },
        "start": {
          "byteColumn": 22,
          "byteOffset": 80853,
          "line": 1950,
          "utf16Column": 21,
          "utf16Offset": 80853
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"[ERROR] COREDATA: Save raised an error - '%@'\", [error description])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "logmsg:loc:",
      "extent": {
        "end": {
          "byteColumn": 87,
          "byteOffset": 3779,
          "line": 97,
          "utf16Column": 86,
          "utf16Offset": 3779
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 3387,
          "line": 95,
          "utf16Column": 8,
          "utf16Offset": 3387
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/LocationController.m",
      "fileSnippet": "NSLog(@\"Location GOOD (%d m) lat(%.4f) lng(%.4f) time(%@) timediff(%.4f) dist(%.2f m)\",(GCSInt)loc.horizontalAccuracy,loc.coordinate.latitude,loc.coordinate.longitude,\n          [NSDateFormatter localizedStringFromDate:loc.timestamp dateStyle:NSDateFormatterShortStyle timeStyle:NSDateFormatterLongStyle],\n          [loc.timestamp timeIntervalSinceDate:lastfixstamp],distanceFromLastLocation)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/common/aware360_icon_gears.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:commitEditingStyle:forRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 52,
          "byteOffset": 3393,
          "line": 93,
          "utf16Column": 51,
          "utf16Offset": 3393
        },
        "start": {
          "byteColumn": 16,
          "byteOffset": 3357,
          "line": 93,
          "utf16Column": 15,
          "utf16Offset": 3357
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/PatrolMsgs_ViewController.m",
      "fileSnippet": "txtNumMessages.text = @\"NO MESSAGES\"",
      "html": {
        "info": "<code class=\"fauxpas-objcproperty\">UILabel.text</code> value set to string <code class=\"fauxpas-string\">NO MESSAGES</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "UILabel.text value set to string NO MESSAGES",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:didSelectRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 91,
          "byteOffset": 7924,
          "line": 233,
          "utf16Column": 90,
          "utf16Offset": 7923
        },
        "start": {
          "byteColumn": 35,
          "byteOffset": 7868,
          "line": 233,
          "utf16Column": 34,
          "utf16Offset": 7867
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_UserInfoVC.m",
      "fileSnippet": "[NSArray arrayWithObjects:@\"Plain Text\",@\"10 Codes\",nil]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSArray arrayWithObjects:]</code> is called. Consider using an Objective-C container literal expression instead.</p><p>NOTE: there is a crucial difference between the current implementation and the suggestion here: While a nil value for any of the given values to this method will only terminate the argument list, a nil value in the literal container expression will result in a runtime exception.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSArray arrayWithObjects:] is called. Consider using an Objective-C container literal expression instead.NOTE: there is a crucial difference between the current implementation and the suggestion here: While a nil value for any of the given values to this method will only terminate the argument list, a nil value in the literal container expression will result in a runtime exception.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ScheduleLocalNotification:alertbody:type:",
      "extent": {
        "end": {
          "byteColumn": 95,
          "byteOffset": 5495,
          "line": 161,
          "utf16Column": 94,
          "utf16Offset": 5495
        },
        "start": {
          "byteColumn": 66,
          "byteOffset": 5466,
          "line": 161,
          "utf16Column": 65,
          "utf16Offset": 5466
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.m",
      "fileSnippet": "[NSNumber numberWithInt:type]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 56,
          "byteOffset": 6743,
          "line": 180,
          "utf16Column": 55,
          "utf16Offset": 6742
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 6712,
          "line": 180,
          "utf16Column": 24,
          "utf16Offset": 6711
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_AppInfoVC.m",
      "fileSnippet": "[cellTitle setText:@\"Callsign\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Callsign</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Callsign",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "DoUpdateSettings",
      "extent": {
        "end": {
          "byteColumn": 121,
          "byteOffset": 10330,
          "line": 300,
          "utf16Column": 120,
          "utf16Offset": 10329
        },
        "start": {
          "byteColumn": 49,
          "byteOffset": 10258,
          "line": 300,
          "utf16Column": 48,
          "utf16Offset": 10257
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_UserInfoVC.m",
      "fileSnippet": "[[[NSBundle mainBundle] infoDictionary] objectForKey:@\"CFBundleVersion\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SMXMLDocument.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_commercial/aware360_iconbackgroundemergency.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Hazard_ViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "autoreconnectperipheral",
      "extent": {
        "end": {
          "byteColumn": 133,
          "byteOffset": 6176,
          "line": 218,
          "utf16Column": 132,
          "utf16Offset": 6175
        },
        "start": {
          "byteColumn": 97,
          "byteOffset": 6140,
          "line": 218,
          "utf16Column": 96,
          "utf16Offset": 6139
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "[NSArray arrayWithObjects:uuid, nil]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSArray arrayWithObjects:]</code> is called. Consider using an Objective-C container literal expression instead.</p><p>NOTE: there is a crucial difference between the current implementation and the suggestion here: While a nil value for any of the given values to this method will only terminate the argument list, a nil value in the literal container expression will result in a runtime exception.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSArray arrayWithObjects:] is called. Consider using an Objective-C container literal expression instead.NOTE: there is a crucial difference between the current implementation and the suggestion here: While a nil value for any of the given values to this method will only terminate the argument list, a nil value in the literal container expression will result in a runtime exception.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SignOn_ViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Assist_ViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 63,
          "byteOffset": 662,
          "line": 27,
          "utf16Column": 63,
          "utf16Offset": 662
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 599,
          "line": 27,
          "utf16Column": 0,
          "utf16Offset": 599
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/HTTPHelper.h",
      "fileSnippet": "@interface HandleURLCon : NSObject<NSURLConnectionDataDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "HandleURLCon",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "SMXMLDocumentError(NSXMLParser *__strong, NSError *__strong)",
      "extent": {
        "end": {
          "byteColumn": 181,
          "byteOffset": 624,
          "line": 9,
          "utf16Column": 180,
          "utf16Offset": 624
        },
        "start": {
          "byteColumn": 2,
          "byteOffset": 445,
          "line": 9,
          "utf16Column": 1,
          "utf16Offset": 445
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SMXMLDocument.m",
      "fileSnippet": "[userInfo setObject:[NSString stringWithFormat:NSLocalizedString(@\"Malformed XML document. Error at line %@:%@.\", @\"\"), lineNumber, columnNumber] forKey:NSLocalizedDescriptionKey]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSMutableDictionary setObject:forKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSMutableDictionary setObject:forKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetRecentLoc:",
      "extent": {
        "end": {
          "byteColumn": 45,
          "byteOffset": 85498,
          "line": 2086,
          "utf16Column": 44,
          "utf16Offset": 85498
        },
        "start": {
          "byteColumn": 16,
          "byteOffset": 85469,
          "line": 2086,
          "utf16Column": 15,
          "utf16Offset": 85469
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[recentloc objectAtIndex:idx]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSArray objectAtIndex:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSArray objectAtIndex:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RegisterLocalNotifications",
      "extent": {
        "end": {
          "byteColumn": 118,
          "byteOffset": 74384,
          "line": 1769,
          "utf16Column": 117,
          "utf16Offset": 74384
        },
        "start": {
          "byteColumn": 73,
          "byteOffset": 74339,
          "line": 1769,
          "utf16Column": 72,
          "utf16Offset": 74339
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[NSNumber numberWithInt:LNT_OFFDUTY_PREWARN2]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "PrepareSendData:eventtype:",
      "extent": {
        "end": {
          "byteColumn": 72,
          "byteOffset": 46956,
          "line": 1430,
          "utf16Column": 71,
          "utf16Offset": 46956
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 46909,
          "line": 1430,
          "utf16Column": 24,
          "utf16Offset": 46909
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "NSLog(@\"Send StatusUpdate %i\",send.sequencenum)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "showwarn:",
      "extent": {
        "end": {
          "byteColumn": 126,
          "byteOffset": 3583,
          "line": 105,
          "utf16Column": 125,
          "utf16Offset": 3583
        },
        "start": {
          "byteColumn": 32,
          "byteOffset": 3216,
          "line": 103,
          "utf16Column": 31,
          "utf16Offset": 3216
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SOS_ViewController.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"Warning\" \n                                                          message:[NSString stringWithFormat:@\"You have not entered a manual location and your GPS is %i min old. Do you want to proceed?\",minold]\n                                                         delegate:self cancelButtonTitle:@\"No\" otherButtonTitles:@\"Yes\", nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">Warning</code>, <code class=\"fauxpas-string\">No</code>, <code class=\"fauxpas-string\">Yes</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings Warning, No, Yes",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 45,
          "byteOffset": 10229,
          "line": 231,
          "utf16Column": 44,
          "utf16Offset": 10228
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 10197,
          "line": 231,
          "utf16Column": 12,
          "utf16Offset": 10196
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_SLCompanionVC.m",
      "fileSnippet": "[cellTitle setText:@\"Test Mode\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Test Mode</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Test Mode",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 94,
          "byteOffset": 5441,
          "line": 173,
          "utf16Column": 94,
          "utf16Offset": 5441
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 5347,
          "line": 173,
          "utf16Column": 0,
          "utf16Offset": 5347
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@interface StorageContainer : NSObject<SPDataTCPDelegate,HandleURLConDelegate,NetViewDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "StorageContainer",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "autoreconnectperipheral",
      "extent": {
        "end": {
          "byteColumn": 30,
          "byteOffset": 5910,
          "line": 213,
          "utf16Column": 29,
          "utf16Offset": 5909
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 5889,
          "line": 213,
          "utf16Column": 8,
          "utf16Offset": 5888
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "NSLog(@\"Auto Reconn\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/intercon_iamok/intercon_emergencyred.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/Application icons/Safetylink58.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/Application icons/Safetylink58.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CreateNewRecentLoc:ldesc:llat:llng:",
      "extent": {
        "end": {
          "byteColumn": 98,
          "byteOffset": 83947,
          "line": 2037,
          "utf16Column": 97,
          "utf16Offset": 83947
        },
        "start": {
          "byteColumn": 22,
          "byteOffset": 83871,
          "line": 2037,
          "utf16Column": 21,
          "utf16Offset": 83871
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"[ERROR] COREDATA: Save raised an error - '%@'\", [error description])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "showwarn:",
      "extent": {
        "end": {
          "byteColumn": 57,
          "byteOffset": 2638,
          "line": 77,
          "utf16Column": 56,
          "utf16Offset": 2638
        },
        "start": {
          "byteColumn": 30,
          "byteOffset": 2611,
          "line": 77,
          "utf16Column": 29,
          "utf16Offset": 2611
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SignOn_ViewController.m",
      "fileSnippet": "[NSNumber numberWithInt:et]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 115,
          "byteOffset": 4897,
          "line": 138,
          "utf16Column": 114,
          "utf16Offset": 4896
        },
        "start": {
          "byteColumn": 43,
          "byteOffset": 4825,
          "line": 138,
          "utf16Column": 42,
          "utf16Offset": 4824
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_AppInfoVC.m",
      "fileSnippet": "[[[NSBundle mainBundle] infoDictionary] objectForKey:@\"CFBundleVersion\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "MBBase64",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 1957,
          "line": 80,
          "utf16Column": 29,
          "utf16Offset": 1957
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1928,
          "line": 79,
          "utf16Column": 0,
          "utf16Offset": 1928
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Base64.m",
      "fileSnippet": "- (NSString *)base64Encoding;",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[NSData base64Encoding]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "application:didReceiveRemoteNotification:",
      "extent": {
        "end": {
          "byteColumn": 68,
          "byteOffset": 2641,
          "line": 69,
          "utf16Column": 67,
          "utf16Offset": 2641
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 2582,
          "line": 69,
          "utf16Column": 8,
          "utf16Offset": 2582
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SafetyLinkAppDelegate.m",
      "fileSnippet": "NSLog(@\"Receive Local Notification Foreground %@\",alertMsg)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "StatusUpdated",
      "extent": {
        "end": {
          "byteColumn": 90,
          "byteOffset": 16228,
          "line": 407,
          "utf16Column": 89,
          "utf16Offset": 16228
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 16151,
          "line": 407,
          "utf16Column": 12,
          "utf16Offset": 16151
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Main_ViewController.m",
      "fileSnippet": "[butStartStopBilling setTitle:@\"START BILLING\" forState:UIControlStateNormal]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIButton setTitle:forState:]</code> called with string <code class=\"fauxpas-string\">START BILLING</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIButton setTitle:forState:] called with string START BILLING",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 100,
          "byteOffset": 29275,
          "line": 690,
          "utf16Column": 99,
          "utf16Offset": 29275
        },
        "start": {
          "byteColumn": 28,
          "byteOffset": 29203,
          "line": 690,
          "utf16Column": 27,
          "utf16Offset": 29203
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckSN_ViewController.m",
      "fileSnippet": "[[[NSBundle mainBundle] infoDictionary] objectForKey:@\"CFBundleVersion\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ReceivedMessage:data:",
      "extent": {
        "end": {
          "byteColumn": 67,
          "byteOffset": 68599,
          "line": 1913,
          "utf16Column": 66,
          "utf16Offset": 68599
        },
        "start": {
          "byteColumn": 29,
          "byteOffset": 68561,
          "line": 1913,
          "utf16Column": 28,
          "utf16Offset": 68561
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "data = [rcvd_xtea CAMS911Decrypt:data]",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "SendDataTCP:",
      "extent": {
        "end": {
          "byteColumn": 65,
          "byteOffset": 45161,
          "line": 1386,
          "utf16Column": 64,
          "utf16Offset": 45161
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 45121,
          "line": 1386,
          "utf16Column": 24,
          "utf16Offset": 45121
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "sdata = [send_xtea CAMS911Encrypt:sdata]",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "PrepareSendData:eventtype:",
      "extent": {
        "end": {
          "byteColumn": 77,
          "byteOffset": 49088,
          "line": 1470,
          "utf16Column": 76,
          "utf16Offset": 49088
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 49036,
          "line": 1470,
          "utf16Column": 24,
          "utf16Offset": 49036
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "NSLog(@\"Send SOS Cancel Assist %i\",send.sequencenum)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "loadConfigSettings:savetofile:",
      "extent": {
        "end": {
          "byteColumn": 72,
          "byteOffset": 24475,
          "line": 583,
          "utf16Column": 71,
          "utf16Offset": 24475
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 24412,
          "line": 583,
          "utf16Column": 8,
          "utf16Offset": 24412
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"%@ %@\",@\"Error in User Settings File\",exception.reason)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "peripheral:didDiscoverServices:",
      "extent": {
        "end": {
          "byteColumn": 101,
          "byteOffset": 17324,
          "line": 521,
          "utf16Column": 100,
          "utf16Offset": 17323
        },
        "start": {
          "byteColumn": 24,
          "byteOffset": 17247,
          "line": 521,
          "utf16Column": 23,
          "utf16Offset": 17246
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "[NSArray arrayWithObjects:[CBUUID UUIDWithString:FK_CHARACTERISTIC_SOS], nil]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSArray arrayWithObjects:]</code> is called. Consider using an Objective-C container literal expression instead.</p><p>NOTE: there is a crucial difference between the current implementation and the suggestion here: While a nil value for any of the given values to this method will only terminate the argument list, a nil value in the literal container expression will result in a runtime exception.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSArray arrayWithObjects:] is called. Consider using an Objective-C container literal expression instead.NOTE: there is a crucial difference between the current implementation and the suggestion here: While a nil value for any of the given values to this method will only terminate the argument list, a nil value in the literal container expression will result in a runtime exception.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 145,
          "byteOffset": 23237,
          "line": 649,
          "utf16Column": 144,
          "utf16Offset": 23237
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 23097,
          "line": 649,
          "utf16Column": 4,
          "utf16Offset": 23097
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Hazard_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillShow:) name:UIKeyboardWillShowNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RegisterLocalNotifications",
      "extent": {
        "end": {
          "byteColumn": 120,
          "byteOffset": 68894,
          "line": 1683,
          "utf16Column": 119,
          "utf16Offset": 68894
        },
        "start": {
          "byteColumn": 76,
          "byteOffset": 68850,
          "line": 1683,
          "utf16Column": 75,
          "utf16Offset": 68850
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[NSNumber numberWithInt:LNT_HAZARD_PREWARN1]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_default/hazardcancel_down.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_default/assistcancel_down.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "centralManager:didConnectPeripheral:",
      "extent": {
        "end": {
          "byteColumn": 81,
          "byteOffset": 10317,
          "line": 328,
          "utf16Column": 80,
          "utf16Offset": 10316
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 10241,
          "line": 328,
          "utf16Column": 4,
          "utf16Offset": 10240
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "NSLog(@\"Connected %@ : %@\",peripheral.name,peripheral.identifier.UUIDString)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 143,
          "byteOffset": 4514,
          "line": 141,
          "utf16Column": 142,
          "utf16Offset": 4514
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 4376,
          "line": 141,
          "utf16Column": 4,
          "utf16Offset": 4376
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/BillingLookup_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardDidShow:) name:UIKeyboardDidShowNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_default/hazardcancel_down@2x.png",
      "fileSnippet": null,
      "html": {
        "info": "<div class=\"fauxpas-filename\">hazardcancel_down@2x.png</div> resolution (128 x 130) should be 2x that of <div class=\"fauxpas-filename\">hazardcancel_down.png</div> (64 x 66). Expected resolution: 128 x 132.",
        "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
        "ruleName": "Unexpected retina image resolution",
        "ruleShortName": "RetinaImagesResolution",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "hazardcancel_down@2x.png resolution (128 x 130) should be 2x that of hazardcancel_down.png (64 x 66). Expected resolution: 128 x 132.",
      "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
      "ruleName": "Unexpected retina image resolution",
      "ruleShortName": "RetinaImagesResolution",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_default/assistcancel_down@2x.png",
      "fileSnippet": null,
      "html": {
        "info": "<div class=\"fauxpas-filename\">assistcancel_down@2x.png</div> resolution (128 x 130) should be 2x that of <div class=\"fauxpas-filename\">assistcancel_down.png</div> (64 x 66). Expected resolution: 128 x 132.",
        "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
        "ruleName": "Unexpected retina image resolution",
        "ruleShortName": "RetinaImagesResolution",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "assistcancel_down@2x.png resolution (128 x 130) should be 2x that of assistcancel_down.png (64 x 66). Expected resolution: 128 x 132.",
      "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
      "ruleName": "Unexpected retina image resolution",
      "ruleShortName": "RetinaImagesResolution",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "finishedReceive:error:data:",
      "extent": {
        "end": {
          "byteColumn": 64,
          "byteOffset": 52825,
          "line": 1296,
          "utf16Column": 63,
          "utf16Offset": 52825
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 52778,
          "line": 1296,
          "utf16Column": 16,
          "utf16Offset": 52778
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"ConfigUpdate Error - 0 bytes received\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 143,
          "byteOffset": 4658,
          "line": 142,
          "utf16Column": 142,
          "utf16Offset": 4658
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 4520,
          "line": 142,
          "utf16Column": 4,
          "utf16Offset": 4520
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/BillingLookup_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardDidHide:) name:UIKeyboardDidHideNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "LevelData",
      "extent": {
        "end": {
          "byteColumn": 44,
          "byteOffset": 13825,
          "line": 345,
          "utf16Column": 43,
          "utf16Offset": 13825
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 13782,
          "line": 345,
          "utf16Column": 0,
          "utf16Offset": 13782
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.h",
      "fileSnippet": "@property (nonatomic) NSString *levelnumber",
      "html": {
        "info": "The <code>levelnumber</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The levelnumber property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 18,
          "byteOffset": 86848,
          "line": 2127,
          "utf16Column": 17,
          "utf16Offset": 86848
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 86843,
          "line": 2127,
          "utf16Column": 12,
          "utf16Offset": 86843
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "error",
      "html": {
        "info": null,
        "ruleDescription": "Methods that pass back <code class=\"fauxpas-objcclass\">NSError</code> objects by reference return <code class=\"fauxpas-codesymbol\">NO</code> or <code class=\"fauxpas-codesymbol\">nil</code> to indicate an error condition. This rule warns if the <code class=\"fauxpas-objcclass\">NSError</code> pointer is checked against <code class=\"fauxpas-codesymbol\">nil</code> without checking the return value.",
        "ruleName": "Fragile error condition check",
        "ruleShortName": "ErrorConditionCheck",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Methods that pass back NSError objects by reference return NO or nil to indicate an error condition. This rule warns if the NSError pointer is checked against nil without checking the return value.",
      "ruleName": "Fragile error condition check",
      "ruleShortName": "ErrorConditionCheck",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ConnectionStatusChanged:rccstatus:gpsstatus:expdays:",
      "extent": {
        "end": {
          "byteColumn": 61,
          "byteOffset": 31195,
          "line": 811,
          "utf16Column": 60,
          "utf16Offset": 31195
        },
        "start": {
          "byteColumn": 28,
          "byteOffset": 31162,
          "line": 811,
          "utf16Column": 27,
          "utf16Offset": 31162
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[StorageContainer singleInstance]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "StorageContainer",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 59,
          "byteOffset": 10376,
          "line": 251,
          "utf16Column": 58,
          "utf16Offset": 10375
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 10342,
          "line": 251,
          "utf16Column": 24,
          "utf16Offset": 10341
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_AppInfoVC.m",
      "fileSnippet": "[cellTitle setText:@\"Server Name\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Server Name</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Server Name",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "addURLParam:value:",
      "extent": {
        "end": {
          "byteColumn": 47,
          "byteOffset": 557,
          "line": 20,
          "utf16Column": 46,
          "utf16Offset": 557
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 519,
          "line": 20,
          "utf16Column": 8,
          "utf16Offset": 519
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/HTTPHelper.m",
      "fileSnippet": "[urlparams setObject:value forKey:key]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSMutableDictionary setObject:forKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSMutableDictionary setObject:forKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "showwarn:",
      "extent": {
        "end": {
          "byteColumn": 57,
          "byteOffset": 3366,
          "line": 95,
          "utf16Column": 56,
          "utf16Offset": 3366
        },
        "start": {
          "byteColumn": 30,
          "byteOffset": 3339,
          "line": 95,
          "utf16Column": 29,
          "utf16Offset": 3339
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Hazard_ViewController.m",
      "fileSnippet": "[NSNumber numberWithInt:et]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "SMXMLElement",
      "extent": {
        "end": {
          "byteColumn": 55,
          "byteOffset": 1883,
          "line": 48,
          "utf16Column": 54,
          "utf16Offset": 1883
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1829,
          "line": 48,
          "utf16Column": 0,
          "utf16Offset": 1829
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SMXMLDocument.h",
      "fileSnippet": "@property (nonatomic, retain) NSDictionary *attributes",
      "html": {
        "info": "The <code>attributes</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The attributes property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 143,
          "byteOffset": 14211,
          "line": 348,
          "utf16Column": 142,
          "utf16Offset": 14211
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 14073,
          "line": 348,
          "utf16Column": 4,
          "utf16Offset": 14073
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/UserInfo_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardDidShow:) name:UIKeyboardDidShowNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RegisterLocalNotifications",
      "extent": {
        "end": {
          "byteColumn": 96,
          "byteOffset": 65961,
          "line": 1630,
          "utf16Column": 95,
          "utf16Offset": 65961
        },
        "start": {
          "byteColumn": 53,
          "byteOffset": 65918,
          "line": 1630,
          "utf16Column": 52,
          "utf16Offset": 65918
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[NSNumber numberWithInt:LNT_CHECKIN_EXPIRE]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RegisterLocalNotifications",
      "extent": {
        "end": {
          "byteColumn": 121,
          "byteOffset": 71948,
          "line": 1734,
          "utf16Column": 120,
          "utf16Offset": 71948
        },
        "start": {
          "byteColumn": 76,
          "byteOffset": 71903,
          "line": 1734,
          "utf16Column": 75,
          "utf16Offset": 71903
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[NSNumber numberWithInt:LNT_OFFDUTY_PREWARN1]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "soseventhit",
      "extent": {
        "end": {
          "byteColumn": 54,
          "byteOffset": 20321,
          "line": 600,
          "utf16Column": 53,
          "utf16Offset": 20320
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 20272,
          "line": 600,
          "utf16Column": 4,
          "utf16Offset": 20271
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "NSLog(@\"------------SOS Button Press-----------\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ConvertMACToLongLong:",
      "extent": {
        "end": {
          "byteColumn": 60,
          "byteOffset": 1191,
          "line": 53,
          "utf16Column": 59,
          "utf16Offset": 1191
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 1144,
          "line": 53,
          "utf16Column": 12,
          "utf16Offset": 1144
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/UniqueMAC.m",
      "fileSnippet": "NSLog(@\"%@\",@\"Cannot convert MAC to Long Long\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "DoUpdateSettings",
      "extent": {
        "end": {
          "byteColumn": 121,
          "byteOffset": 1437,
          "line": 29,
          "utf16Column": 120,
          "utf16Offset": 1437
        },
        "start": {
          "byteColumn": 49,
          "byteOffset": 1365,
          "line": 29,
          "utf16Column": 48,
          "utf16Offset": 1365
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/UserInfo_ViewController.m",
      "fileSnippet": "[[[NSBundle mainBundle] infoDictionary] objectForKey:@\"CFBundleVersion\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 143,
          "byteOffset": 21530,
          "line": 593,
          "utf16Column": 142,
          "utf16Offset": 21530
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 21392,
          "line": 593,
          "utf16Column": 4,
          "utf16Offset": 21392
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SOS_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardDidShow:) name:UIKeyboardDidShowNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RemoveChange:",
      "extent": {
        "end": {
          "byteColumn": 68,
          "byteOffset": 24629,
          "line": 727,
          "utf16Column": 67,
          "utf16Offset": 24629
        },
        "start": {
          "byteColumn": 36,
          "byteOffset": 24597,
          "line": 727,
          "utf16Column": 35,
          "utf16Offset": 24597
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "[NSNumber numberWithShort:ctype]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithShort:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithShort:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "peripheral:didDiscoverServices:",
      "extent": {
        "end": {
          "byteColumn": 105,
          "byteOffset": 17091,
          "line": 516,
          "utf16Column": 104,
          "utf16Offset": 17090
        },
        "start": {
          "byteColumn": 24,
          "byteOffset": 17010,
          "line": 516,
          "utf16Column": 23,
          "utf16Offset": 17009
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "[NSArray arrayWithObjects:[CBUUID UUIDWithString:FK_CHARACTERISTIC_BATTERY], nil]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSArray arrayWithObjects:]</code> is called. Consider using an Objective-C container literal expression instead.</p><p>NOTE: there is a crucial difference between the current implementation and the suggestion here: While a nil value for any of the given values to this method will only terminate the argument list, a nil value in the literal container expression will result in a runtime exception.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSArray arrayWithObjects:] is called. Consider using an Objective-C container literal expression instead.NOTE: there is a crucial difference between the current implementation and the suggestion here: While a nil value for any of the given values to this method will only terminate the argument list, a nil value in the literal container expression will result in a runtime exception.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "documentWithData:error:",
      "extent": {
        "end": {
          "byteColumn": 31,
          "byteOffset": 5610,
          "line": 182,
          "utf16Column": 30,
          "utf16Offset": 5608
        },
        "start": {
          "byteColumn": 10,
          "byteOffset": 5589,
          "line": 182,
          "utf16Column": 9,
          "utf16Offset": 5587
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SMXMLDocument.m",
      "fileSnippet": "[SMXMLDocument alloc]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "SMXMLDocument",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "CheckLicenseSN",
      "extent": {
        "end": {
          "byteColumn": 27,
          "byteOffset": 872,
          "line": 33,
          "utf16Column": 26,
          "utf16Offset": 872
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 858,
          "line": 33,
          "utf16Column": 12,
          "utf16Offset": 858
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckSN_ViewController.m",
      "fileSnippet": "NSError *error",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when <code class=\"fauxpas-objcclass\">NSError</code> or <code class=\"fauxpas-typedef\">CFErrorRef</code> variable values are never used.</p> <p>If you are not interested in the error return value of a method or function, pass <code class=\"fauxpas-codesymbol\">NULL</code> for the error argument.</p>",
        "ruleName": "Unused error value",
        "ruleShortName": "UnusedErrorValue",
        "ruleWarning": null
      },
      "identifier": "error",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Warns when NSError or CFErrorRef variable values are never used. If you are not interested in the error return value of a method or function, pass NULL for the error argument.",
      "ruleName": "Unused error value",
      "ruleShortName": "UnusedErrorValue",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ReceivedData:data:lastevent:",
      "extent": {
        "end": {
          "byteColumn": 42,
          "byteOffset": 36965,
          "line": 955,
          "utf16Column": 41,
          "utf16Offset": 36965
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 36936,
          "line": 955,
          "utf16Column": 12,
          "utf16Offset": 36936
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"gottemplateresponse\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ReceivedMessage:data:",
      "extent": {
        "end": {
          "byteColumn": 113,
          "byteOffset": 71745,
          "line": 1967,
          "utf16Column": 112,
          "utf16Offset": 71745
        },
        "start": {
          "byteColumn": 44,
          "byteOffset": 71676,
          "line": 1967,
          "utf16Column": 43,
          "utf16Offset": 71676
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "NSLog(@\"Rcvd Nack Unknown %i:%i\",span.ackvariation,sphdr.sequencenum)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "finishedReceive:error:data:",
      "extent": {
        "end": {
          "byteColumn": 51,
          "byteOffset": 7425,
          "line": 165,
          "utf16Column": 50,
          "utf16Offset": 7425
        },
        "start": {
          "byteColumn": 21,
          "byteOffset": 7395,
          "line": 165,
          "utf16Column": 20,
          "utf16Offset": 7395
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/UserInfo_ViewController.m",
      "fileSnippet": "NSLog(@\"Result Tag Not Found\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 49,
          "byteOffset": 270,
          "line": 12,
          "utf16Column": 49,
          "utf16Offset": 269
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 221,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 220
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_ContactInfo.h",
      "fileSnippet": "@interface Options_ContactInfo : UIViewController",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "Options_ContactInfo",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "application:didReceiveLocalNotification:",
      "extent": {
        "end": {
          "byteColumn": 82,
          "byteOffset": 1499,
          "line": 45,
          "utf16Column": 81,
          "utf16Offset": 1499
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 1426,
          "line": 45,
          "utf16Column": 8,
          "utf16Offset": 1426
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SafetyLinkAppDelegate.m",
      "fileSnippet": "NSLog(@\"Receive Local Notification Foreground %@\",notification.alertBody)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 37,
          "byteOffset": 2660,
          "line": 85,
          "utf16Column": 37,
          "utf16Offset": 2660
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 2623,
          "line": 85,
          "utf16Column": 0,
          "utf16Offset": 2623
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@interface LocationOptions : NSObject",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "LocationOptions",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "finishedReceive:error:data:",
      "extent": {
        "end": {
          "byteColumn": 56,
          "byteOffset": 4228,
          "line": 79,
          "utf16Column": 55,
          "utf16Offset": 4228
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 4189,
          "line": 79,
          "utf16Column": 16,
          "utf16Offset": 4189
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SetPassword_ViewController.m",
      "fileSnippet": "NSLog(@\"Register Received:\\n%@\",stdata)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 64,
          "byteOffset": 4781,
          "line": 122,
          "utf16Column": 63,
          "utf16Offset": 4780
        },
        "start": {
          "byteColumn": 21,
          "byteOffset": 4738,
          "line": 122,
          "utf16Column": 20,
          "utf16Offset": 4737
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_NotificationsVC.m",
      "fileSnippet": "[cellDesc setText:@\"Display Notifications\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Display Notifications</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Display Notifications",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 123,
          "byteOffset": 346,
          "line": 12,
          "utf16Column": 123,
          "utf16Offset": 346
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 223,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 223
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_ViewController.h",
      "fileSnippet": "@interface Options_ViewController : UIViewController<UITableViewDataSource,UITableViewDelegate,UIGestureRecognizerDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "Options_ViewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "SMXMLDocumentError(NSXMLParser *__strong, NSError *__strong)",
      "extent": {
        "end": {
          "byteColumn": 71,
          "byteOffset": 366,
          "line": 7,
          "utf16Column": 70,
          "utf16Offset": 366
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 320,
          "line": 7,
          "utf16Column": 24,
          "utf16Offset": 320
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SMXMLDocument.m",
      "fileSnippet": "[NSNumber numberWithInteger:parser.lineNumber]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInteger:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInteger:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 52,
          "byteOffset": 8030,
          "line": 191,
          "utf16Column": 51,
          "utf16Offset": 8029
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 7991,
          "line": 191,
          "utf16Column": 12,
          "utf16Offset": 7990
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_SLCompanionVC.m",
      "fileSnippet": "[cellTitle setText:@\"Silent Emergency\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Silent Emergency</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Silent Emergency",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "MBBase64",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 1957,
          "line": 80,
          "utf16Column": 29,
          "utf16Offset": 1957
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1928,
          "line": 79,
          "utf16Column": 0,
          "utf16Offset": 1928
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Base64.m",
      "fileSnippet": "- (NSString *)base64Encoding;",
      "html": {
        "info": "The method <code class=\"fauxpas-objcmethod\">base64Encoding</code> in <code class=\"fauxpas-objcclass\">NSData</code> category <code class=\"fauxpas-objccategory\">MBBase64</code> is in conflict with a method of the same name in category <code class=\"fauxpas-objccategory\">NSDeprecated</code> (which is in file: <div class=\"fauxpas-filepath\">/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS10.2.sdk/System/Library/Frameworks/Foundation.framework/Headers/NSData.h</div>). It is not defined which implementation of this method takes precedence at runtime.",
        "ruleDescription": "If the name of a method declared in a category is the same as a method in the original class, or a method in another category on the same class (or even a superclass), the behavior is undefined as to which method implementation is used at runtime.",
        "ruleName": "Conflicting category methods",
        "ruleShortName": "CategoryMethodConflict",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The method base64Encoding in NSData category MBBase64 is in conflict with a method of the same name in category NSDeprecated (which is in file: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS10.2.sdk/System/Library/Frameworks/Foundation.framework/Headers/NSData.h). It is not defined which implementation of this method takes precedence at runtime.",
      "ruleDescription": "If the name of a method declared in a category is the same as a method in the original class, or a method in another category on the same class (or even a superclass), the behavior is undefined as to which method implementation is used at runtime.",
      "ruleName": "Conflicting category methods",
      "ruleShortName": "CategoryMethodConflict",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "textViewDidEndEditing:",
      "extent": {
        "end": {
          "byteColumn": 36,
          "byteOffset": 19545,
          "line": 537,
          "utf16Column": 35,
          "utf16Offset": 19545
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 19518,
          "line": 537,
          "utf16Column": 8,
          "utf16Offset": 19518
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Hazard_ViewController.m",
      "fileSnippet": "textView.text = @\"Required\"",
      "html": {
        "info": "<code class=\"fauxpas-objcproperty\">UITextView.text</code> value set to string <code class=\"fauxpas-string\">Required</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "UITextView.text value set to string Required",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "applicationDidBecomeActive:",
      "extent": {
        "end": {
          "byteColumn": 24,
          "byteOffset": 9334,
          "line": 217,
          "utf16Column": 23,
          "utf16Offset": 9334
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 9315,
          "line": 217,
          "utf16Column": 4,
          "utf16Offset": 9315
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SafetyLinkAppDelegate.m",
      "fileSnippet": "NSLog(@\"Is Active\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "doassistcancel",
      "extent": {
        "end": {
          "byteColumn": 113,
          "byteOffset": 4050,
          "line": 117,
          "utf16Column": 112,
          "utf16Offset": 4050
        },
        "start": {
          "byteColumn": 19,
          "byteOffset": 3693,
          "line": 115,
          "utf16Column": 18,
          "utf16Offset": 3693
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Assist_ViewController.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:[@\"Cancel \" stringByAppendingString:[TextStyle assist_stat]]\n                                             message:[NSString stringWithFormat:@\"Are you sure you want to cancel your %@?\",[TextStyle assist_stat]]\n                                            delegate:self cancelButtonTitle:@\"No\" otherButtonTitles:@\"Yes\", nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">No</code>, <code class=\"fauxpas-string\">Yes</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings No, Yes",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "attributeNamed:",
      "extent": {
        "end": {
          "byteColumn": 48,
          "byteOffset": 4136,
          "line": 128,
          "utf16Column": 47,
          "utf16Offset": 4134
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 4097,
          "line": 128,
          "utf16Column": 8,
          "utf16Offset": 4095
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SMXMLDocument.m",
      "fileSnippet": "[attributes objectForKey:attributeName]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetUserSettingsFileName",
      "extent": {
        "end": {
          "byteColumn": 42,
          "byteOffset": 904,
          "line": 32,
          "utf16Column": 41,
          "utf16Offset": 904
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 875,
          "line": 32,
          "utf16Column": 12,
          "utf16Offset": 875
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FileNames.m",
      "fileSnippet": "[FileNames GetPreferencesDir]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "FileNames",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:viewForHeaderInSection:",
      "extent": {
        "end": {
          "byteColumn": 59,
          "byteOffset": 1853,
          "line": 62,
          "utf16Column": 58,
          "utf16Offset": 1852
        },
        "start": {
          "byteColumn": 27,
          "byteOffset": 1821,
          "line": 62,
          "utf16Column": 26,
          "utf16Offset": 1820
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_AppInfoVC.m",
      "fileSnippet": "label.text = @\"User Information\"",
      "html": {
        "info": "<code class=\"fauxpas-objcproperty\">UILabel.text</code> value set to string <code class=\"fauxpas-string\">User Information</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "UILabel.text value set to string User Information",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/common/light_red.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_commercial/aware360_iconcancelx.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ReceivedMessage:data:",
      "extent": {
        "end": {
          "byteColumn": 90,
          "byteOffset": 71066,
          "line": 1957,
          "utf16Column": 89,
          "utf16Offset": 71066
        },
        "start": {
          "byteColumn": 41,
          "byteOffset": 71017,
          "line": 1957,
          "utf16Column": 40,
          "utf16Offset": 71017
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "NSLog(@\"Rcvd Nack Bad Auth %i\",sphdr.sequencenum)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/telelink_journey/telelink_iconassist.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "finishedReceive:error:data:",
      "extent": {
        "end": {
          "byteColumn": 144,
          "byteOffset": 6389,
          "line": 147,
          "utf16Column": 143,
          "utf16Offset": 6389
        },
        "start": {
          "byteColumn": 78,
          "byteOffset": 6323,
          "line": 147,
          "utf16Column": 77,
          "utf16Offset": 6323
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/UserInfo_ViewController.m",
      "fileSnippet": "[[error userInfo] objectForKey:NSURLErrorFailingURLStringErrorKey]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "startScan",
      "extent": {
        "end": {
          "byteColumn": 76,
          "byteOffset": 4607,
          "line": 143,
          "utf16Column": 75,
          "utf16Offset": 4606
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 4540,
          "line": 143,
          "utf16Column": 8,
          "utf16Offset": 4539
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Discover_SLCompanionVC.m",
      "fileSnippet": "[butCancelRefresh setTitle:@\"CANCEL\" forState:UIControlStateNormal]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIButton setTitle:forState:]</code> called with string <code class=\"fauxpas-string\">CANCEL</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIButton setTitle:forState:] called with string CANCEL",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Base64.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TextStyle.h",
      "fileSnippet": null,
      "html": {
        "info": "<p>The <code class=\"fauxpas-string\">TextStyle.h</code> header is included in 18/49 source files (37%). Suggest moving this inclusion into the prefix header to improve compilation time.</p>",
        "ruleDescription": "Moving commonly used header inclusion directives into a precompiled prefix header improves compilation time.",
        "ruleName": "Moving common inclusions into prefix header",
        "ruleShortName": "PrefixHeaderIncludeSuggestion",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": "The TextStyle.h header is included in 18/49 source files (37%). Suggest moving this inclusion into the prefix header to improve compilation time.",
      "ruleDescription": "Moving commonly used header inclusion directives into a precompiled prefix header improves compilation time.",
      "ruleName": "Moving common inclusions into prefix header",
      "ruleShortName": "PrefixHeaderIncludeSuggestion",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "generateIssacHash:buf:bufsize:",
      "extent": {
        "end": {
          "byteColumn": 31,
          "byteOffset": 9750,
          "line": 304,
          "utf16Column": 30,
          "utf16Offset": 9750
        },
        "start": {
          "byteColumn": 18,
          "byteOffset": 9737,
          "line": 304,
          "utf16Column": 17,
          "utf16Offset": 9737
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Encryption.m",
      "fileSnippet": "[Issac alloc]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "Issac",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetSLPEnabled",
      "extent": {
        "end": {
          "byteColumn": 66,
          "byteOffset": 1841,
          "line": 60,
          "utf16Column": 65,
          "utf16Offset": 1840
        },
        "start": {
          "byteColumn": 26,
          "byteOffset": 1801,
          "line": 60,
          "utf16Column": 25,
          "utf16Offset": 1800
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "[usersettings objectForKey:@\"enableslp\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetTextMsgsFileName",
      "extent": {
        "end": {
          "byteColumn": 42,
          "byteOffset": 1182,
          "line": 42,
          "utf16Column": 41,
          "utf16Offset": 1182
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 1153,
          "line": 42,
          "utf16Column": 12,
          "utf16Offset": 1153
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FileNames.m",
      "fileSnippet": "[FileNames GetPreferencesDir]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "FileNames",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "finishedReceive:error:data:",
      "extent": {
        "end": {
          "byteColumn": 144,
          "byteOffset": 3439,
          "line": 68,
          "utf16Column": 143,
          "utf16Offset": 3439
        },
        "start": {
          "byteColumn": 78,
          "byteOffset": 3373,
          "line": 68,
          "utf16Column": 77,
          "utf16Offset": 3373
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SetPassword_ViewController.m",
      "fileSnippet": "[[error userInfo] objectForKey:NSURLErrorFailingURLStringErrorKey]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "AddEventBodyField:val:",
      "extent": {
        "end": {
          "byteColumn": 68,
          "byteOffset": 5444,
          "line": 193,
          "utf16Column": 67,
          "utf16Offset": 5444
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 5381,
          "line": 193,
          "utf16Column": 4,
          "utf16Offset": 5381
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "[eventbody setObject:val forKey:[NSNumber numberWithInt:etype]]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSMutableDictionary setObject:forKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSMutableDictionary setObject:forKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_commercial/aware360_iconcheckin.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "PrepareSendData:",
      "extent": {
        "end": {
          "byteColumn": 62,
          "byteOffset": 45465,
          "line": 1398,
          "utf16Column": 61,
          "utf16Offset": 45465
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 45420,
          "line": 1398,
          "utf16Column": 16,
          "utf16Offset": 45420
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "NSLog(@\"Send changeinfo %i\",send.sequencenum)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "valueWithPath:",
      "extent": {
        "end": {
          "byteColumn": 82,
          "byteOffset": 4566,
          "line": 140,
          "utf16Column": 81,
          "utf16Offset": 4564
        },
        "start": {
          "byteColumn": 54,
          "byteOffset": 4538,
          "line": 140,
          "utf16Column": 53,
          "utf16Offset": 4536
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SMXMLDocument.m",
      "fileSnippet": "[components objectAtIndex:0]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSArray objectAtIndex:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSArray objectAtIndex:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "butSignOnOffClick:",
      "extent": {
        "end": {
          "byteColumn": 109,
          "byteOffset": 5014,
          "line": 132,
          "utf16Column": 108,
          "utf16Offset": 5014
        },
        "start": {
          "byteColumn": 41,
          "byteOffset": 4772,
          "line": 131,
          "utf16Column": 40,
          "utf16Offset": 4772
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Main_ViewController.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"Please Stop Your Journey\" message:@\"You Must Stop Your Journey Before Signing Off\" delegate:self\n                                                         cancelButtonTitle:@\"OK\" otherButtonTitles:nil, nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">Please Stop Your Journey</code>, <code class=\"fauxpas-string\">You Must Stop Your Journey Before Signing Off</code>, <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings Please Stop Your Journey, You Must Stop Your Journey Before Signing Off, OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 31,
          "byteOffset": 300,
          "line": 15,
          "utf16Column": 31,
          "utf16Offset": 300
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 269,
          "line": 15,
          "utf16Column": 0,
          "utf16Offset": 269
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/UniqueMAC.h",
      "fileSnippet": "@interface UniqueMAC : NSObject",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "UniqueMAC",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "centralManager:didConnectPeripheral:",
      "extent": {
        "end": {
          "byteColumn": 84,
          "byteOffset": 10429,
          "line": 330,
          "utf16Column": 83,
          "utf16Offset": 10428
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 10350,
          "line": 330,
          "utf16Column": 4,
          "utf16Offset": 10349
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "[gatt_peripherals setObject:peripheral forKey:peripheral.identifier.UUIDString]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSMutableDictionary setObject:forKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSMutableDictionary setObject:forKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ConnectionStatusUpdated",
      "extent": {
        "end": {
          "byteColumn": 72,
          "byteOffset": 7551,
          "line": 227,
          "utf16Column": 71,
          "utf16Offset": 7551
        },
        "start": {
          "byteColumn": 44,
          "byteOffset": 7523,
          "line": 227,
          "utf16Column": 43,
          "utf16Offset": 7523
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/NetActivityView.m",
      "fileSnippet": "caplicexpirein.text=@\"1 Day\"",
      "html": {
        "info": "<code class=\"fauxpas-objcproperty\">UILabel.text</code> value set to string <code class=\"fauxpas-string\">1 Day</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "UILabel.text value set to string 1 Day",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithFrame:",
      "extent": {
        "end": {
          "byteColumn": 27,
          "byteOffset": 11238,
          "line": 321,
          "utf16Column": 26,
          "utf16Offset": 11238
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 11220,
          "line": 321,
          "utf16Column": 8,
          "utf16Offset": 11220
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/NetActivityView.m",
      "fileSnippet": "capMON.text=@\"MON\"",
      "html": {
        "info": "<code class=\"fauxpas-objcproperty\">UILabel.text</code> value set to string <code class=\"fauxpas-string\">MON</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "UILabel.text value set to string MON",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Discover_SLCompanionVC.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "showwarn:",
      "extent": {
        "end": {
          "byteColumn": 100,
          "byteOffset": 3076,
          "line": 103,
          "utf16Column": 99,
          "utf16Offset": 3076
        },
        "start": {
          "byteColumn": 32,
          "byteOffset": 2884,
          "line": 102,
          "utf16Column": 31,
          "utf16Offset": 2884
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SignOff_ViewController.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"Please Provide Your Location\" message:msg delegate:self\n                                                cancelButtonTitle:@\"OK\" otherButtonTitles:nil, nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">Please Provide Your Location</code>, <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings Please Provide Your Location, OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 11,
          "byteOffset": 77549,
          "line": 1851,
          "utf16Column": 10,
          "utf16Offset": 77549
        },
        "start": {
          "byteColumn": 6,
          "byteOffset": 77544,
          "line": 1851,
          "utf16Column": 5,
          "utf16Offset": 77544
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "error",
      "html": {
        "info": null,
        "ruleDescription": "Methods that pass back <code class=\"fauxpas-objcclass\">NSError</code> objects by reference return <code class=\"fauxpas-codesymbol\">NO</code> or <code class=\"fauxpas-codesymbol\">nil</code> to indicate an error condition. This rule warns if the <code class=\"fauxpas-objcclass\">NSError</code> pointer is checked against <code class=\"fauxpas-codesymbol\">nil</code> without checking the return value.",
        "ruleName": "Fragile error condition check",
        "ruleShortName": "ErrorConditionCheck",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Methods that pass back NSError objects by reference return NO or nil to indicate an error condition. This rule warns if the NSError pointer is checked against nil without checking the return value.",
      "ruleName": "Fragile error condition check",
      "ruleShortName": "ErrorConditionCheck",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_commercial/aware360_iconbackgroundcheckin.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ReceivedMessage:data:",
      "extent": {
        "end": {
          "byteColumn": 37,
          "byteOffset": 68371,
          "line": 1907,
          "utf16Column": 36,
          "utf16Offset": 68371
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 68347,
          "line": 1907,
          "utf16Column": 12,
          "utf16Offset": 68347
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "NSLog(@\"Nav Disconnect\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 14,
          "byteOffset": 87645,
          "line": 2145,
          "utf16Column": 13,
          "utf16Offset": 87645
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 87640,
          "line": 2145,
          "utf16Column": 8,
          "utf16Offset": 87640
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "error",
      "html": {
        "info": null,
        "ruleDescription": "Methods that pass back <code class=\"fauxpas-objcclass\">NSError</code> objects by reference return <code class=\"fauxpas-codesymbol\">NO</code> or <code class=\"fauxpas-codesymbol\">nil</code> to indicate an error condition. This rule warns if the <code class=\"fauxpas-objcclass\">NSError</code> pointer is checked against <code class=\"fauxpas-codesymbol\">nil</code> without checking the return value.",
        "ruleName": "Fragile error condition check",
        "ruleShortName": "ErrorConditionCheck",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Methods that pass back NSError objects by reference return NO or nil to indicate an error condition. This rule warns if the NSError pointer is checked against nil without checking the return value.",
      "ruleName": "Fragile error condition check",
      "ruleShortName": "ErrorConditionCheck",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "SendStartStopBilling:",
      "extent": {
        "end": {
          "byteColumn": 35,
          "byteOffset": 59878,
          "line": 1490,
          "utf16Column": 34,
          "utf16Offset": 59878
        },
        "start": {
          "byteColumn": 23,
          "byteOffset": 59866,
          "line": 1490,
          "utf16Column": 22,
          "utf16Offset": 59866
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "comments=@\"\"",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SafetyLinkAppDelegate.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_commercial/aware360_iconbackground.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "finishedReceive:error:data:",
      "extent": {
        "end": {
          "byteColumn": 145,
          "byteOffset": 6390,
          "line": 147,
          "utf16Column": 144,
          "utf16Offset": 6390
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 6262,
          "line": 147,
          "utf16Column": 16,
          "utf16Offset": 6262
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/UserInfo_ViewController.m",
      "fileSnippet": "NSLog(@\"Register Error - %@ %@\",[error localizedDescription],[[error userInfo] objectForKey:NSURLErrorFailingURLStringErrorKey])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "dealloc",
      "extent": {
        "end": {
          "byteColumn": 19,
          "byteOffset": 1112,
          "line": 27,
          "utf16Column": 18,
          "utf16Offset": 1112
        },
        "start": {
          "byteColumn": 2,
          "byteOffset": 1095,
          "line": 27,
          "utf16Column": 1,
          "utf16Offset": 1095
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SMXMLDocument.m",
      "fileSnippet": "self.parent = nil",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "parent",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 143,
          "byteOffset": 8177,
          "line": 198,
          "utf16Column": 142,
          "utf16Offset": 8177
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 8039,
          "line": 198,
          "utf16Column": 4,
          "utf16Offset": 8039
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SetPassword_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardDidHide:) name:UIKeyboardDidHideNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "application:didReceiveLocalNotification:",
      "extent": {
        "end": {
          "byteColumn": 79,
          "byteOffset": 1612,
          "line": 49,
          "utf16Column": 78,
          "utf16Offset": 1612
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 1542,
          "line": 49,
          "utf16Column": 8,
          "utf16Offset": 1542
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SafetyLinkAppDelegate.m",
      "fileSnippet": "NSLog(@\"Receive Local Notification Unknown %@\",notification.alertBody)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 143,
          "byteOffset": 23552,
          "line": 661,
          "utf16Column": 142,
          "utf16Offset": 23552
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 23414,
          "line": 661,
          "utf16Column": 4,
          "utf16Offset": 23414
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Assist_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardDidShow:) name:UIKeyboardDidShowNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 75,
          "byteOffset": 11893,
          "line": 364,
          "utf16Column": 74,
          "utf16Offset": 11893
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 11831,
          "line": 364,
          "utf16Column": 12,
          "utf16Offset": 11831
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/BillingInfo_ViewController.m",
      "fileSnippet": "[butStartStop setTitle:@\"START\" forState:UIControlStateNormal]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIButton setTitle:forState:]</code> called with string <code class=\"fauxpas-string\">START</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIButton setTitle:forState:] called with string START",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "SMXMLDocumentError(NSXMLParser *__strong, NSError *__strong)",
      "extent": {
        "end": {
          "byteColumn": 54,
          "byteOffset": 679,
          "line": 10,
          "utf16Column": 53,
          "utf16Offset": 679
        },
        "start": {
          "byteColumn": 2,
          "byteOffset": 627,
          "line": 10,
          "utf16Column": 1,
          "utf16Offset": 627
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SMXMLDocument.m",
      "fileSnippet": "[userInfo setObject:lineNumber forKey:@\"LineNumber\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSMutableDictionary setObject:forKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSMutableDictionary setObject:forKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ContactInfo",
      "extent": {
        "end": {
          "byteColumn": 52,
          "byteOffset": 844,
          "line": 34,
          "utf16Column": 51,
          "utf16Offset": 844
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 793,
          "line": 34,
          "utf16Column": 0,
          "utf16Offset": 793
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *phonedisplay",
      "html": {
        "info": "The <code>phonedisplay</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The phonedisplay property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "StorageContainer",
      "extent": {
        "end": {
          "byteColumn": 52,
          "byteOffset": 9770,
          "line": 299,
          "utf16Column": 51,
          "utf16Offset": 9770
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 9719,
          "line": 299,
          "utf16Column": 0,
          "utf16Offset": 9719
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *tempusername",
      "html": {
        "info": "The <code>tempusername</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The tempusername property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 142,
          "byteOffset": 14059,
          "line": 347,
          "utf16Column": 141,
          "utf16Offset": 14059
        },
        "start": {
          "byteColumn": 2,
          "byteOffset": 13919,
          "line": 347,
          "utf16Column": 1,
          "utf16Offset": 13919
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/UserInfo_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillHide:) name:UIKeyboardWillHideNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "finishedReceive:error:data:",
      "extent": {
        "end": {
          "byteColumn": 60,
          "byteOffset": 6727,
          "line": 153,
          "utf16Column": 59,
          "utf16Offset": 6727
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 6684,
          "line": 153,
          "utf16Column": 16,
          "utf16Offset": 6684
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/UserInfo_ViewController.m",
      "fileSnippet": "NSLog(@\"Register Error - 0 bytes received\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "SendTrackUpdate",
      "extent": {
        "end": {
          "byteColumn": 31,
          "byteOffset": 6999,
          "line": 182,
          "utf16Column": 30,
          "utf16Offset": 6999
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 6977,
          "line": 182,
          "utf16Column": 8,
          "utf16Offset": 6977
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/LocationController.m",
      "fileSnippet": "NSLog(@\"Accuracy 10m\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ReceivedNewMessage",
      "extent": {
        "end": {
          "byteColumn": 48,
          "byteOffset": 579,
          "line": 20,
          "utf16Column": 47,
          "utf16Offset": 579
        },
        "start": {
          "byteColumn": 12,
          "byteOffset": 543,
          "line": 20,
          "utf16Column": 11,
          "utf16Offset": 543
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/PatrolMsgs_ViewController.m",
      "fileSnippet": "txtNumMessages.text = @\"NO MESSAGES\"",
      "html": {
        "info": "<code class=\"fauxpas-objcproperty\">UILabel.text</code> value set to string <code class=\"fauxpas-string\">NO MESSAGES</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "UILabel.text value set to string NO MESSAGES",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ContactSettings",
      "extent": {
        "end": {
          "byteColumn": 51,
          "byteOffset": 4949,
          "line": 162,
          "utf16Column": 50,
          "utf16Offset": 4949
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 4899,
          "line": 162,
          "utf16Column": 0,
          "utf16Offset": 4899
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *level2label",
      "html": {
        "info": "The <code>level2label</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The level2label property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "hazardclick",
      "extent": {
        "end": {
          "byteColumn": 118,
          "byteOffset": 5053,
          "line": 127,
          "utf16Column": 117,
          "utf16Offset": 5053
        },
        "start": {
          "byteColumn": 27,
          "byteOffset": 4726,
          "line": 125,
          "utf16Column": 26,
          "utf16Offset": 4726
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Hazard_ViewController.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"Notes Error\" \n                                                     message:[NSString stringWithFormat:@\"Please fill in the %@ notes and try again.\",[TextStyle hazard_stat]]\n                                                    delegate:self cancelButtonTitle:@\"OK\" otherButtonTitles:nil, nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">Notes Error</code>, <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings Notes Error, OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "finishedReceive:error:data:",
      "extent": {
        "end": {
          "byteColumn": 142,
          "byteOffset": 5175,
          "line": 148,
          "utf16Column": 141,
          "utf16Offset": 5175
        },
        "start": {
          "byteColumn": 76,
          "byteOffset": 5109,
          "line": 148,
          "utf16Column": 75,
          "utf16Offset": 5109
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/ConfigureTemplates_ViewController.m",
      "fileSnippet": "[[error userInfo] objectForKey:NSURLErrorFailingURLStringErrorKey]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initwithdata:min:msg:",
      "extent": {
        "end": {
          "byteColumn": 84,
          "byteOffset": 1834,
          "line": 65,
          "utf16Column": 83,
          "utf16Offset": 1834
        },
        "start": {
          "byteColumn": 28,
          "byteOffset": 1778,
          "line": 65,
          "utf16Column": 27,
          "utf16Offset": 1778
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.m",
      "fileSnippet": "[[tod componentsSeparatedByString:@\":\"] objectAtIndex:1]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSArray objectAtIndex:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSArray objectAtIndex:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ContactInfo",
      "extent": {
        "end": {
          "byteColumn": 53,
          "byteOffset": 1005,
          "line": 37,
          "utf16Column": 52,
          "utf16Offset": 1005
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 953,
          "line": 37,
          "utf16Column": 0,
          "utf16Offset": 953
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *tollfreevalue",
      "html": {
        "info": "The <code>tollfreevalue</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The tollfreevalue property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "ExtractScheduleOptions:",
      "extent": {
        "end": {
          "byteColumn": 23,
          "byteOffset": 35393,
          "line": 913,
          "utf16Column": 22,
          "utf16Offset": 35393
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 35379,
          "line": 913,
          "utf16Column": 8,
          "utf16Offset": 35379
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSError *error",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when <code class=\"fauxpas-objcclass\">NSError</code> or <code class=\"fauxpas-typedef\">CFErrorRef</code> variable values are never used.</p> <p>If you are not interested in the error return value of a method or function, pass <code class=\"fauxpas-codesymbol\">NULL</code> for the error argument.</p>",
        "ruleName": "Unused error value",
        "ruleShortName": "UnusedErrorValue",
        "ruleWarning": null
      },
      "identifier": "error",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Warns when NSError or CFErrorRef variable values are never used. If you are not interested in the error return value of a method or function, pass NULL for the error argument.",
      "ruleName": "Unused error value",
      "ruleShortName": "UnusedErrorValue",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "finishedReceive:error:data:",
      "extent": {
        "end": {
          "byteColumn": 64,
          "byteOffset": 26871,
          "line": 618,
          "utf16Column": 63,
          "utf16Offset": 26871
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 26824,
          "line": 618,
          "utf16Column": 16,
          "utf16Offset": 26824
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckSN_ViewController.m",
      "fileSnippet": "NSLog(@\"ConfigUpdate Error - 0 bytes received\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 31,
          "byteOffset": 328,
          "line": 15,
          "utf16Column": 31,
          "utf16Offset": 328
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 297,
          "line": 15,
          "utf16Column": 0,
          "utf16Offset": 297
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.h",
      "fileSnippet": "@interface Constants : NSObject",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "Constants",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "init:",
      "extent": {
        "end": {
          "byteColumn": 33,
          "byteOffset": 9973,
          "line": 320,
          "utf16Column": 32,
          "utf16Offset": 9973
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 9965,
          "line": 320,
          "utf16Column": 24,
          "utf16Offset": 9965
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Encryption.m",
      "fileSnippet": "pass=@\"\"",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 44,
          "byteOffset": 3481,
          "line": 94,
          "utf16Column": 43,
          "utf16Offset": 3481
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 3450,
          "line": 94,
          "utf16Column": 12,
          "utf16Offset": 3450
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/OffTime_ViewController.m",
      "fileSnippet": "[cellLabel setText:@\"Off Duty\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Off Duty</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Off Duty",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "getalertrepeatcount",
      "extent": {
        "end": {
          "byteColumn": 84,
          "byteOffset": 104850,
          "line": 2627,
          "utf16Column": 83,
          "utf16Offset": 104850
        },
        "start": {
          "byteColumn": 37,
          "byteOffset": 104803,
          "line": 2627,
          "utf16Column": 36,
          "utf16Offset": 104803
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[usersettings objectForKey:@\"alertrepeatcount\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "StatusUpdated",
      "extent": {
        "end": {
          "byteColumn": 36,
          "byteOffset": 11816,
          "line": 327,
          "utf16Column": 35,
          "utf16Offset": 11816
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 11789,
          "line": 327,
          "utf16Column": 8,
          "utf16Offset": 11789
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Hazard_ViewController.m",
      "fileSnippet": "[lblStart setText:@\"Start\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Start</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Start",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "FillBuf:offset:busSize:",
      "extent": {
        "end": {
          "byteColumn": 20,
          "byteOffset": 9325,
          "line": 284,
          "utf16Column": 19,
          "utf16Offset": 9325
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 9314,
          "line": 284,
          "utf16Column": 8,
          "utf16Offset": 9314
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Encryption.m",
      "fileSnippet": "offset += 4",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:viewForHeaderInSection:",
      "extent": {
        "end": {
          "byteColumn": 56,
          "byteOffset": 1912,
          "line": 63,
          "utf16Column": 55,
          "utf16Offset": 1911
        },
        "start": {
          "byteColumn": 27,
          "byteOffset": 1883,
          "line": 63,
          "utf16Column": 26,
          "utf16Offset": 1882
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_AppInfoVC.m",
      "fileSnippet": "label.text = @\"Configuration\"",
      "html": {
        "info": "<code class=\"fauxpas-objcproperty\">UILabel.text</code> value set to string <code class=\"fauxpas-string\">Configuration</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "UILabel.text value set to string Configuration",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RegisterLocalNotifications",
      "extent": {
        "end": {
          "byteColumn": 71,
          "byteOffset": 68492,
          "line": 1674,
          "utf16Column": 70,
          "utf16Offset": 68492
        },
        "start": {
          "byteColumn": 43,
          "byteOffset": 68464,
          "line": 1674,
          "utf16Column": 42,
          "utf16Offset": 68464
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[allcurrent objectAtIndex:i]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSArray objectAtIndex:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSArray objectAtIndex:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "startScanForPeripherals",
      "extent": {
        "end": {
          "byteColumn": 161,
          "byteOffset": 14839,
          "line": 457,
          "utf16Column": 160,
          "utf16Offset": 14838
        },
        "start": {
          "byteColumn": 91,
          "byteOffset": 14769,
          "line": 457,
          "utf16Column": 90,
          "utf16Offset": 14768
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "[NSArray arrayWithObjects:[CBUUID UUIDWithString:FK_SERVICE_GATT],nil]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSArray arrayWithObjects:]</code> is called. Consider using an Objective-C container literal expression instead.</p><p>NOTE: there is a crucial difference between the current implementation and the suggestion here: While a nil value for any of the given values to this method will only terminate the argument list, a nil value in the literal container expression will result in a runtime exception.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSArray arrayWithObjects:] is called. Consider using an Objective-C container literal expression instead.NOTE: there is a crucial difference between the current implementation and the suggestion here: While a nil value for any of the given values to this method will only terminate the argument list, a nil value in the literal container expression will result in a runtime exception.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SetPassword_ViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ScheduleLocalNotification:alertbody:type:",
      "extent": {
        "end": {
          "byteColumn": 111,
          "byteOffset": 5511,
          "line": 161,
          "utf16Column": 110,
          "utf16Offset": 5511
        },
        "start": {
          "byteColumn": 31,
          "byteOffset": 5431,
          "line": 161,
          "utf16Column": 30,
          "utf16Offset": 5431
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.m",
      "fileSnippet": "[NSDictionary dictionaryWithObject:[NSNumber numberWithInt:type] forKey:@\"type\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSDictionary dictionaryWithObject:forKey:]</code> is called. Consider using an Objective-C container literal expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSDictionary dictionaryWithObject:forKey:] is called. Consider using an Objective-C container literal expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "takeObject",
      "extent": {
        "end": {
          "byteColumn": 42,
          "byteOffset": 11708,
          "line": 377,
          "utf16Column": 41,
          "utf16Offset": 11708
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 11683,
          "line": 377,
          "utf16Column": 16,
          "utf16Offset": 11683
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.m",
      "fileSnippet": "[queMsgs objectAtIndex:0]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSArray objectAtIndex:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSArray objectAtIndex:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "moveToUserInfoScreen",
      "extent": {
        "end": {
          "byteColumn": 102,
          "byteOffset": 10661,
          "line": 215,
          "utf16Column": 101,
          "utf16Offset": 10661
        },
        "start": {
          "byteColumn": 34,
          "byteOffset": 10473,
          "line": 214,
          "utf16Column": 33,
          "utf16Offset": 10473
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckSN_ViewController.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"License Expiring Soon\" message:msg delegate:self \n                                                  cancelButtonTitle:@\"OK\" otherButtonTitles:nil, nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">License Expiring Soon</code>, <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings License Expiring Soon, OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "updatecaptions",
      "extent": {
        "end": {
          "byteColumn": 77,
          "byteOffset": 3211,
          "line": 116,
          "utf16Column": 76,
          "utf16Offset": 3211
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 3143,
          "line": 116,
          "utf16Column": 8,
          "utf16Offset": 3143
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckinSettings_ViewController.m",
      "fileSnippet": "[butEnableDisable setTitle:@\"DISABLE\" forState:UIControlStateNormal]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIButton setTitle:forState:]</code> called with string <code class=\"fauxpas-string\">DISABLE</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIButton setTitle:forState:] called with string DISABLE",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/BillingInfo_ViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 143,
          "byteOffset": 11192,
          "line": 329,
          "utf16Column": 142,
          "utf16Offset": 11192
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 11054,
          "line": 329,
          "utf16Column": 4,
          "utf16Offset": 11054
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SignOff_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardDidHide:) name:UIKeyboardDidHideNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:didSelectRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 117,
          "byteOffset": 3071,
          "line": 91,
          "utf16Column": 116,
          "utf16Offset": 3070
        },
        "start": {
          "byteColumn": 40,
          "byteOffset": 2862,
          "line": 90,
          "utf16Column": 39,
          "utf16Offset": 2861
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_SLCompanionVC.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"Confirmation\" message:@\"Factory Reset SafetyLink Band?\"\n                                                delegate:self cancelButtonTitle:@\"No\" otherButtonTitles:@\"Yes\", nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">Confirmation</code>, <code class=\"fauxpas-string\">Factory Reset SafetyLink Band?</code>, <code class=\"fauxpas-string\">No</code>, <code class=\"fauxpas-string\">Yes</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings Confirmation, Factory Reset SafetyLink Band?, No, Yes",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "PrepareSendData:eventtype:",
      "extent": {
        "end": {
          "byteColumn": 63,
          "byteOffset": 48816,
          "line": 1465,
          "utf16Column": 62,
          "utf16Offset": 48816
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 48778,
          "line": 1465,
          "utf16Column": 24,
          "utf16Offset": 48778
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "NSLog(@\"Send SOS %i\",send.sequencenum)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "StringExtraction",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 26052,
          "line": 755,
          "utf16Column": 35,
          "utf16Offset": 26051
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 26017,
          "line": 754,
          "utf16Column": 0,
          "utf16Offset": 26016
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "- (NSString *)representativeString;",
      "html": {
        "info": null,
        "ruleDescription": "<p>Category methods on system classes must be prefixed in order to avoid name collisions.</p> <p>By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.</p>",
        "ruleName": "Unprefixed category method",
        "ruleShortName": "UnprefixedCategoryMethod",
        "ruleWarning": null
      },
      "identifier": "-[CBUUID representativeString]",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Category methods on system classes must be prefixed in order to avoid name collisions. By default, this rule considers a method name prefixed if it begins with at least three lowercase characters (or the lowercase version of the ‘Class Prefix’ configured for the project), followed by an underscore.",
      "ruleName": "Unprefixed category method",
      "ruleShortName": "UnprefixedCategoryMethod",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 52,
          "byteOffset": 5649,
          "line": 156,
          "utf16Column": 51,
          "utf16Offset": 5648
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 5622,
          "line": 156,
          "utf16Column": 24,
          "utf16Offset": 5621
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_AppInfoVC.m",
      "fileSnippet": "[cellTitle setText:@\"Name\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Name</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Name",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "ConnectToHostPort",
      "extent": {
        "end": {
          "byteColumn": 43,
          "byteOffset": 28062,
          "line": 810,
          "utf16Column": 42,
          "utf16Offset": 28062
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 28032,
          "line": 810,
          "utf16Column": 12,
          "utf16Offset": 28032
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "[inputStream setDelegate:self]",
      "html": {
        "info": "TCPComms attaches itself as a <code class=\"fauxpas-objcclass\">NSInputStream</code> delegate, but does not detach in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>.",
        "ruleDescription": "When an object sets itself as the delegate or data source of one of its members, it must detach that reference in its <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code> method.",
        "ruleName": "Undetached delegate or data source",
        "ruleShortName": "UndetachedDelegate",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "TCPComms attaches itself as a NSInputStream delegate, but does not detach in -[NSObject dealloc].",
      "ruleDescription": "When an object sets itself as the delegate or data source of one of its members, it must detach that reference in its -[NSObject dealloc] method.",
      "ruleName": "Undetached delegate or data source",
      "ruleShortName": "UndetachedDelegate",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 132,
          "byteOffset": 9682,
          "line": 266,
          "utf16Column": 131,
          "utf16Offset": 9682
        },
        "start": {
          "byteColumn": 30,
          "byteOffset": 9580,
          "line": 266,
          "utf16Column": 29,
          "utf16Offset": 9580
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/ConfigureTemplates_ViewController.m",
      "fileSnippet": "[[[storeCon contactsettings]level2source] objectForKey:[[storeCon contactsettings]selected_level2key]]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "StorageContainer",
      "extent": {
        "end": {
          "byteColumn": 47,
          "byteOffset": 9440,
          "line": 293,
          "utf16Column": 46,
          "utf16Offset": 9440
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 9394,
          "line": 293,
          "utf16Column": 0,
          "utf16Offset": 9394
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *appname",
      "html": {
        "info": "The <code>appname</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The appname property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ScheduleLocalNotification:alertbody:type:",
      "extent": {
        "end": {
          "byteColumn": 138,
          "byteOffset": 5932,
          "line": 167,
          "utf16Column": 137,
          "utf16Offset": 5932
        },
        "start": {
          "byteColumn": 109,
          "byteOffset": 5903,
          "line": 167,
          "utf16Column": 108,
          "utf16Offset": 5903
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.m",
      "fileSnippet": "[NSNumber numberWithInt:type]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ScheduleLocalNotification:alertbody:type:",
      "extent": {
        "end": {
          "byteColumn": 124,
          "byteOffset": 6167,
          "line": 170,
          "utf16Column": 123,
          "utf16Offset": 6167
        },
        "start": {
          "byteColumn": 95,
          "byteOffset": 6138,
          "line": 170,
          "utf16Column": 94,
          "utf16Offset": 6138
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.m",
      "fileSnippet": "[NSNumber numberWithInt:type]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 54,
          "byteOffset": 10732,
          "line": 258,
          "utf16Column": 53,
          "utf16Offset": 10731
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 10703,
          "line": 258,
          "utf16Column": 24,
          "utf16Offset": 10702
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_AppInfoVC.m",
      "fileSnippet": "[cellTitle setText:@\"Server\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Server</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Server",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "dealloc",
      "extent": {
        "end": {
          "byteColumn": 21,
          "byteOffset": 1092,
          "line": 26,
          "utf16Column": 20,
          "utf16Offset": 1092
        },
        "start": {
          "byteColumn": 2,
          "byteOffset": 1073,
          "line": 26,
          "utf16Column": 1,
          "utf16Offset": 1073
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SMXMLDocument.m",
      "fileSnippet": "self.document = nil",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "document",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CancelLocalNotification:",
      "extent": {
        "end": {
          "byteColumn": 65,
          "byteOffset": 7011,
          "line": 194,
          "utf16Column": 64,
          "utf16Offset": 7011
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 6959,
          "line": 194,
          "utf16Column": 12,
          "utf16Offset": 6959
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.m",
      "fileSnippet": "NSLog(@\"Remove Local Notification %@\",loc.alertBody)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "checkbatterylevelalert",
      "extent": {
        "end": {
          "byteColumn": 37,
          "byteOffset": 21153,
          "line": 625,
          "utf16Column": 36,
          "utf16Offset": 21152
        },
        "start": {
          "byteColumn": 10,
          "byteOffset": 21126,
          "line": 625,
          "utf16Column": 9,
          "utf16Offset": 21125
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "[FitkatController Instance]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "FitkatController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "PrepareSendData:eventtype:",
      "extent": {
        "end": {
          "byteColumn": 68,
          "byteOffset": 49630,
          "line": 1480,
          "utf16Column": 67,
          "utf16Offset": 49630
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 49587,
          "line": 1480,
          "utf16Column": 24,
          "utf16Offset": 49587
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "NSLog(@\"Send Position %i\",send.sequencenum)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 52,
          "byteOffset": 273,
          "line": 12,
          "utf16Column": 52,
          "utf16Offset": 273
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 221,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 221
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/MsgInfo_ViewController.h",
      "fileSnippet": "@interface MsgInfo_ViewController : UIViewController",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "MsgInfo_ViewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetEventBody:",
      "extent": {
        "end": {
          "byteColumn": 69,
          "byteOffset": 8455,
          "line": 266,
          "utf16Column": 68,
          "utf16Offset": 8455
        },
        "start": {
          "byteColumn": 41,
          "byteOffset": 8427,
          "line": 266,
          "utf16Column": 40,
          "utf16Offset": 8427
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "[eventbody objectForKey:key]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 145,
          "byteOffset": 1437,
          "line": 41,
          "utf16Column": 144,
          "utf16Offset": 1436
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 1297,
          "line": 41,
          "utf16Column": 4,
          "utf16Offset": 1296
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_UserInfoVC.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillHide:) name:UIKeyboardWillHideNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_default/emergencycancel_up@2x.png",
      "fileSnippet": null,
      "html": {
        "info": "<div class=\"fauxpas-filename\">emergencycancel_up@2x.png</div> resolution (128 x 130) should be 2x that of <div class=\"fauxpas-filename\">emergencycancel_up.png</div> (64 x 66). Expected resolution: 128 x 132.",
        "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
        "ruleName": "Unexpected retina image resolution",
        "ruleShortName": "RetinaImagesResolution",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "emergencycancel_up@2x.png resolution (128 x 130) should be 2x that of emergencycancel_up.png (64 x 66). Expected resolution: 128 x 132.",
      "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
      "ruleName": "Unexpected retina image resolution",
      "ruleShortName": "RetinaImagesResolution",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ContactInfo",
      "extent": {
        "end": {
          "byteColumn": 54,
          "byteOffset": 1111,
          "line": 39,
          "utf16Column": 53,
          "utf16Offset": 1111
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1058,
          "line": 39,
          "utf16Column": 0,
          "utf16Offset": 1058
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *addressdisplay",
      "html": {
        "info": "The <code>addressdisplay</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The addressdisplay property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "finishedReceive:error:data:",
      "extent": {
        "end": {
          "byteColumn": 144,
          "byteOffset": 12420,
          "line": 335,
          "utf16Column": 143,
          "utf16Offset": 12419
        },
        "start": {
          "byteColumn": 78,
          "byteOffset": 12354,
          "line": 335,
          "utf16Column": 77,
          "utf16Offset": 12353
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_UserInfoVC.m",
      "fileSnippet": "[[error userInfo] objectForKey:NSURLErrorFailingURLStringErrorKey]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/common/sendfail.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "dohazardcancel",
      "extent": {
        "end": {
          "byteColumn": 113,
          "byteOffset": 4273,
          "line": 113,
          "utf16Column": 112,
          "utf16Offset": 4273
        },
        "start": {
          "byteColumn": 19,
          "byteOffset": 3900,
          "line": 111,
          "utf16Column": 18,
          "utf16Offset": 3900
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Hazard_ViewController.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:[NSString stringWithFormat:@\"Cancel %@ Timer\",[TextStyle hazard_stat]]\n                                             message:[NSString stringWithFormat:@\"Are you sure you want to cancel your %@ timer?\",[TextStyle hazard_stat]]\n                                            delegate:self cancelButtonTitle:@\"No\" otherButtonTitles:@\"Yes\", nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">No</code>, <code class=\"fauxpas-string\">Yes</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings No, Yes",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithFrame:",
      "extent": {
        "end": {
          "byteColumn": 38,
          "byteOffset": 9746,
          "line": 293,
          "utf16Column": 37,
          "utf16Offset": 9746
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 9717,
          "line": 293,
          "utf16Column": 8,
          "utf16Offset": 9717
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/NetActivityView.m",
      "fileSnippet": "caplicexpires.text=@\"EXPIRES\"",
      "html": {
        "info": "<code class=\"fauxpas-objcproperty\">UILabel.text</code> value set to string <code class=\"fauxpas-string\">EXPIRES</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "UILabel.text value set to string EXPIRES",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ContactInfo",
      "extent": {
        "end": {
          "byteColumn": 54,
          "byteOffset": 1166,
          "line": 40,
          "utf16Column": 53,
          "utf16Offset": 1166
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1113,
          "line": 40,
          "utf16Column": 0,
          "utf16Offset": 1113
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *websitedisplay",
      "html": {
        "info": "The <code>websitedisplay</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The websitedisplay property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/NetActivityView.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RemoveTextMsg:",
      "extent": {
        "end": {
          "byteColumn": 85,
          "byteOffset": 78834,
          "line": 1883,
          "utf16Column": 84,
          "utf16Offset": 78834
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 78758,
          "line": 1883,
          "utf16Column": 8,
          "utf16Offset": 78758
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"[ERROR] COREDATA: Save raised an error - '%@'\", [error description])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "centralManagerDidUpdateState:",
      "extent": {
        "end": {
          "byteColumn": 189,
          "byteOffset": 8734,
          "line": 293,
          "utf16Column": 188,
          "utf16Offset": 8733
        },
        "start": {
          "byteColumn": 29,
          "byteOffset": 8574,
          "line": 293,
          "utf16Column": 28,
          "utf16Offset": 8573
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"Error\" message:@\"SafetyLink Companion Requires Bluetooth LE.\" delegate:self cancelButtonTitle:@\"OK\" otherButtonTitles: nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">Error</code>, <code class=\"fauxpas-string\">SafetyLink Companion Requires Bluetooth LE.</code>, <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings Error, SafetyLink Companion Requires Bluetooth LE., OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetRegDomain",
      "extent": {
        "end": {
          "byteColumn": 35,
          "byteOffset": 91700,
          "line": 2304,
          "utf16Column": 34,
          "utf16Offset": 91700
        },
        "start": {
          "byteColumn": 16,
          "byteOffset": 91681,
          "line": 2304,
          "utf16Column": 15,
          "utf16Offset": 91681
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "(temp) ? temp : @\"\"",
      "html": {
        "info": null,
        "ruleDescription": "Expressions of the form <code>(obj ? obj : other)</code> should be written as <code>obj ?: other</code>.",
        "ruleName": "Null coalescing operator usage",
        "ruleShortName": "NullCoalescingOp",
        "ruleWarning": "Please note that in the form <code>(obj ? obj : other)</code> the <code>obj</code> expression is evaluated twice, while in the <code>obj ?: other</code> form it is evaluated only once."
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "Expressions of the form (obj ? obj : other) should be written as obj ?: other.",
      "ruleName": "Null coalescing operator usage",
      "ruleShortName": "NullCoalescingOp",
      "ruleWarning": "Please note that in the form (obj ? obj : other) the obj expression is evaluated twice, while in the obj ?: other form it is evaluated only once.",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetCallsign",
      "extent": {
        "end": {
          "byteColumn": 65,
          "byteOffset": 91483,
          "line": 2294,
          "utf16Column": 64,
          "utf16Offset": 91483
        },
        "start": {
          "byteColumn": 26,
          "byteOffset": 91444,
          "line": 2294,
          "utf16Column": 25,
          "utf16Offset": 91444
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[usersettings objectForKey:@\"callsign\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 65,
          "byteOffset": 4142,
          "line": 146,
          "utf16Column": 64,
          "utf16Offset": 4141
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 4094,
          "line": 146,
          "utf16Column": 16,
          "utf16Offset": 4093
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_SLCTestMode.m",
      "fileSnippet": "[cellTitle setText:@\"SafetyLink Band Connected\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">SafetyLink Band Connected</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string SafetyLink Band Connected",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "finishedReceive:error:data:",
      "extent": {
        "end": {
          "byteColumn": 56,
          "byteOffset": 7135,
          "line": 159,
          "utf16Column": 55,
          "utf16Offset": 7135
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 7096,
          "line": 159,
          "utf16Column": 16,
          "utf16Offset": 7096
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/UserInfo_ViewController.m",
      "fileSnippet": "NSLog(@\"Register Received:\\n%@\",stdata)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 14,
          "byteOffset": 78741,
          "line": 1881,
          "utf16Column": 13,
          "utf16Offset": 78741
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 78736,
          "line": 1881,
          "utf16Column": 8,
          "utf16Offset": 78736
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "error",
      "html": {
        "info": null,
        "ruleDescription": "Methods that pass back <code class=\"fauxpas-objcclass\">NSError</code> objects by reference return <code class=\"fauxpas-codesymbol\">NO</code> or <code class=\"fauxpas-codesymbol\">nil</code> to indicate an error condition. This rule warns if the <code class=\"fauxpas-objcclass\">NSError</code> pointer is checked against <code class=\"fauxpas-codesymbol\">nil</code> without checking the return value.",
        "ruleName": "Fragile error condition check",
        "ruleShortName": "ErrorConditionCheck",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Methods that pass back NSError objects by reference return NO or nil to indicate an error condition. This rule warns if the NSError pointer is checked against nil without checking the return value.",
      "ruleName": "Fragile error condition check",
      "ruleShortName": "ErrorConditionCheck",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 67,
          "byteOffset": 344,
          "line": 13,
          "utf16Column": 67,
          "utf16Offset": 344
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 277,
          "line": 13,
          "utf16Column": 0,
          "utf16Offset": 277
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/LocationController.h",
      "fileSnippet": "@interface LocationController : NSObject<CLLocationManagerDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "LocationController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": null,
      "fileSnippet": null,
      "html": {
        "info": "The preprocessor definition <code>NS_BLOCK_ASSERTIONS=1</code> is defined in the <code>OTHER_CFLAGS</code> build setting, using the <code>-D</code> argument prefix. Define preprocessor macros in the <code>GCC_PREPROCESSOR_DEFINITIONS</code> (“Preprocessor macros”) build setting.",
        "ruleDescription": "<p>Warns if preprocessor definitions are defined explicitly using the <code>-D</code> argument instead of defining them in the <code>GCC_PREPROCESSOR_DEFINITIONS</code> (“Preprocessor macros”) build setting.</p> <p>Also warns if non-warning flags are defined in <code>WARNING_CFLAGS</code> (instead of <code>OTHER_CFLAGS</code>).</p>",
        "ruleName": "Incorrect placement of build setting value",
        "ruleShortName": "BuildSettingPlacement",
        "ruleWarning": null
      },
      "identifier": "OTHER_CFLAGS",
      "impact": "Maintainability",
      "info": "The preprocessor definition NS_BLOCK_ASSERTIONS=1 is defined in the OTHER_CFLAGS build setting, using the -D argument prefix. Define preprocessor macros in the GCC_PREPROCESSOR_DEFINITIONS (“Preprocessor macros”) build setting.",
      "ruleDescription": "Warns if preprocessor definitions are defined explicitly using the -D argument instead of defining them in the GCC_PREPROCESSOR_DEFINITIONS (“Preprocessor macros”) build setting. Also warns if non-warning flags are defined in WARNING_CFLAGS (instead of OTHER_CFLAGS).",
      "ruleName": "Incorrect placement of build setting value",
      "ruleShortName": "BuildSettingPlacement",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/main.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_default/emergency_up@2x.png",
      "fileSnippet": null,
      "html": {
        "info": "<div class=\"fauxpas-filename\">emergency_up@2x.png</div> resolution (128 x 130) should be 2x that of <div class=\"fauxpas-filename\">emergency_up.png</div> (64 x 66). Expected resolution: 128 x 132.",
        "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
        "ruleName": "Unexpected retina image resolution",
        "ruleShortName": "RetinaImagesResolution",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "emergency_up@2x.png resolution (128 x 130) should be 2x that of emergency_up.png (64 x 66). Expected resolution: 128 x 132.",
      "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
      "ruleName": "Unexpected retina image resolution",
      "ruleShortName": "RetinaImagesResolution",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "Constants",
      "extent": {
        "end": {
          "byteColumn": 44,
          "byteOffset": 703,
          "line": 29,
          "utf16Column": 43,
          "utf16Offset": 703
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 660,
          "line": 29,
          "utf16Column": 0,
          "utf16Offset": 660
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.h",
      "fileSnippet": "@property (nonatomic,retain) NSData *header",
      "html": {
        "info": "The <code>header</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The header property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetRecentBilling:",
      "extent": {
        "end": {
          "byteColumn": 51,
          "byteOffset": 88437,
          "line": 2174,
          "utf16Column": 50,
          "utf16Offset": 88437
        },
        "start": {
          "byteColumn": 16,
          "byteOffset": 88402,
          "line": 2174,
          "utf16Column": 15,
          "utf16Offset": 88402
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[recentbillentry objectAtIndex:idx]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSArray objectAtIndex:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSArray objectAtIndex:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "viewWillAppear:",
      "extent": {
        "end": {
          "byteColumn": 34,
          "byteOffset": 28734,
          "line": 723,
          "utf16Column": 33,
          "utf16Offset": 28734
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 28705,
          "line": 723,
          "utf16Column": 4,
          "utf16Offset": 28705
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Main_ViewController.m",
      "fileSnippet": "lblCheckin.text = @\"Check-in\"",
      "html": {
        "info": "<code class=\"fauxpas-objcproperty\">UILabel.text</code> value set to string <code class=\"fauxpas-string\">Check-in</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "UILabel.text value set to string Check-in",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/common/light_yellow.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "finishedReceive:error:data:",
      "extent": {
        "end": {
          "byteColumn": 56,
          "byteOffset": 13063,
          "line": 346,
          "utf16Column": 55,
          "utf16Offset": 13062
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 13024,
          "line": 346,
          "utf16Column": 16,
          "utf16Offset": 13023
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_UserInfoVC.m",
      "fileSnippet": "NSLog(@\"Register Received:\\n%@\",stdata)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "SMXMLDocumentError(NSXMLParser *__strong, NSError *__strong)",
      "extent": {
        "end": {
          "byteColumn": 75,
          "byteOffset": 442,
          "line": 8,
          "utf16Column": 74,
          "utf16Offset": 442
        },
        "start": {
          "byteColumn": 27,
          "byteOffset": 394,
          "line": 8,
          "utf16Column": 26,
          "utf16Offset": 394
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SMXMLDocument.m",
      "fileSnippet": "[NSNumber numberWithInteger:parser.columnNumber]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInteger:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInteger:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ContactInfo",
      "extent": {
        "end": {
          "byteColumn": 50,
          "byteOffset": 1323,
          "line": 43,
          "utf16Column": 49,
          "utf16Offset": 1323
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1274,
          "line": 43,
          "utf16Column": 0,
          "utf16Offset": 1274
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *emailvalue",
      "html": {
        "info": "The <code>emailvalue</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The emailvalue property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "finishedReceive:error:data:",
      "extent": {
        "end": {
          "byteColumn": 149,
          "byteOffset": 52641,
          "line": 1292,
          "utf16Column": 148,
          "utf16Offset": 52641
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 52509,
          "line": 1292,
          "utf16Column": 16,
          "utf16Offset": 52509
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"ConfigUpdate Error - %@ %@\",[error localizedDescription],[[error userInfo] objectForKey:NSURLErrorFailingURLStringErrorKey])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetFullURL",
      "extent": {
        "end": {
          "byteColumn": 122,
          "byteOffset": 1126,
          "line": 39,
          "utf16Column": 121,
          "utf16Offset": 1126
        },
        "start": {
          "byteColumn": 94,
          "byteOffset": 1098,
          "line": 39,
          "utf16Column": 93,
          "utf16Offset": 1098
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/HTTPHelper.m",
      "fileSnippet": "[urlparams objectForKey:key]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "centralManagerDidUpdateState:",
      "extent": {
        "end": {
          "byteColumn": 198,
          "byteOffset": 8361,
          "line": 287,
          "utf16Column": 197,
          "utf16Offset": 8360
        },
        "start": {
          "byteColumn": 33,
          "byteOffset": 8196,
          "line": 287,
          "utf16Column": 32,
          "utf16Offset": 8195
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"Error\" message:@\"SafetyLink Companion Requires Bluetooth Enabled.\" delegate:self cancelButtonTitle:@\"OK\" otherButtonTitles: nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">Error</code>, <code class=\"fauxpas-string\">SafetyLink Companion Requires Bluetooth Enabled.</code>, <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings Error, SafetyLink Companion Requires Bluetooth Enabled., OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RemoveRecentBilling:",
      "extent": {
        "end": {
          "byteColumn": 85,
          "byteOffset": 87737,
          "line": 2147,
          "utf16Column": 84,
          "utf16Offset": 87737
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 87661,
          "line": 2147,
          "utf16Column": 8,
          "utf16Offset": 87661
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"[ERROR] COREDATA: Save raised an error - '%@'\", [error description])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:commitEditingStyle:forRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 74,
          "byteOffset": 3052,
          "line": 88,
          "utf16Column": 73,
          "utf16Offset": 3052
        },
        "start": {
          "byteColumn": 38,
          "byteOffset": 3016,
          "line": 88,
          "utf16Column": 37,
          "utf16Offset": 3016
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/VehiclePlate_ViewController.m",
      "fileSnippet": "[NSArray arrayWithObject: indexPath]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSArray arrayWithObject:]</code> is called. Consider using an Objective-C container literal expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSArray arrayWithObject:] is called. Consider using an Objective-C container literal expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "showwarn:",
      "extent": {
        "end": {
          "byteColumn": 100,
          "byteOffset": 2985,
          "line": 92,
          "utf16Column": 99,
          "utf16Offset": 2985
        },
        "start": {
          "byteColumn": 32,
          "byteOffset": 2792,
          "line": 91,
          "utf16Column": 31,
          "utf16Offset": 2792
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Assist_ViewController.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"Please Provide Your Location\" message:msg delegate:self \n                                                cancelButtonTitle:@\"OK\" otherButtonTitles:nil, nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">Please Provide Your Location</code>, <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings Please Provide Your Location, OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ContactSettings",
      "extent": {
        "end": {
          "byteColumn": 54,
          "byteOffset": 5285,
          "line": 168,
          "utf16Column": 53,
          "utf16Offset": 5285
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 5232,
          "line": 168,
          "utf16Column": 0,
          "utf16Offset": 5232
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@property (nonatomic,retain) NSArray *scheduleoptions",
      "html": {
        "info": "The <code>scheduleoptions</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The scheduleoptions property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ReceivedData:data:lastevent:",
      "extent": {
        "end": {
          "byteColumn": 29,
          "byteOffset": 38420,
          "line": 982,
          "utf16Column": 28,
          "utf16Offset": 38420
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 38404,
          "line": 982,
          "utf16Column": 12,
          "utf16Offset": 38404
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"gotcfg\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "application:didReceiveRemoteNotification:",
      "extent": {
        "end": {
          "byteColumn": 48,
          "byteOffset": 2048,
          "line": 58,
          "utf16Column": 47,
          "utf16Offset": 2048
        },
        "start": {
          "byteColumn": 18,
          "byteOffset": 2018,
          "line": 58,
          "utf16Column": 17,
          "utf16Offset": 2018
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SafetyLinkAppDelegate.m",
      "fileSnippet": "[userInfo objectForKey:@\"aps\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "viewWillAppear:",
      "extent": {
        "end": {
          "byteColumn": 55,
          "byteOffset": 5483,
          "line": 131,
          "utf16Column": 54,
          "utf16Offset": 5483
        },
        "start": {
          "byteColumn": 31,
          "byteOffset": 5459,
          "line": 131,
          "utf16Column": 30,
          "utf16Offset": 5459
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SettingPickList_ViewController.m",
      "fileSnippet": "capTitle.text=@\"DISPLAY\"",
      "html": {
        "info": "<code class=\"fauxpas-objcproperty\">UILabel.text</code> value set to string <code class=\"fauxpas-string\">DISPLAY</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "UILabel.text value set to string DISPLAY",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "StartAnimationCancelWithMessage:le:",
      "extent": {
        "end": {
          "byteColumn": 64,
          "byteOffset": 1811,
          "line": 57,
          "utf16Column": 63,
          "utf16Offset": 1811
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 1752,
          "line": 57,
          "utf16Column": 4,
          "utf16Offset": 1752
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/NetActivityView.m",
      "fileSnippet": "[butClose setTitle:@\"Cancel\" forState:UIControlStateNormal]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIButton setTitle:forState:]</code> called with string <code class=\"fauxpas-string\">Cancel</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIButton setTitle:forState:] called with string Cancel",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "confirmuserinfo",
      "extent": {
        "end": {
          "byteColumn": 118,
          "byteOffset": 8565,
          "line": 245,
          "utf16Column": 117,
          "utf16Offset": 8564
        },
        "start": {
          "byteColumn": 27,
          "byteOffset": 8350,
          "line": 244,
          "utf16Column": 26,
          "utf16Offset": 8349
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_UserInfoVC.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"Input Error\" message:@\"User Name and Email cannot be empty.\"\n                                                    delegate:self cancelButtonTitle:@\"OK\" otherButtonTitles:nil, nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">Input Error</code>, <code class=\"fauxpas-string\">User Name and Email cannot be empty.</code>, <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings Input Error, User Name and Email cannot be empty., OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "updatecaptions",
      "extent": {
        "end": {
          "byteColumn": 52,
          "byteOffset": 3285,
          "line": 120,
          "utf16Column": 51,
          "utf16Offset": 3285
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 3242,
          "line": 120,
          "utf16Column": 8,
          "utf16Offset": 3242
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckinSettings_ViewController.m",
      "fileSnippet": "[lblTitle setText:@\"SAFETY TIMER DISABLED\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">SAFETY TIMER DISABLED</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string SAFETY TIMER DISABLED",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_SLCTestMode.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "DoConfigRequest",
      "extent": {
        "end": {
          "byteColumn": 57,
          "byteOffset": 52252,
          "line": 1282,
          "utf16Column": 56,
          "utf16Offset": 52252
        },
        "start": {
          "byteColumn": 19,
          "byteOffset": 52214,
          "line": 1282,
          "utf16Column": 18,
          "utf16Offset": 52214
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"Unable to Connect to Server.\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "viewWillAppear:",
      "extent": {
        "end": {
          "byteColumn": 35,
          "byteOffset": 4869,
          "line": 124,
          "utf16Column": 34,
          "utf16Offset": 4869
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 4839,
          "line": 124,
          "utf16Column": 4,
          "utf16Offset": 4839
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SettingPickList_ViewController.m",
      "fileSnippet": "capTitle.text = @\"CHOOSE ITEM\"",
      "html": {
        "info": "<code class=\"fauxpas-objcproperty\">UILabel.text</code> value set to string <code class=\"fauxpas-string\">CHOOSE ITEM</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "UILabel.text value set to string CHOOSE ITEM",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "finishscan:",
      "extent": {
        "end": {
          "byteColumn": 24,
          "byteOffset": 7495,
          "line": 257,
          "utf16Column": 23,
          "utf16Offset": 7494
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 7476,
          "line": 257,
          "utf16Column": 4,
          "utf16Offset": 7475
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "NSLog(@\"Auto Stop\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_commercial/aware360_iconemergencyselected.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 56,
          "byteOffset": 8654,
          "line": 215,
          "utf16Column": 55,
          "utf16Offset": 8653
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 8623,
          "line": 215,
          "utf16Column": 24,
          "utf16Offset": 8622
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_AppInfoVC.m",
      "fileSnippet": "[cellTitle setText:@\"Location\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Location</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Location",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "applicationWillTerminate:",
      "extent": {
        "end": {
          "byteColumn": 25,
          "byteOffset": 9692,
          "line": 227,
          "utf16Column": 24,
          "utf16Offset": 9692
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 9672,
          "line": 227,
          "utf16Column": 4,
          "utf16Offset": 9672
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SafetyLinkAppDelegate.m",
      "fileSnippet": "NSLog(@\"Terminated\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_commercial/aware360_iconcheckinselected2.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:viewForHeaderInSection:",
      "extent": {
        "end": {
          "byteColumn": 52,
          "byteOffset": 2181,
          "line": 76,
          "utf16Column": 51,
          "utf16Offset": 2180
        },
        "start": {
          "byteColumn": 22,
          "byteOffset": 2151,
          "line": 76,
          "utf16Column": 21,
          "utf16Offset": 2150
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_NotificationsVC.m",
      "fileSnippet": "label.text = @\"Communications\"",
      "html": {
        "info": "<code class=\"fauxpas-objcproperty\">UILabel.text</code> value set to string <code class=\"fauxpas-string\">Communications</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "UILabel.text value set to string Communications",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "finishedReceive:error:data:",
      "extent": {
        "end": {
          "byteColumn": 60,
          "byteOffset": 21044,
          "line": 517,
          "utf16Column": 59,
          "utf16Offset": 21044
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 21001,
          "line": 517,
          "utf16Column": 16,
          "utf16Offset": 21001
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckSN_ViewController.m",
      "fileSnippet": "NSLog(@\"Register Error - 0 bytes received\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CancelALocalNotification:",
      "extent": {
        "end": {
          "byteColumn": 69,
          "byteOffset": 7470,
          "line": 208,
          "utf16Column": 68,
          "utf16Offset": 7470
        },
        "start": {
          "byteColumn": 43,
          "byteOffset": 7444,
          "line": 208,
          "utf16Column": 42,
          "utf16Offset": 7444
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.m",
      "fileSnippet": "[allLocal objectAtIndex:i]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSArray objectAtIndex:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSArray objectAtIndex:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 55,
          "byteOffset": 9982,
          "line": 244,
          "utf16Column": 54,
          "utf16Offset": 9981
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 9952,
          "line": 244,
          "utf16Column": 24,
          "utf16Offset": 9951
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_AppInfoVC.m",
      "fileSnippet": "[cellTitle setText:@\"Version\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Version</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Version",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithFrame:",
      "extent": {
        "end": {
          "byteColumn": 27,
          "byteOffset": 12121,
          "line": 337,
          "utf16Column": 26,
          "utf16Offset": 12121
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 12103,
          "line": 337,
          "utf16Column": 8,
          "utf16Offset": 12103
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/NetActivityView.m",
      "fileSnippet": "capSLP.text=@\"SLC\"",
      "html": {
        "info": "<code class=\"fauxpas-objcproperty\">UILabel.text</code> value set to string <code class=\"fauxpas-string\">SLC</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "UILabel.text value set to string SLC",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "centralManager:didDiscoverPeripheral:advertisementData:RSSI:",
      "extent": {
        "end": {
          "byteColumn": 115,
          "byteOffset": 9463,
          "line": 309,
          "utf16Column": 114,
          "utf16Offset": 9462
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 9357,
          "line": 309,
          "utf16Column": 8,
          "utf16Offset": 9356
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "NSLog(@\"Auto Discovered %@ : %@ : %@\",peripheral.name,peripheral.identifier.UUIDString,[RSSI stringValue])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "loadConfigSettingsFile",
      "extent": {
        "end": {
          "byteColumn": 23,
          "byteOffset": 6475,
          "line": 227,
          "utf16Column": 22,
          "utf16Offset": 6475
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 6461,
          "line": 227,
          "utf16Column": 8,
          "utf16Offset": 6461
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSError *error",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when <code class=\"fauxpas-objcclass\">NSError</code> or <code class=\"fauxpas-typedef\">CFErrorRef</code> variable values are never used.</p> <p>If you are not interested in the error return value of a method or function, pass <code class=\"fauxpas-codesymbol\">NULL</code> for the error argument.</p>",
        "ruleName": "Unused error value",
        "ruleShortName": "UnusedErrorValue",
        "ruleWarning": null
      },
      "identifier": "error",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Warns when NSError or CFErrorRef variable values are never used. If you are not interested in the error return value of a method or function, pass NULL for the error argument.",
      "ruleName": "Unused error value",
      "ruleShortName": "UnusedErrorValue",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ConnectionStatusUpdated",
      "extent": {
        "end": {
          "byteColumn": 70,
          "byteOffset": 7401,
          "line": 225,
          "utf16Column": 69,
          "utf16Offset": 7401
        },
        "start": {
          "byteColumn": 40,
          "byteOffset": 7371,
          "line": 225,
          "utf16Column": 39,
          "utf16Offset": 7371
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/NetActivityView.m",
      "fileSnippet": "caplicexpirein.text=@\"Expired\"",
      "html": {
        "info": "<code class=\"fauxpas-objcproperty\">UILabel.text</code> value set to string <code class=\"fauxpas-string\">Expired</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "UILabel.text value set to string Expired",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "stopScan",
      "extent": {
        "end": {
          "byteColumn": 52,
          "byteOffset": 5301,
          "line": 161,
          "utf16Column": 51,
          "utf16Offset": 5300
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 5258,
          "line": 161,
          "utf16Column": 8,
          "utf16Offset": 5257
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Discover_SLCompanionVC.m",
      "fileSnippet": "[lblDiscover setText:@\"Discovered Devices\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Discovered Devices</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Discovered Devices",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetUserEmail",
      "extent": {
        "end": {
          "byteColumn": 35,
          "byteOffset": 91161,
          "line": 2277,
          "utf16Column": 34,
          "utf16Offset": 91161
        },
        "start": {
          "byteColumn": 16,
          "byteOffset": 91142,
          "line": 2277,
          "utf16Column": 15,
          "utf16Offset": 91142
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "(temp) ? temp : @\"\"",
      "html": {
        "info": null,
        "ruleDescription": "Expressions of the form <code>(obj ? obj : other)</code> should be written as <code>obj ?: other</code>.",
        "ruleName": "Null coalescing operator usage",
        "ruleShortName": "NullCoalescingOp",
        "ruleWarning": "Please note that in the form <code>(obj ? obj : other)</code> the <code>obj</code> expression is evaluated twice, while in the <code>obj ?: other</code> form it is evaluated only once."
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "Expressions of the form (obj ? obj : other) should be written as obj ?: other.",
      "ruleName": "Null coalescing operator usage",
      "ruleShortName": "NullCoalescingOp",
      "ruleWarning": "Please note that in the form (obj ? obj : other) the obj expression is evaluated twice, while in the obj ?: other form it is evaluated only once.",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "StorageContainer",
      "extent": {
        "end": {
          "byteColumn": 53,
          "byteOffset": 9824,
          "line": 300,
          "utf16Column": 52,
          "utf16Offset": 9824
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 9772,
          "line": 300,
          "utf16Column": 0,
          "utf16Offset": 9772
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *tempuseremail",
      "html": {
        "info": "The <code>tempuseremail</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The tempuseremail property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/telelink_journey/aware360_journey.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "StopStandardUpdates",
      "extent": {
        "end": {
          "byteColumn": 41,
          "byteOffset": 7667,
          "line": 206,
          "utf16Column": 40,
          "utf16Offset": 7667
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 7635,
          "line": 206,
          "utf16Column": 8,
          "utf16Offset": 7635
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/LocationController.m",
      "fileSnippet": "NSLog(@\"Stop Location Services\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "peripheral:didDiscoverCharacteristicsForService:error:",
      "extent": {
        "end": {
          "byteColumn": 83,
          "byteOffset": 17831,
          "line": 535,
          "utf16Column": 82,
          "utf16Offset": 17830
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 17757,
          "line": 535,
          "utf16Column": 8,
          "utf16Offset": 17756
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "NSLog(@\"Discovered Characteristic %@\", [charic.UUID representativeString])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "Clone",
      "extent": {
        "end": {
          "byteColumn": 40,
          "byteOffset": 39977,
          "line": 1201,
          "utf16Column": 39,
          "utf16Offset": 39977
        },
        "start": {
          "byteColumn": 23,
          "byteOffset": 39960,
          "line": 1201,
          "utf16Column": 22,
          "utf16Offset": 39960
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "[KissCoder alloc]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "KissCoder",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetEventBody:",
      "extent": {
        "end": {
          "byteColumn": 74,
          "byteOffset": 7647,
          "line": 249,
          "utf16Column": 73,
          "utf16Offset": 7647
        },
        "start": {
          "byteColumn": 46,
          "byteOffset": 7619,
          "line": 249,
          "utf16Column": 45,
          "utf16Offset": 7619
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "[eventbody objectForKey:key]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ReceivedData:data:lastevent:",
      "extent": {
        "end": {
          "byteColumn": 29,
          "byteOffset": 47015,
          "line": 1150,
          "utf16Column": 28,
          "utf16Offset": 47015
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 46999,
          "line": 1150,
          "utf16Column": 12,
          "utf16Offset": 46999
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"gottxt\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "peekObject",
      "extent": {
        "end": {
          "byteColumn": 42,
          "byteOffset": 11888,
          "line": 387,
          "utf16Column": 41,
          "utf16Offset": 11888
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 11863,
          "line": 387,
          "utf16Column": 16,
          "utf16Offset": 11863
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.m",
      "fileSnippet": "[queMsgs objectAtIndex:0]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSArray objectAtIndex:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSArray objectAtIndex:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "PrepareSendData:eventtype:",
      "extent": {
        "end": {
          "byteColumn": 111,
          "byteOffset": 50317,
          "line": 1492,
          "utf16Column": 110,
          "utf16Offset": 50317
        },
        "start": {
          "byteColumn": 66,
          "byteOffset": 50272,
          "line": 1492,
          "utf16Column": 65,
          "utf16Offset": 50272
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "NSLog(@\"Send changeinfo %i\",send.sequencenum)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "managedObjectModel",
      "extent": {
        "end": {
          "byteColumn": 97,
          "byteOffset": 10751,
          "line": 262,
          "utf16Column": 96,
          "utf16Offset": 10751
        },
        "start": {
          "byteColumn": 23,
          "byteOffset": 10677,
          "line": 262,
          "utf16Column": 22,
          "utf16Offset": 10677
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SafetyLinkAppDelegate.m",
      "fileSnippet": "[[NSBundle mainBundle] URLForResource:@\"SafetyLink\" withExtension:@\"momd\"]",
      "html": {
        "info": "<p>Attempt to load unknown resource named <code class=\"fauxpas-string\">SafetyLink.momd</code>. Did you mean <code class=\"fauxpas-string\">DroidSans-Bold.ttf</code>?</p>",
        "ruleDescription": "Resources loaded from disk at runtime should be included in the bundle resources under the correct path. Remember that unlike most Macs (and thus iOS simulators run on those Macs), iOS devices have a case sensitive filesystem.",
        "ruleName": "Code refers to unknown resource",
        "ruleShortName": "UnknownResourceCodeReference",
        "ruleWarning": null
      },
      "identifier": "SafetyLink.momd",
      "impact": "Functionality",
      "info": "Attempt to load unknown resource named SafetyLink.momd. Did you mean DroidSans-Bold.ttf?",
      "ruleDescription": "Resources loaded from disk at runtime should be included in the bundle resources under the correct path. Remember that unlike most Macs (and thus iOS simulators run on those Macs), iOS devices have a case sensitive filesystem.",
      "ruleName": "Code refers to unknown resource",
      "ruleShortName": "UnknownResourceCodeReference",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RegisterLocalNotifications",
      "extent": {
        "end": {
          "byteColumn": 122,
          "byteOffset": 72071,
          "line": 1735,
          "utf16Column": 121,
          "utf16Offset": 72071
        },
        "start": {
          "byteColumn": 77,
          "byteOffset": 72026,
          "line": 1735,
          "utf16Column": 76,
          "utf16Offset": 72026
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[NSNumber numberWithInt:LNT_OFFDUTY_PREWARN2]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "applicationWillEnterForeground:",
      "extent": {
        "end": {
          "byteColumn": 34,
          "byteOffset": 8849,
          "line": 201,
          "utf16Column": 33,
          "utf16Offset": 8849
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 8820,
          "line": 201,
          "utf16Column": 4,
          "utf16Offset": 8820
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SafetyLinkAppDelegate.m",
      "fileSnippet": "NSLog(@\"Entering Foreground\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "showwarn:",
      "extent": {
        "end": {
          "byteColumn": 57,
          "byteOffset": 7516,
          "line": 187,
          "utf16Column": 56,
          "utf16Offset": 7516
        },
        "start": {
          "byteColumn": 30,
          "byteOffset": 7489,
          "line": 187,
          "utf16Column": 29,
          "utf16Offset": 7489
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Main_ViewController.m",
      "fileSnippet": "[NSNumber numberWithInt:et]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/common/aware360_icon_phone.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "init",
      "extent": {
        "end": {
          "byteColumn": 40,
          "byteOffset": 877,
          "line": 25,
          "utf16Column": 39,
          "utf16Offset": 877
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 846,
          "line": 25,
          "utf16Column": 8,
          "utf16Offset": 846
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/LocationController.m",
      "fileSnippet": "locationManager.delegate = self",
      "html": {
        "info": "LocationController attaches itself as a <code class=\"fauxpas-objcclass\">CLLocationManager</code> delegate, but does not detach in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>.",
        "ruleDescription": "When an object sets itself as the delegate or data source of one of its members, it must detach that reference in its <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code> method.",
        "ruleName": "Undetached delegate or data source",
        "ruleShortName": "UndetachedDelegate",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "LocationController attaches itself as a CLLocationManager delegate, but does not detach in -[NSObject dealloc].",
      "ruleDescription": "When an object sets itself as the delegate or data source of one of its members, it must detach that reference in its -[NSObject dealloc] method.",
      "ruleName": "Undetached delegate or data source",
      "ruleShortName": "UndetachedDelegate",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 145,
          "byteOffset": 13915,
          "line": 346,
          "utf16Column": 144,
          "utf16Offset": 13915
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 13775,
          "line": 346,
          "utf16Column": 4,
          "utf16Offset": 13775
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/UserInfo_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillShow:) name:UIKeyboardWillShowNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 143,
          "byteOffset": 21674,
          "line": 594,
          "utf16Column": 142,
          "utf16Offset": 21674
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 21536,
          "line": 594,
          "utf16Column": 4,
          "utf16Offset": 21536
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SOS_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardDidHide:) name:UIKeyboardDidHideNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "StartStandardUpdates",
      "extent": {
        "end": {
          "byteColumn": 42,
          "byteOffset": 7436,
          "line": 195,
          "utf16Column": 41,
          "utf16Offset": 7436
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 7403,
          "line": 195,
          "utf16Column": 8,
          "utf16Offset": 7403
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/LocationController.m",
      "fileSnippet": "NSLog(@\"Start Location Services\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 143,
          "byteOffset": 1581,
          "line": 42,
          "utf16Column": 142,
          "utf16Offset": 1580
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 1443,
          "line": 42,
          "utf16Column": 4,
          "utf16Offset": 1442
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_UserInfoVC.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardDidShow:) name:UIKeyboardDidShowNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "BackToWelcome:",
      "extent": {
        "end": {
          "byteColumn": 34,
          "byteOffset": 33965,
          "line": 872,
          "utf16Column": 33,
          "utf16Offset": 33965
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 33944,
          "line": 872,
          "utf16Column": 12,
          "utf16Offset": 33944
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "netview.delegate=self",
      "html": {
        "info": "StorageContainer attaches itself as a <code class=\"fauxpas-objcclass\">NetActivityView</code> delegate, but does not detach in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>.",
        "ruleDescription": "When an object sets itself as the delegate or data source of one of its members, it must detach that reference in its <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code> method.",
        "ruleName": "Undetached delegate or data source",
        "ruleShortName": "UndetachedDelegate",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "StorageContainer attaches itself as a NetActivityView delegate, but does not detach in -[NSObject dealloc].",
      "ruleDescription": "When an object sets itself as the delegate or data source of one of its members, it must detach that reference in its -[NSObject dealloc] method.",
      "ruleName": "Undetached delegate or data source",
      "ruleShortName": "UndetachedDelegate",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "firstChild",
      "extent": {
        "end": {
          "byteColumn": 88,
          "byteOffset": 4770,
          "line": 145,
          "utf16Column": 87,
          "utf16Offset": 4768
        },
        "start": {
          "byteColumn": 62,
          "byteOffset": 4744,
          "line": 145,
          "utf16Column": 61,
          "utf16Offset": 4742
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SMXMLDocument.m",
      "fileSnippet": "[children objectAtIndex:0]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSArray objectAtIndex:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSArray objectAtIndex:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/intercon_iamok/intercon_checkin.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetContactNumber",
      "extent": {
        "end": {
          "byteColumn": 70,
          "byteOffset": 92040,
          "line": 2321,
          "utf16Column": 69,
          "utf16Offset": 92040
        },
        "start": {
          "byteColumn": 26,
          "byteOffset": 91996,
          "line": 2321,
          "utf16Column": 25,
          "utf16Offset": 91996
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[usersettings objectForKey:@\"contactnumber\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 26,
          "byteOffset": 1519,
          "line": 47,
          "utf16Column": 26,
          "utf16Offset": 1519
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 1493,
          "line": 47,
          "utf16Column": 0,
          "utf16Offset": 1493
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Encryption.h",
      "fileSnippet": "@interface XTEA : NSObject",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "XTEA",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "PrepareSendData:eventtype:",
      "extent": {
        "end": {
          "byteColumn": 91,
          "byteOffset": 47243,
          "line": 1435,
          "utf16Column": 90,
          "utf16Offset": 47243
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 47177,
          "line": 1435,
          "utf16Column": 24,
          "utf16Offset": 47177
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "NSLog(@\"Send OnDuty/Check-in/Billing/Journey %i\",send.sequencenum)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CreateNewRecentLoc:ldesc:llat:llng:",
      "extent": {
        "end": {
          "byteColumn": 49,
          "byteOffset": 84265,
          "line": 2044,
          "utf16Column": 48,
          "utf16Offset": 84265
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 84233,
          "line": 2044,
          "utf16Column": 16,
          "utf16Offset": 84233
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[NSNumber numberWithDouble:llat]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithDouble:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithDouble:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 31,
          "byteOffset": 13632,
          "line": 337,
          "utf16Column": 31,
          "utf16Offset": 13632
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 13601,
          "line": 337,
          "utf16Column": 0,
          "utf16Offset": 13601
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.h",
      "fileSnippet": "@interface LevelData : NSObject",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "LevelData",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "dismissme",
      "extent": {
        "end": {
          "byteColumn": 193,
          "byteOffset": 11390,
          "line": 266,
          "utf16Column": 192,
          "utf16Offset": 11389
        },
        "start": {
          "byteColumn": 36,
          "byteOffset": 11233,
          "line": 266,
          "utf16Column": 35,
          "utf16Offset": 11232
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_SLCompanionVC.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"Error\" message:@\"SafetyLink Companion Setup Not Complete.\" delegate:self cancelButtonTitle:@\"OK\" otherButtonTitles: nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">Error</code>, <code class=\"fauxpas-string\">SafetyLink Companion Setup Not Complete.</code>, <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings Error, SafetyLink Companion Setup Not Complete., OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RemoveEventBodyField:",
      "extent": {
        "end": {
          "byteColumn": 65,
          "byteOffset": 5566,
          "line": 197,
          "utf16Column": 64,
          "utf16Offset": 5566
        },
        "start": {
          "byteColumn": 35,
          "byteOffset": 5536,
          "line": 197,
          "utf16Column": 34,
          "utf16Offset": 5536
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "[NSNumber numberWithInt:etype]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetData:",
      "extent": {
        "end": {
          "byteColumn": 52,
          "byteOffset": 25932,
          "line": 762,
          "utf16Column": 51,
          "utf16Offset": 25932
        },
        "start": {
          "byteColumn": 23,
          "byteOffset": 25903,
          "line": 762,
          "utf16Column": 22,
          "utf16Offset": 25903
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "[allchanges objectForKey:key]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/common/redcircle_long.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 50,
          "byteOffset": 7406,
          "line": 268,
          "utf16Column": 50,
          "utf16Offset": 7406
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 7356,
          "line": 268,
          "utf16Column": 0,
          "utf16Offset": 7356
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.h",
      "fileSnippet": "@interface MyTCPComm : NSObject<HandleTCPDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "MyTCPComm",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "viewWillAppear:",
      "extent": {
        "end": {
          "byteColumn": 76,
          "byteOffset": 5567,
          "line": 132,
          "utf16Column": 75,
          "utf16Offset": 5567
        },
        "start": {
          "byteColumn": 38,
          "byteOffset": 5529,
          "line": 132,
          "utf16Column": 37,
          "utf16Offset": 5529
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SettingPickList_ViewController.m",
      "fileSnippet": "capTitle.text=@\"BATTERY WARNING LEVEL\"",
      "html": {
        "info": "<code class=\"fauxpas-objcproperty\">UILabel.text</code> value set to string <code class=\"fauxpas-string\">BATTERY WARNING LEVEL</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "UILabel.text value set to string BATTERY WARNING LEVEL",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 49,
          "byteOffset": 1618,
          "line": 57,
          "utf16Column": 48,
          "utf16Offset": 1618
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 1582,
          "line": 57,
          "utf16Column": 12,
          "utf16Offset": 1582
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_ViewController.m",
      "fileSnippet": "[cellTitle setText:@\"Notifications\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Notifications</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Notifications",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RegisterLocalNotifications",
      "extent": {
        "end": {
          "byteColumn": 117,
          "byteOffset": 67891,
          "line": 1662,
          "utf16Column": 116,
          "utf16Offset": 67891
        },
        "start": {
          "byteColumn": 72,
          "byteOffset": 67846,
          "line": 1662,
          "utf16Column": 71,
          "utf16Offset": 67846
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[NSNumber numberWithInt:LNT_CHECKIN_PREWARN1]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ContactSettings",
      "extent": {
        "end": {
          "byteColumn": 58,
          "byteOffset": 5230,
          "line": 167,
          "utf16Column": 57,
          "utf16Offset": 5230
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 5173,
          "line": 167,
          "utf16Column": 0,
          "utf16Offset": 5173
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *selected_level4key",
      "html": {
        "info": "The <code>selected_level4key</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The selected_level4key property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 103,
          "byteOffset": 349,
          "line": 13,
          "utf16Column": 103,
          "utf16Offset": 349
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 246,
          "line": 13,
          "utf16Column": 0,
          "utf16Offset": 246
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/UserInfo_ViewController.h",
      "fileSnippet": "@interface UserInfo_ViewController : UIViewController<HandleURLConDelegate,UIGestureRecognizerDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "UserInfo_ViewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "StartAnimationWithMessage:cancelmsg:le:",
      "extent": {
        "end": {
          "byteColumn": 63,
          "byteOffset": 1280,
          "line": 41,
          "utf16Column": 62,
          "utf16Offset": 1280
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 1222,
          "line": 41,
          "utf16Column": 4,
          "utf16Offset": 1222
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/NetActivityView.m",
      "fileSnippet": "[butClose setTitle:@\"Close\" forState:UIControlStateNormal]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIButton setTitle:forState:]</code> called with string <code class=\"fauxpas-string\">Close</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIButton setTitle:forState:] called with string Close",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RemoveRecentLocAtIndex:",
      "extent": {
        "end": {
          "byteColumn": 85,
          "byteOffset": 85233,
          "line": 2073,
          "utf16Column": 84,
          "utf16Offset": 85233
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 85157,
          "line": 2073,
          "utf16Column": 8,
          "utf16Offset": 85157
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"[ERROR] COREDATA: Save raised an error - '%@'\", [error description])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "stopScan",
      "extent": {
        "end": {
          "byteColumn": 77,
          "byteOffset": 5084,
          "line": 157,
          "utf16Column": 76,
          "utf16Offset": 5083
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 5016,
          "line": 157,
          "utf16Column": 8,
          "utf16Offset": 5015
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Discover_SLCompanionVC.m",
      "fileSnippet": "[butCancelRefresh setTitle:@\"REFRESH\" forState:UIControlStateNormal]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIButton setTitle:forState:]</code> called with string <code class=\"fauxpas-string\">REFRESH</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIButton setTitle:forState:] called with string REFRESH",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "centralManager:didDisconnectPeripheral:error:",
      "extent": {
        "end": {
          "byteColumn": 141,
          "byteOffset": 11597,
          "line": 349,
          "utf16Column": 140,
          "utf16Offset": 11596
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 11461,
          "line": 349,
          "utf16Column": 4,
          "utf16Offset": 11460
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "NSLog(@\"Disconnected %@ : %@ : %@ : %i\",peripheral.name,peripheral.identifier.UUIDString,[error localizedDescription],(int)[error code])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 118,
          "byteOffset": 337,
          "line": 12,
          "utf16Column": 118,
          "utf16Offset": 336
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 219,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 218
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_AppInfoVC.h",
      "fileSnippet": "@interface Options_AppInfoVC : UIViewController<UITableViewDataSource,UITableViewDelegate,UIGestureRecognizerDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "Options_AppInfoVC",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "AddChange:data:",
      "extent": {
        "end": {
          "byteColumn": 72,
          "byteOffset": 24511,
          "line": 723,
          "utf16Column": 71,
          "utf16Offset": 24511
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 24444,
          "line": 723,
          "utf16Column": 4,
          "utf16Offset": 24444
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "[allchanges setObject:data forKey:[NSNumber numberWithShort:ctype]]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSMutableDictionary setObject:forKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSMutableDictionary setObject:forKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithFrame:",
      "extent": {
        "end": {
          "byteColumn": 48,
          "byteOffset": 5565,
          "line": 157,
          "utf16Column": 47,
          "utf16Offset": 5565
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 5526,
          "line": 157,
          "utf16Column": 8,
          "utf16Offset": 5526
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/NetActivityView.m",
      "fileSnippet": "statusLabel.text = @\"Successfully Sent\"",
      "html": {
        "info": "<code class=\"fauxpas-objcproperty\">UILabel.text</code> value set to string <code class=\"fauxpas-string\">Successfully Sent</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "UILabel.text value set to string Successfully Sent",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "finishedReceive:error:data:",
      "extent": {
        "end": {
          "byteColumn": 58,
          "byteOffset": 5432,
          "line": 153,
          "utf16Column": 57,
          "utf16Offset": 5432
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 5387,
          "line": 153,
          "utf16Column": 12,
          "utf16Offset": 5387
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/ConfigureTemplates_ViewController.m",
      "fileSnippet": "NSLog(@\"Escalation Error - 0 bytes received\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "PrepareSendData:eventtype:",
      "extent": {
        "end": {
          "byteColumn": 101,
          "byteOffset": 50203,
          "line": 1491,
          "utf16Column": 100,
          "utf16Offset": 50203
        },
        "start": {
          "byteColumn": 57,
          "byteOffset": 50159,
          "line": 1491,
          "utf16Column": 56,
          "utf16Offset": 50159
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "NSLog(@\"Send keepalive %i\",send.sequencenum)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "UserReloadConfig",
      "extent": {
        "end": {
          "byteColumn": 44,
          "byteOffset": 32152,
          "line": 833,
          "utf16Column": 43,
          "utf16Offset": 32152
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 32121,
          "line": 833,
          "utf16Column": 12,
          "utf16Offset": 32121
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"Configuration Updated\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 18,
          "byteOffset": 80849,
          "line": 1950,
          "utf16Column": 17,
          "utf16Offset": 80849
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 80844,
          "line": 1950,
          "utf16Column": 12,
          "utf16Offset": 80844
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "error",
      "html": {
        "info": null,
        "ruleDescription": "Methods that pass back <code class=\"fauxpas-objcclass\">NSError</code> objects by reference return <code class=\"fauxpas-codesymbol\">NO</code> or <code class=\"fauxpas-codesymbol\">nil</code> to indicate an error condition. This rule warns if the <code class=\"fauxpas-objcclass\">NSError</code> pointer is checked against <code class=\"fauxpas-codesymbol\">nil</code> without checking the return value.",
        "ruleName": "Fragile error condition check",
        "ruleShortName": "ErrorConditionCheck",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Methods that pass back NSError objects by reference return NO or nil to indicate an error condition. This rule warns if the NSError pointer is checked against nil without checking the return value.",
      "ruleName": "Fragile error condition check",
      "ruleShortName": "ErrorConditionCheck",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 143,
          "byteOffset": 31894,
          "line": 800,
          "utf16Column": 142,
          "utf16Offset": 31894
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 31756,
          "line": 800,
          "utf16Column": 4,
          "utf16Offset": 31756
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Main_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardDidHide:) name:UIKeyboardDidHideNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "DoConfigRequest",
      "extent": {
        "end": {
          "byteColumn": 121,
          "byteOffset": 6969,
          "line": 149,
          "utf16Column": 120,
          "utf16Offset": 6969
        },
        "start": {
          "byteColumn": 49,
          "byteOffset": 6897,
          "line": 149,
          "utf16Column": 48,
          "utf16Offset": 6897
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckSN_ViewController.m",
      "fileSnippet": "[[[NSBundle mainBundle] infoDictionary] objectForKey:@\"CFBundleVersion\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "SMXMLDocumentError(NSXMLParser *__strong, NSError *__strong)",
      "extent": {
        "end": {
          "byteColumn": 58,
          "byteOffset": 738,
          "line": 11,
          "utf16Column": 57,
          "utf16Offset": 738
        },
        "start": {
          "byteColumn": 2,
          "byteOffset": 682,
          "line": 11,
          "utf16Column": 1,
          "utf16Offset": 682
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SMXMLDocument.m",
      "fileSnippet": "[userInfo setObject:columnNumber forKey:@\"ColumnNumber\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSMutableDictionary setObject:forKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSMutableDictionary setObject:forKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "application:didReceiveRemoteNotification:",
      "extent": {
        "end": {
          "byteColumn": 106,
          "byteOffset": 1882,
          "line": 55,
          "utf16Column": 105,
          "utf16Offset": 1882
        },
        "start": {
          "byteColumn": 76,
          "byteOffset": 1852,
          "line": 55,
          "utf16Column": 75,
          "utf16Offset": 1852
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SafetyLinkAppDelegate.m",
      "fileSnippet": "[userInfo objectForKey:@\"aps\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ReceivedMessage:data:",
      "extent": {
        "end": {
          "byteColumn": 34,
          "byteOffset": 67377,
          "line": 1882,
          "utf16Column": 33,
          "utf16Offset": 67377
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 67356,
          "line": 1882,
          "utf16Column": 12,
          "utf16Offset": 67356
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "NSLog(@\"Nav Connect\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 57,
          "byteOffset": 8776,
          "line": 204,
          "utf16Column": 56,
          "utf16Offset": 8775
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 8732,
          "line": 204,
          "utf16Column": 12,
          "utf16Offset": 8731
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_SLCompanionVC.m",
      "fileSnippet": "[cellTitle setText:@\"Battery Warning Level\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Battery Warning Level</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Battery Warning Level",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RegisterLocalNotifications",
      "extent": {
        "end": {
          "byteColumn": 116,
          "byteOffset": 70944,
          "line": 1713,
          "utf16Column": 115,
          "utf16Offset": 70944
        },
        "start": {
          "byteColumn": 72,
          "byteOffset": 70900,
          "line": 1713,
          "utf16Column": 71,
          "utf16Offset": 70900
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[NSNumber numberWithInt:LNT_HAZARD_PREWARN1]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "doAlertOffDuty:body:",
      "extent": {
        "end": {
          "byteColumn": 139,
          "byteOffset": 96183,
          "line": 2431,
          "utf16Column": 138,
          "utf16Offset": 96183
        },
        "start": {
          "byteColumn": 24,
          "byteOffset": 96068,
          "line": 2431,
          "utf16Column": 23,
          "utf16Offset": 96068
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:title message:body delegate:self cancelButtonTitle:@\"OK\" otherButtonTitles: nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with string <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with string OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/intercon_iamok/intercon_iamok.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RemoveTextMsgAtIndex:",
      "extent": {
        "end": {
          "byteColumn": 54,
          "byteOffset": 79023,
          "line": 1891,
          "utf16Column": 53,
          "utf16Offset": 79023
        },
        "start": {
          "byteColumn": 27,
          "byteOffset": 78996,
          "line": 1891,
          "utf16Column": 26,
          "utf16Offset": 78996
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[txtmsgs objectAtIndex:idx]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSArray objectAtIndex:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSArray objectAtIndex:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/intercon_iamok/intercon_puzzle.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/telelink_journey/telelink_logo.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetSLBandUUID",
      "extent": {
        "end": {
          "byteColumn": 67,
          "byteOffset": 2664,
          "line": 93,
          "utf16Column": 66,
          "utf16Offset": 2663
        },
        "start": {
          "byteColumn": 26,
          "byteOffset": 2623,
          "line": 93,
          "utf16Column": 25,
          "utf16Offset": 2622
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "[usersettings objectForKey:@\"slbanduuid\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "Encode:offset:size:",
      "extent": {
        "end": {
          "byteColumn": 88,
          "byteOffset": 34749,
          "line": 1028,
          "utf16Column": 87,
          "utf16Offset": 34749
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 34674,
          "line": 1028,
          "utf16Column": 12,
          "utf16Offset": 34674
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "block = [[NSData alloc] initWithBytes:(const void*)(temp+offset) length:sz]",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RemoveRecentLocAtIndex:",
      "extent": {
        "end": {
          "byteColumn": 53,
          "byteOffset": 85027,
          "line": 2067,
          "utf16Column": 52,
          "utf16Offset": 85027
        },
        "start": {
          "byteColumn": 24,
          "byteOffset": 84998,
          "line": 2067,
          "utf16Column": 23,
          "utf16Offset": 84998
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[recentloc objectAtIndex:idx]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSArray objectAtIndex:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSArray objectAtIndex:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetUserName",
      "extent": {
        "end": {
          "byteColumn": 35,
          "byteOffset": 91340,
          "line": 2286,
          "utf16Column": 34,
          "utf16Offset": 91340
        },
        "start": {
          "byteColumn": 16,
          "byteOffset": 91321,
          "line": 2286,
          "utf16Column": 15,
          "utf16Offset": 91321
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "(temp) ? temp : @\"\"",
      "html": {
        "info": null,
        "ruleDescription": "Expressions of the form <code>(obj ? obj : other)</code> should be written as <code>obj ?: other</code>.",
        "ruleName": "Null coalescing operator usage",
        "ruleShortName": "NullCoalescingOp",
        "ruleWarning": "Please note that in the form <code>(obj ? obj : other)</code> the <code>obj</code> expression is evaluated twice, while in the <code>obj ?: other</code> form it is evaluated only once."
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "Expressions of the form (obj ? obj : other) should be written as obj ?: other.",
      "ruleName": "Null coalescing operator usage",
      "ruleShortName": "NullCoalescingOp",
      "ruleWarning": "Please note that in the form (obj ? obj : other) the obj expression is evaluated twice, while in the obj ?: other form it is evaluated only once.",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetVehiclePlate",
      "extent": {
        "end": {
          "byteColumn": 69,
          "byteOffset": 91851,
          "line": 2312,
          "utf16Column": 68,
          "utf16Offset": 91851
        },
        "start": {
          "byteColumn": 26,
          "byteOffset": 91808,
          "line": 2312,
          "utf16Column": 25,
          "utf16Offset": 91808
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[usersettings objectForKey:@\"vehicleplate\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/telelink_journey/signal2.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_default/checkin_up@2x.png",
      "fileSnippet": null,
      "html": {
        "info": "<div class=\"fauxpas-filename\">checkin_up@2x.png</div> resolution (128 x 130) should be 2x that of <div class=\"fauxpas-filename\">checkin_up.png</div> (64 x 66). Expected resolution: 128 x 132.",
        "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
        "ruleName": "Unexpected retina image resolution",
        "ruleShortName": "RetinaImagesResolution",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "checkin_up@2x.png resolution (128 x 130) should be 2x that of checkin_up.png (64 x 66). Expected resolution: 128 x 132.",
      "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
      "ruleName": "Unexpected retina image resolution",
      "ruleShortName": "RetinaImagesResolution",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 143,
          "byteOffset": 9845,
          "line": 253,
          "utf16Column": 142,
          "utf16Offset": 9845
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 9707,
          "line": 253,
          "utf16Column": 4,
          "utf16Offset": 9707
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Location_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardDidHide:) name:UIKeyboardDidHideNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "SettingPickList_ViewController",
      "extent": {
        "end": {
          "byteColumn": 50,
          "byteOffset": 805,
          "line": 28,
          "utf16Column": 49,
          "utf16Offset": 805
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 756,
          "line": 28,
          "utf16Column": 0,
          "utf16Offset": 756
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SettingPickList_ViewController.h",
      "fileSnippet": "@property (retain, nonatomic) NSArray* listsource",
      "html": {
        "info": "The <code>listsource</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The listsource property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "FillBuf:offset:busSize:",
      "extent": {
        "end": {
          "byteColumn": 21,
          "byteOffset": 9347,
          "line": 285,
          "utf16Column": 20,
          "utf16Offset": 9347
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 9335,
          "line": 285,
          "utf16Column": 8,
          "utf16Offset": 9335
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Encryption.m",
      "fileSnippet": "bufSize -= 4",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_default/emergency_down.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/telelink_journey/signaln.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CreateNewRecentVehiclePlates:plateinfo:",
      "extent": {
        "end": {
          "byteColumn": 91,
          "byteOffset": 81369,
          "line": 1958,
          "utf16Column": 90,
          "utf16Offset": 81369
        },
        "start": {
          "byteColumn": 15,
          "byteOffset": 81293,
          "line": 1958,
          "utf16Column": 14,
          "utf16Offset": 81293
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"[ERROR] COREDATA: Save raised an error - '%@'\", [error description])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "showwarn:",
      "extent": {
        "end": {
          "byteColumn": 57,
          "byteOffset": 3674,
          "line": 107,
          "utf16Column": 56,
          "utf16Offset": 3674
        },
        "start": {
          "byteColumn": 30,
          "byteOffset": 3647,
          "line": 107,
          "utf16Column": 29,
          "utf16Offset": 3647
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SOS_ViewController.m",
      "fileSnippet": "[NSNumber numberWithInt:et]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:didSelectRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 155,
          "byteOffset": 7577,
          "line": 174,
          "utf16Column": 154,
          "utf16Offset": 7576
        },
        "start": {
          "byteColumn": 35,
          "byteOffset": 7457,
          "line": 174,
          "utf16Column": 34,
          "utf16Offset": 7456
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_NotificationsVC.m",
      "fileSnippet": "[NSArray arrayWithObjects:@\"1 Time\",@\"2 Times\",@\"3 Times\",@\"4 Times\",@\"5 Times\",@\"10 Times\",@\"15 Times\",@\"20 Times\",nil]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSArray arrayWithObjects:]</code> is called. Consider using an Objective-C container literal expression instead.</p><p>NOTE: there is a crucial difference between the current implementation and the suggestion here: While a nil value for any of the given values to this method will only terminate the argument list, a nil value in the literal container expression will result in a runtime exception.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSArray arrayWithObjects:] is called. Consider using an Objective-C container literal expression instead.NOTE: there is a crucial difference between the current implementation and the suggestion here: While a nil value for any of the given values to this method will only terminate the argument list, a nil value in the literal container expression will result in a runtime exception.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": null,
      "fileSnippet": null,
      "html": {
        "info": "Required compiler argument <code>-DNDEBUG</code> is not used. This argument disables the C standard library assertion macro (as defined in <code>assert.h</code>).",
        "ruleDescription": "For release builds, warns when some expected arguments are missing, or some unexpected arguments are present.",
        "ruleName": "Problematic release build compiler arguments",
        "ruleShortName": "ReleaseBuildCompilerArgs",
        "ruleWarning": null
      },
      "identifier": "-DNDEBUG",
      "impact": "Functionality",
      "info": "Required compiler argument -DNDEBUG is not used. This argument disables the C standard library assertion macro (as defined in assert.h).",
      "ruleDescription": "For release builds, warns when some expected arguments are missing, or some unexpected arguments are present.",
      "ruleName": "Problematic release build compiler arguments",
      "ruleShortName": "ReleaseBuildCompilerArgs",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "PrepareSendData:eventtype:",
      "extent": {
        "end": {
          "byteColumn": 73,
          "byteOffset": 48031,
          "line": 1450,
          "utf16Column": 72,
          "utf16Offset": 48031
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 47983,
          "line": 1450,
          "utf16Column": 24,
          "utf16Offset": 47983
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "NSLog(@\"Send Hazard Cancel %i\",send.sequencenum)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "SetSLBatteryWarningLevel:",
      "extent": {
        "end": {
          "byteColumn": 61,
          "byteOffset": 3736,
          "line": 130,
          "utf16Column": 60,
          "utf16Offset": 3735
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 3700,
          "line": 130,
          "utf16Column": 24,
          "utf16Offset": 3699
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "[NSNumber numberWithInt:batterywarn]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 143,
          "byteOffset": 12662,
          "line": 372,
          "utf16Column": 142,
          "utf16Offset": 12662
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 12524,
          "line": 372,
          "utf16Column": 4,
          "utf16Offset": 12524
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SignOn_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardDidHide:) name:UIKeyboardDidHideNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 148,
          "byteOffset": 400,
          "line": 12,
          "utf16Column": 148,
          "utf16Offset": 399
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 252,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 251
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Discover_SLCompanionVC.h",
      "fileSnippet": "@interface Discover_SLCompanionVC : UIViewController<UITableViewDataSource,UITableViewDelegate,UIGestureRecognizerDelegate,FitKatControllerDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "Discover_SLCompanionVC",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/Application icons/Safetylink512.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/Application icons/Safetylink512.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RemoveRecentBillingAtIndex:",
      "extent": {
        "end": {
          "byteColumn": 85,
          "byteOffset": 88142,
          "line": 2161,
          "utf16Column": 84,
          "utf16Offset": 88142
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 88066,
          "line": 2161,
          "utf16Column": 8,
          "utf16Offset": 88066
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"[ERROR] COREDATA: Save raised an error - '%@'\", [error description])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 42,
          "byteOffset": 4582,
          "line": 128,
          "utf16Column": 41,
          "utf16Offset": 4581
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 4553,
          "line": 128,
          "utf16Column": 12,
          "utf16Offset": 4552
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_SLCompanionVC.m",
      "fileSnippet": "[cellTitle setText:@\"Enable\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Enable</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Enable",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/Application icons/Safetylink29.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/Application icons/Safetylink29.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "ReceivedData:data:lastevent:",
      "extent": {
        "end": {
          "byteColumn": 56,
          "byteOffset": 48012,
          "line": 1169,
          "utf16Column": 55,
          "utf16Offset": 48012
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 47973,
          "line": 1169,
          "utf16Column": 16,
          "utf16Offset": 47973
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[formatter setDateFormat:@\"yyyy-MM-dd\"]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when an <code class=\"fauxpas-objcclass\">NSDateFormatter</code> is used with fixed-format dates without using the invariant <code class=\"fauxpas-string\">en_US_POSIX</code> locale. If any other locale is used, the date format string may be overwritten, depending on system date and time settings.</p> <p>When working with user-visible dates, date and time styles should be used instead of setting a date format.</p>",
        "ruleName": "Fixed-format <code class=\"fauxpas-objcclass\">NSDateFormatter</code> not using invariant (POSIX) locale",
        "ruleShortName": "FixedFormatDateFormatter",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Warns when an NSDateFormatter is used with fixed-format dates without using the invariant en_US_POSIX locale. If any other locale is used, the date format string may be overwritten, depending on system date and time settings. When working with user-visible dates, date and time styles should be used instead of setting a date format.",
      "ruleName": "Fixed-format NSDateFormatter not using invariant (POSIX) locale",
      "ruleShortName": "FixedFormatDateFormatter",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 145,
          "byteOffset": 23265,
          "line": 659,
          "utf16Column": 144,
          "utf16Offset": 23265
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 23125,
          "line": 659,
          "utf16Column": 4,
          "utf16Offset": 23125
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Assist_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillShow:) name:UIKeyboardWillShowNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "finishedReceive:error:data:",
      "extent": {
        "end": {
          "byteColumn": 64,
          "byteOffset": 53235,
          "line": 1306,
          "utf16Column": 63,
          "utf16Offset": 53235
        },
        "start": {
          "byteColumn": 28,
          "byteOffset": 53199,
          "line": 1306,
          "utf16Column": 27,
          "utf16Offset": 53199
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"Configuration Error in xml\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Location.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "showwarn:",
      "extent": {
        "end": {
          "byteColumn": 100,
          "byteOffset": 2547,
          "line": 75,
          "utf16Column": 99,
          "utf16Offset": 2547
        },
        "start": {
          "byteColumn": 32,
          "byteOffset": 2354,
          "line": 74,
          "utf16Column": 31,
          "utf16Offset": 2354
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SignOn_ViewController.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"Please Provide Your Location\" message:msg delegate:self \n                                                cancelButtonTitle:@\"OK\" otherButtonTitles:nil, nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">Please Provide Your Location</code>, <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings Please Provide Your Location, OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetSLSilentEmergency",
      "extent": {
        "end": {
          "byteColumn": 78,
          "byteOffset": 4582,
          "line": 158,
          "utf16Column": 77,
          "utf16Offset": 4581
        },
        "start": {
          "byteColumn": 26,
          "byteOffset": 4530,
          "line": 158,
          "utf16Column": 25,
          "utf16Offset": 4529
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "[usersettings objectForKey:@\"slbandsilentemergency\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "PrepareSendData:eventtype:",
      "extent": {
        "end": {
          "byteColumn": 98,
          "byteOffset": 50099,
          "line": 1490,
          "utf16Column": 97,
          "utf16Offset": 50099
        },
        "start": {
          "byteColumn": 60,
          "byteOffset": 50061,
          "line": 1490,
          "utf16Column": 59,
          "utf16Offset": 50061
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "NSLog(@\"Send ack %i\",send.sequencenum)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "finishedReceive:error:data:",
      "extent": {
        "end": {
          "byteColumn": 51,
          "byteOffset": 4522,
          "line": 85,
          "utf16Column": 50,
          "utf16Offset": 4522
        },
        "start": {
          "byteColumn": 21,
          "byteOffset": 4492,
          "line": 85,
          "utf16Column": 20,
          "utf16Offset": 4492
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SetPassword_ViewController.m",
      "fileSnippet": "NSLog(@\"Result Tag Not Found\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ContactSettings",
      "extent": {
        "end": {
          "byteColumn": 58,
          "byteOffset": 5171,
          "line": 166,
          "utf16Column": 57,
          "utf16Offset": 5171
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 5114,
          "line": 166,
          "utf16Column": 0,
          "utf16Offset": 5114
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *selected_level3key",
      "html": {
        "info": "The <code>selected_level3key</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The selected_level3key property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 14,
          "byteOffset": 84744,
          "line": 2057,
          "utf16Column": 13,
          "utf16Offset": 84744
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 84739,
          "line": 2057,
          "utf16Column": 8,
          "utf16Offset": 84739
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "error",
      "html": {
        "info": null,
        "ruleDescription": "Methods that pass back <code class=\"fauxpas-objcclass\">NSError</code> objects by reference return <code class=\"fauxpas-codesymbol\">NO</code> or <code class=\"fauxpas-codesymbol\">nil</code> to indicate an error condition. This rule warns if the <code class=\"fauxpas-objcclass\">NSError</code> pointer is checked against <code class=\"fauxpas-codesymbol\">nil</code> without checking the return value.",
        "ruleName": "Fragile error condition check",
        "ruleShortName": "ErrorConditionCheck",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Methods that pass back NSError objects by reference return NO or nil to indicate an error condition. This rule warns if the NSError pointer is checked against nil without checking the return value.",
      "ruleName": "Fragile error condition check",
      "ruleShortName": "ErrorConditionCheck",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "StatusUpdated",
      "extent": {
        "end": {
          "byteColumn": 89,
          "byteOffset": 15926,
          "line": 401,
          "utf16Column": 88,
          "utf16Offset": 15926
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 15850,
          "line": 401,
          "utf16Column": 12,
          "utf16Offset": 15850
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Main_ViewController.m",
      "fileSnippet": "[butStartStopBilling setTitle:@\"STOP BILLING\" forState:UIControlStateNormal]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIButton setTitle:forState:]</code> called with string <code class=\"fauxpas-string\">STOP BILLING</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIButton setTitle:forState:] called with string STOP BILLING",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "finishedReceive:error:data:",
      "extent": {
        "end": {
          "byteColumn": 145,
          "byteOffset": 3440,
          "line": 68,
          "utf16Column": 144,
          "utf16Offset": 3440
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 3312,
          "line": 68,
          "utf16Column": 16,
          "utf16Offset": 3312
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SetPassword_ViewController.m",
      "fileSnippet": "NSLog(@\"Register Error - %@ %@\",[error localizedDescription],[[error userInfo] objectForKey:NSURLErrorFailingURLStringErrorKey])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_default/checkin_down.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "peripheral:didUpdateValueForCharacteristic:error:",
      "extent": {
        "end": {
          "byteColumn": 91,
          "byteOffset": 19436,
          "line": 573,
          "utf16Column": 90,
          "utf16Offset": 19435
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 19354,
          "line": 573,
          "utf16Column": 8,
          "utf16Offset": 19353
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "NSLog(@\"------------Battery Level %i %i-----------\", batterylevel, batteryPercent)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 142,
          "byteOffset": 12374,
          "line": 370,
          "utf16Column": 141,
          "utf16Offset": 12374
        },
        "start": {
          "byteColumn": 2,
          "byteOffset": 12234,
          "line": 370,
          "utf16Column": 1,
          "utf16Offset": 12234
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SignOn_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillHide:) name:UIKeyboardWillHideNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "dealloc",
      "extent": {
        "end": {
          "byteColumn": 18,
          "byteOffset": 1149,
          "line": 29,
          "utf16Column": 17,
          "utf16Offset": 1149
        },
        "start": {
          "byteColumn": 2,
          "byteOffset": 1133,
          "line": 29,
          "utf16Column": 1,
          "utf16Offset": 1133
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SMXMLDocument.m",
      "fileSnippet": "self.value = nil",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "value",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "PrepareSendData:eventtype:",
      "extent": {
        "end": {
          "byteColumn": 72,
          "byteOffset": 46402,
          "line": 1420,
          "utf16Column": 71,
          "utf16Offset": 46402
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 46355,
          "line": 1420,
          "utf16Column": 24,
          "utf16Offset": 46355
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "NSLog(@\"Send Set Template %i\",send.sequencenum)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RemoveRecentVehiclePlateAtIndex:",
      "extent": {
        "end": {
          "byteColumn": 85,
          "byteOffset": 82190,
          "line": 1984,
          "utf16Column": 84,
          "utf16Offset": 82190
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 82114,
          "line": 1984,
          "utf16Column": 8,
          "utf16Offset": 82114
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"[ERROR] COREDATA: Save raised an error - '%@'\", [error description])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FileNames.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CancelAllLocalNotifications",
      "extent": {
        "end": {
          "byteColumn": 51,
          "byteOffset": 7929,
          "line": 222,
          "utf16Column": 50,
          "utf16Offset": 7929
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 7887,
          "line": 222,
          "utf16Column": 8,
          "utf16Offset": 7887
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.m",
      "fileSnippet": "NSLog(@\"Removing All Local Notifications\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 129,
          "byteOffset": 360,
          "line": 12,
          "utf16Column": 129,
          "utf16Offset": 360
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 231,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 231
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/BillingLookup_ViewController.h",
      "fileSnippet": "@interface BillingLookup_ViewController : UIViewController<UITableViewDataSource,UITableViewDelegate,UIGestureRecognizerDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "BillingLookup_ViewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RegisterLocalNotifications",
      "extent": {
        "end": {
          "byteColumn": 98,
          "byteOffset": 65765,
          "line": 1628,
          "utf16Column": 97,
          "utf16Offset": 65765
        },
        "start": {
          "byteColumn": 53,
          "byteOffset": 65720,
          "line": 1628,
          "utf16Column": 52,
          "utf16Offset": 65720
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[NSNumber numberWithInt:LNT_CHECKIN_PREWARN1]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 58,
          "byteOffset": 3966,
          "line": 122,
          "utf16Column": 57,
          "utf16Offset": 3965
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 3933,
          "line": 122,
          "utf16Column": 24,
          "utf16Offset": 3932
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_AppInfoVC.m",
      "fileSnippet": "[cellTitle setText:@\"License ID\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">License ID</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string License ID",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetFullURL",
      "extent": {
        "end": {
          "byteColumn": 119,
          "byteOffset": 1255,
          "line": 40,
          "utf16Column": 118,
          "utf16Offset": 1255
        },
        "start": {
          "byteColumn": 91,
          "byteOffset": 1227,
          "line": 40,
          "utf16Column": 90,
          "utf16Offset": 1227
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/HTTPHelper.m",
      "fileSnippet": "[urlparams objectForKey:key]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "CreateLicenseSN",
      "extent": {
        "end": {
          "byteColumn": 27,
          "byteOffset": 3488,
          "line": 88,
          "utf16Column": 26,
          "utf16Offset": 3488
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 3474,
          "line": 88,
          "utf16Column": 12,
          "utf16Offset": 3474
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckSN_ViewController.m",
      "fileSnippet": "NSError *error",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when <code class=\"fauxpas-objcclass\">NSError</code> or <code class=\"fauxpas-typedef\">CFErrorRef</code> variable values are never used.</p> <p>If you are not interested in the error return value of a method or function, pass <code class=\"fauxpas-codesymbol\">NULL</code> for the error argument.</p>",
        "ruleName": "Unused error value",
        "ruleShortName": "UnusedErrorValue",
        "ruleWarning": null
      },
      "identifier": "error",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Warns when NSError or CFErrorRef variable values are never used. If you are not interested in the error return value of a method or function, pass NULL for the error argument.",
      "ruleName": "Unused error value",
      "ruleShortName": "UnusedErrorValue",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "butPhoneMonitorClick:",
      "extent": {
        "end": {
          "byteColumn": 124,
          "byteOffset": 6389,
          "line": 190,
          "utf16Column": 123,
          "utf16Offset": 6389
        },
        "start": {
          "byteColumn": 30,
          "byteOffset": 6144,
          "line": 189,
          "utf16Column": 29,
          "utf16Offset": 6144
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Assist_ViewController.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"Contact Monitor Center\" message:@\"Are you sure you want to call the Monitor Center?\"\n                                                       delegate:self cancelButtonTitle:@\"No\" otherButtonTitles:@\"Yes\", nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">Contact Monitor Center</code>, <code class=\"fauxpas-string\">Are you sure you want to call the Monitor Center?</code>, <code class=\"fauxpas-string\">No</code>, <code class=\"fauxpas-string\">Yes</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings Contact Monitor Center, Are you sure you want to call the Monitor Center?, No, Yes",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "applicationWillResignActive:",
      "extent": {
        "end": {
          "byteColumn": 28,
          "byteOffset": 7291,
          "line": 167,
          "utf16Column": 27,
          "utf16Offset": 7291
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 7268,
          "line": 167,
          "utf16Column": 4,
          "utf16Offset": 7268
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SafetyLinkAppDelegate.m",
      "fileSnippet": "NSLog(@\"Resign Active\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 14,
          "byteOffset": 81681,
          "line": 1968,
          "utf16Column": 13,
          "utf16Offset": 81681
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 81676,
          "line": 1968,
          "utf16Column": 8,
          "utf16Offset": 81676
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "error",
      "html": {
        "info": null,
        "ruleDescription": "Methods that pass back <code class=\"fauxpas-objcclass\">NSError</code> objects by reference return <code class=\"fauxpas-codesymbol\">NO</code> or <code class=\"fauxpas-codesymbol\">nil</code> to indicate an error condition. This rule warns if the <code class=\"fauxpas-objcclass\">NSError</code> pointer is checked against <code class=\"fauxpas-codesymbol\">nil</code> without checking the return value.",
        "ruleName": "Fragile error condition check",
        "ruleShortName": "ErrorConditionCheck",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Methods that pass back NSError objects by reference return NO or nil to indicate an error condition. This rule warns if the NSError pointer is checked against nil without checking the return value.",
      "ruleName": "Fragile error condition check",
      "ruleShortName": "ErrorConditionCheck",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetLicenseFileName",
      "extent": {
        "end": {
          "byteColumn": 42,
          "byteOffset": 771,
          "line": 27,
          "utf16Column": 41,
          "utf16Offset": 771
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 742,
          "line": 27,
          "utf16Column": 12,
          "utf16Offset": 742
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FileNames.m",
      "fileSnippet": "[FileNames GetPreferencesDir]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "FileNames",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "addURLParam:value:",
      "extent": {
        "end": {
          "byteColumn": 88,
          "byteOffset": 505,
          "line": 19,
          "utf16Column": 87,
          "utf16Offset": 505
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 426,
          "line": 19,
          "utf16Column": 8,
          "utf16Offset": 426
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/HTTPHelper.m",
      "fileSnippet": "value = [value stringByAddingPercentEscapesUsingEncoding:NSASCIIStringEncoding]",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 55,
          "byteOffset": 9620,
          "line": 237,
          "utf16Column": 54,
          "utf16Offset": 9619
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 9590,
          "line": 237,
          "utf16Column": 24,
          "utf16Offset": 9589
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_AppInfoVC.m",
      "fileSnippet": "[cellTitle setText:@\"Expires\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Expires</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Expires",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initwithdata:number:email:email_detail:",
      "extent": {
        "end": {
          "byteColumn": 39,
          "byteOffset": 693,
          "line": 31,
          "utf16Column": 38,
          "utf16Offset": 693
        },
        "start": {
          "byteColumn": 22,
          "byteOffset": 676,
          "line": 31,
          "utf16Column": 21,
          "utf16Offset": 676
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.m",
      "fileSnippet": "[LevelData alloc]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "LevelData",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RegisterLocalNotifications",
      "extent": {
        "end": {
          "byteColumn": 117,
          "byteOffset": 74265,
          "line": 1768,
          "utf16Column": 116,
          "utf16Offset": 74265
        },
        "start": {
          "byteColumn": 72,
          "byteOffset": 74220,
          "line": 1768,
          "utf16Column": 71,
          "utf16Offset": 74220
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[NSNumber numberWithInt:LNT_OFFDUTY_PREWARN1]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 31,
          "byteOffset": 790,
          "line": 33,
          "utf16Column": 31,
          "utf16Offset": 790
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 759,
          "line": 33,
          "utf16Column": 0,
          "utf16Offset": 759
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.h",
      "fileSnippet": "@interface KissCoder : NSObject",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "KissCoder",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 143,
          "byteOffset": 29855,
          "line": 694,
          "utf16Column": 142,
          "utf16Offset": 29855
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 29717,
          "line": 694,
          "utf16Column": 4,
          "utf16Offset": 29717
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckSN_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardDidHide:) name:UIKeyboardDidHideNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "butConfimClick:",
      "extent": {
        "end": {
          "byteColumn": 123,
          "byteOffset": 8587,
          "line": 236,
          "utf16Column": 122,
          "utf16Offset": 8587
        },
        "start": {
          "byteColumn": 32,
          "byteOffset": 8324,
          "line": 234,
          "utf16Column": 31,
          "utf16Offset": 8324
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/ConfigureTemplates_ViewController.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                                          message:@\"Escalations cannot be empty\"\n                                                         delegate:self cancelButtonTitle:nil otherButtonTitles:@\"OK\", nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">Error</code>, <code class=\"fauxpas-string\">Escalations cannot be empty</code>, <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings Error, Escalations cannot be empty, OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 48,
          "byteOffset": 2247,
          "line": 78,
          "utf16Column": 47,
          "utf16Offset": 2247
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 2216,
          "line": 78,
          "utf16Column": 16,
          "utf16Offset": 2216
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Checkin_ViewController.m",
      "fileSnippet": "[cellTitle setText:@\"Off Time\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Off Time</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Off Time",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetSecurePassword",
      "extent": {
        "end": {
          "byteColumn": 71,
          "byteOffset": 90944,
          "line": 2267,
          "utf16Column": 70,
          "utf16Offset": 90944
        },
        "start": {
          "byteColumn": 26,
          "byteOffset": 90899,
          "line": 2267,
          "utf16Column": 25,
          "utf16Offset": 90899
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[usersettings objectForKey:@\"passwordsecure\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "StatusUpdated",
      "extent": {
        "end": {
          "byteColumn": 95,
          "byteOffset": 16324,
          "line": 408,
          "utf16Column": 94,
          "utf16Offset": 16324
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 16242,
          "line": 408,
          "utf16Column": 12,
          "utf16Offset": 16242
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Main_ViewController.m",
      "fileSnippet": "[butStartStopBilling setTitle:@\"START BILLING\" forState:UIControlStateHighlighted]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIButton setTitle:forState:]</code> called with string <code class=\"fauxpas-string\">START BILLING</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIButton setTitle:forState:] called with string START BILLING",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CreateNewRecentLoc:ldesc:llat:llng:",
      "extent": {
        "end": {
          "byteColumn": 52,
          "byteOffset": 84319,
          "line": 2045,
          "utf16Column": 51,
          "utf16Offset": 84319
        },
        "start": {
          "byteColumn": 20,
          "byteOffset": 84287,
          "line": 2045,
          "utf16Column": 19,
          "utf16Offset": 84287
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[NSNumber numberWithDouble:llng]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithDouble:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithDouble:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ScheduleLocalNotification:alertbody:type:",
      "extent": {
        "end": {
          "byteColumn": 48,
          "byteOffset": 4724,
          "line": 149,
          "utf16Column": 47,
          "utf16Offset": 4724
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 4689,
          "line": 149,
          "utf16Column": 12,
          "utf16Offset": 4689
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.m",
      "fileSnippet": "[Common IsNotificationEnabled:type]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "Common",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "dealloc",
      "extent": {
        "end": {
          "byteColumn": 18,
          "byteOffset": 5494,
          "line": 178,
          "utf16Column": 17,
          "utf16Offset": 5492
        },
        "start": {
          "byteColumn": 2,
          "byteOffset": 5478,
          "line": 178,
          "utf16Column": 1,
          "utf16Offset": 5476
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SMXMLDocument.m",
      "fileSnippet": "self.error = nil",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "error",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "removeURLParam:",
      "extent": {
        "end": {
          "byteColumn": 84,
          "byteOffset": 738,
          "line": 27,
          "utf16Column": 83,
          "utf16Offset": 738
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 663,
          "line": 27,
          "utf16Column": 8,
          "utf16Offset": 663
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/HTTPHelper.m",
      "fileSnippet": "key = [key stringByAddingPercentEscapesUsingEncoding:NSASCIIStringEncoding]",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "TCPPacket_SPTextMessage",
      "extent": {
        "end": {
          "byteColumn": 44,
          "byteOffset": 5908,
          "line": 208,
          "utf16Column": 43,
          "utf16Offset": 5908
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 5865,
          "line": 208,
          "utf16Column": 0,
          "utf16Offset": 5865
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *from",
      "html": {
        "info": "The <code>from</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The from property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CommOptions",
      "extent": {
        "end": {
          "byteColumn": 57,
          "byteOffset": 3153,
          "line": 106,
          "utf16Column": 56,
          "utf16Offset": 3153
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 3097,
          "line": 106,
          "utf16Column": 0,
          "utf16Offset": 3097
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *primaryServerName",
      "html": {
        "info": "The <code>primaryServerName</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The primaryServerName property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:commitEditingStyle:forRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 72,
          "byteOffset": 3589,
          "line": 112,
          "utf16Column": 71,
          "utf16Offset": 3589
        },
        "start": {
          "byteColumn": 36,
          "byteOffset": 3553,
          "line": 112,
          "utf16Column": 35,
          "utf16Offset": 3553
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/BillingLookup_ViewController.m",
      "fileSnippet": "[NSArray arrayWithObject: indexPath]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSArray arrayWithObject:]</code> is called. Consider using an Objective-C container literal expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSArray arrayWithObject:] is called. Consider using an Objective-C container literal expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "DisplayDisabledAlert",
      "extent": {
        "end": {
          "byteColumn": 86,
          "byteOffset": 76864,
          "line": 1830,
          "utf16Column": 85,
          "utf16Offset": 76864
        },
        "start": {
          "byteColumn": 28,
          "byteOffset": 76679,
          "line": 1829,
          "utf16Column": 27,
          "utf16Offset": 76679
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"Disabled\" message:@\"You are currently disabled.\" delegate:self\n                                      cancelButtonTitle:@\"OK\" otherButtonTitles: nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">Disabled</code>, <code class=\"fauxpas-string\">You are currently disabled.</code>, <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings Disabled, You are currently disabled., OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SOS_Controller.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 142,
          "byteOffset": 23381,
          "line": 650,
          "utf16Column": 141,
          "utf16Offset": 23381
        },
        "start": {
          "byteColumn": 2,
          "byteOffset": 23241,
          "line": 650,
          "utf16Column": 1,
          "utf16Offset": 23241
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Hazard_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillHide:) name:UIKeyboardWillHideNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetUserName",
      "extent": {
        "end": {
          "byteColumn": 65,
          "byteOffset": 91304,
          "line": 2285,
          "utf16Column": 64,
          "utf16Offset": 91304
        },
        "start": {
          "byteColumn": 26,
          "byteOffset": 91265,
          "line": 2285,
          "utf16Column": 25,
          "utf16Offset": 91265
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[usersettings objectForKey:@\"username\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "AddPadding:msgsize:",
      "extent": {
        "end": {
          "byteColumn": 14,
          "byteOffset": 13221,
          "line": 413,
          "utf16Column": 13,
          "utf16Offset": 13221
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 13212,
          "line": 413,
          "utf16Column": 4,
          "utf16Offset": 13212
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Encryption.m",
      "fileSnippet": "msgsize++",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/common/light_green.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 50,
          "byteOffset": 6375,
          "line": 168,
          "utf16Column": 49,
          "utf16Offset": 6374
        },
        "start": {
          "byteColumn": 29,
          "byteOffset": 6354,
          "line": 168,
          "utf16Column": 28,
          "utf16Offset": 6353
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_AppInfoVC.m",
      "fileSnippet": "cellData.text=@\"None\"",
      "html": {
        "info": "<code class=\"fauxpas-objcproperty\">UILabel.text</code> value set to string <code class=\"fauxpas-string\">None</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "UILabel.text value set to string None",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "PrepareSendData:eventtype:",
      "extent": {
        "end": {
          "byteColumn": 66,
          "byteOffset": 48295,
          "line": 1455,
          "utf16Column": 65,
          "utf16Offset": 48295
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 48254,
          "line": 1455,
          "utf16Column": 24,
          "utf16Offset": 48254
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "NSLog(@\"Send Assist %i\",send.sequencenum)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "sosButtonHit",
      "extent": {
        "end": {
          "byteColumn": 119,
          "byteOffset": 2860,
          "line": 107,
          "utf16Column": 118,
          "utf16Offset": 2859
        },
        "start": {
          "byteColumn": 28,
          "byteOffset": 2660,
          "line": 106,
          "utf16Column": 27,
          "utf16Offset": 2659
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_SLCTestMode.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"Test Success\" message:@\"All Tests Complete.\"\n                                                     delegate:self cancelButtonTitle:@\"OK\" otherButtonTitles:nil, nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">Test Success</code>, <code class=\"fauxpas-string\">All Tests Complete.</code>, <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings Test Success, All Tests Complete., OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 143,
          "byteOffset": 29711,
          "line": 693,
          "utf16Column": 142,
          "utf16Offset": 29711
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 29573,
          "line": 693,
          "utf16Column": 4,
          "utf16Offset": 29573
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckSN_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardDidShow:) name:UIKeyboardDidShowNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithFrame:",
      "extent": {
        "end": {
          "byteColumn": 27,
          "byteOffset": 11680,
          "line": 329,
          "utf16Column": 26,
          "utf16Offset": 11680
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 11662,
          "line": 329,
          "utf16Column": 8,
          "utf16Offset": 11662
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/NetActivityView.m",
      "fileSnippet": "capGPS.text=@\"GPS\"",
      "html": {
        "info": "<code class=\"fauxpas-objcproperty\">UILabel.text</code> value set to string <code class=\"fauxpas-string\">GPS</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "UILabel.text value set to string GPS",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CommOptions",
      "extent": {
        "end": {
          "byteColumn": 55,
          "byteOffset": 3368,
          "line": 110,
          "utf16Column": 54,
          "utf16Offset": 3368
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 3314,
          "line": 110,
          "utf16Column": 0,
          "utf16Offset": 3314
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *secondaryServer",
      "html": {
        "info": "The <code>secondaryServer</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The secondaryServer property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 120,
          "byteOffset": 345,
          "line": 11,
          "utf16Column": 120,
          "utf16Offset": 345
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 225,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 225
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/PatrolMsgs_ViewController.h",
      "fileSnippet": "@interface PatrolMsgs_ViewController : UIViewController<UITableViewDataSource,UITableViewDelegate,UpdateGUITextDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "PatrolMsgs_ViewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ReceivedMessage:data:",
      "extent": {
        "end": {
          "byteColumn": 80,
          "byteOffset": 70347,
          "line": 1948,
          "utf16Column": 79,
          "utf16Offset": 70347
        },
        "start": {
          "byteColumn": 41,
          "byteOffset": 70308,
          "line": 1948,
          "utf16Column": 40,
          "utf16Offset": 70308
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "NSLog(@\"Rcvd ack %i\",sphdr.sequencenum)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 56,
          "byteOffset": 4352,
          "line": 129,
          "utf16Column": 55,
          "utf16Offset": 4351
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 4321,
          "line": 129,
          "utf16Column": 24,
          "utf16Offset": 4320
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_AppInfoVC.m",
      "fileSnippet": "[cellTitle setText:@\"App Name\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">App Name</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string App Name",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetConfigSettingsFileName",
      "extent": {
        "end": {
          "byteColumn": 42,
          "byteOffset": 1045,
          "line": 37,
          "utf16Column": 41,
          "utf16Offset": 1045
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 1016,
          "line": 37,
          "utf16Column": 12,
          "utf16Offset": 1016
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FileNames.m",
      "fileSnippet": "[FileNames GetPreferencesDir]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "FileNames",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 143,
          "byteOffset": 14355,
          "line": 349,
          "utf16Column": 142,
          "utf16Offset": 14355
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 14217,
          "line": 349,
          "utf16Column": 4,
          "utf16Offset": 14217
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/UserInfo_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardDidHide:) name:UIKeyboardDidHideNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetTxtMsg:",
      "extent": {
        "end": {
          "byteColumn": 43,
          "byteOffset": 79480,
          "line": 1910,
          "utf16Column": 42,
          "utf16Offset": 79480
        },
        "start": {
          "byteColumn": 16,
          "byteOffset": 79453,
          "line": 1910,
          "utf16Column": 15,
          "utf16Offset": 79453
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[txtmsgs objectAtIndex:idx]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSArray objectAtIndex:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSArray objectAtIndex:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "finishedReceive:error:data:",
      "extent": {
        "end": {
          "byteColumn": 145,
          "byteOffset": 20447,
          "line": 504,
          "utf16Column": 144,
          "utf16Offset": 20447
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 20319,
          "line": 504,
          "utf16Column": 16,
          "utf16Offset": 20319
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckSN_ViewController.m",
      "fileSnippet": "NSLog(@\"Register Error - %@ %@\",[error localizedDescription],[[error userInfo] objectForKey:NSURLErrorFailingURLStringErrorKey])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "finishedReceive:error:data:",
      "extent": {
        "end": {
          "byteColumn": 51,
          "byteOffset": 22004,
          "line": 536,
          "utf16Column": 50,
          "utf16Offset": 22004
        },
        "start": {
          "byteColumn": 21,
          "byteOffset": 21974,
          "line": 536,
          "utf16Column": 20,
          "utf16Offset": 21974
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckSN_ViewController.m",
      "fileSnippet": "NSLog(@\"Result Tag Not Found\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/common/aware360_icon_messages2.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "changeOffDuty:",
      "extent": {
        "end": {
          "byteColumn": 73,
          "byteOffset": 825,
          "line": 26,
          "utf16Column": 72,
          "utf16Offset": 825
        },
        "start": {
          "byteColumn": 44,
          "byteOffset": 796,
          "line": 26,
          "utf16Column": 43,
          "utf16Offset": 796
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/OffTime_ViewController.m",
      "fileSnippet": "[visibleRows objectAtIndex:0]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSArray objectAtIndex:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSArray objectAtIndex:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 66,
          "byteOffset": 4379,
          "line": 151,
          "utf16Column": 65,
          "utf16Offset": 4378
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 4330,
          "line": 151,
          "utf16Column": 16,
          "utf16Offset": 4329
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_SLCTestMode.m",
      "fileSnippet": "[cellTitle setText:@\"SafetyLink Band Connecting\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">SafetyLink Band Connecting</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string SafetyLink Band Connecting",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "TCPPacket_SPTextMessage",
      "extent": {
        "end": {
          "byteColumn": 44,
          "byteOffset": 5953,
          "line": 209,
          "utf16Column": 43,
          "utf16Offset": 5953
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 5910,
          "line": 209,
          "utf16Column": 0,
          "utf16Offset": 5910
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *body",
      "html": {
        "info": "The <code>body</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The body property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 122,
          "byteOffset": 345,
          "line": 12,
          "utf16Column": 122,
          "utf16Offset": 344
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 223,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 222
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_SLCompanionVC.h",
      "fileSnippet": "@interface Options_SLCompanionVC : UIViewController<UITableViewDataSource,UITableViewDelegate,UIGestureRecognizerDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "Options_SLCompanionVC",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "application:didReceiveRemoteNotification:",
      "extent": {
        "end": {
          "byteColumn": 40,
          "byteOffset": 1816,
          "line": 55,
          "utf16Column": 39,
          "utf16Offset": 1816
        },
        "start": {
          "byteColumn": 10,
          "byteOffset": 1786,
          "line": 55,
          "utf16Column": 9,
          "utf16Offset": 1786
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SafetyLinkAppDelegate.m",
      "fileSnippet": "[userInfo objectForKey:@\"aps\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "done:",
      "extent": {
        "end": {
          "byteColumn": 115,
          "byteOffset": 2199,
          "line": 54,
          "utf16Column": 114,
          "utf16Offset": 2199
        },
        "start": {
          "byteColumn": 37,
          "byteOffset": 1961,
          "line": 53,
          "utf16Column": 36,
          "utf16Offset": 1961
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/OffTime_ViewController.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"Update Error\" message:@\"Could not update off time because the server is disconnected.\"\n                                                 delegate:self cancelButtonTitle:@\"OK\" otherButtonTitles:nil, nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">Update Error</code>, <code class=\"fauxpas-string\">Could not update off time because the server is disconnected.</code>, <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings Update Error, Could not update off time because the server is disconnected., OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 41,
          "byteOffset": 264,
          "line": 11,
          "utf16Column": 41,
          "utf16Offset": 264
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 223,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 223
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/VehiclePlate.h",
      "fileSnippet": "@interface VehiclePlate : NSManagedObject",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "VehiclePlate",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "viewDidAppear:",
      "extent": {
        "end": {
          "byteColumn": 122,
          "byteOffset": 28532,
          "line": 667,
          "utf16Column": 121,
          "utf16Offset": 28532
        },
        "start": {
          "byteColumn": 35,
          "byteOffset": 28291,
          "line": 666,
          "utf16Column": 34,
          "utf16Offset": 28291
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckSN_ViewController.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"License Error\" message:@\"Unable to generate license, contact your administrator.\" \n                                                            delegate:self cancelButtonTitle:@\"OK\" otherButtonTitles: nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">License Error</code>, <code class=\"fauxpas-string\">Unable to generate license, contact your administrator.</code>, <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings License Error, Unable to generate license, contact your administrator., OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 39,
          "byteOffset": 7052,
          "line": 169,
          "utf16Column": 38,
          "utf16Offset": 7051
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 7030,
          "line": 169,
          "utf16Column": 16,
          "utf16Offset": 7029
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_SLCompanionVC.m",
      "fileSnippet": "cellvalue.text=@\"None\"",
      "html": {
        "info": "<code class=\"fauxpas-objcproperty\">UILabel.text</code> value set to string <code class=\"fauxpas-string\">None</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "UILabel.text value set to string None",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "MonitorCommStateChange:",
      "extent": {
        "end": {
          "byteColumn": 41,
          "byteOffset": 21598,
          "line": 640,
          "utf16Column": 40,
          "utf16Offset": 21597
        },
        "start": {
          "byteColumn": 14,
          "byteOffset": 21571,
          "line": 640,
          "utf16Column": 13,
          "utf16Offset": 21570
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "[FitkatController Instance]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "FitkatController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RegisterLocalNotifications",
      "extent": {
        "end": {
          "byteColumn": 98,
          "byteOffset": 65864,
          "line": 1629,
          "utf16Column": 97,
          "utf16Offset": 65864
        },
        "start": {
          "byteColumn": 53,
          "byteOffset": 65819,
          "line": 1629,
          "utf16Column": 52,
          "utf16Offset": 65819
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[NSNumber numberWithInt:LNT_CHECKIN_PREWARN2]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ScheduleEmergencyNotification:alertbody:type:",
      "extent": {
        "end": {
          "byteColumn": 48,
          "byteOffset": 3979,
          "line": 126,
          "utf16Column": 47,
          "utf16Offset": 3979
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 3940,
          "line": 126,
          "utf16Column": 8,
          "utf16Offset": 3940
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.m",
      "fileSnippet": "NSLog(@\"Add Notification %@\",alertbody)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:didSelectRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 94,
          "byteOffset": 2662,
          "line": 85,
          "utf16Column": 93,
          "utf16Offset": 2661
        },
        "start": {
          "byteColumn": 43,
          "byteOffset": 2611,
          "line": 85,
          "utf16Column": 42,
          "utf16Offset": 2610
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_SLCompanionVC.m",
      "fileSnippet": "[NSArray arrayWithObjects:@\"15%\",@\"25%\",@\"50%\",nil]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSArray arrayWithObjects:]</code> is called. Consider using an Objective-C container literal expression instead.</p><p>NOTE: there is a crucial difference between the current implementation and the suggestion here: While a nil value for any of the given values to this method will only terminate the argument list, a nil value in the literal container expression will result in a runtime exception.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSArray arrayWithObjects:] is called. Consider using an Objective-C container literal expression instead.NOTE: there is a crucial difference between the current implementation and the suggestion here: While a nil value for any of the given values to this method will only terminate the argument list, a nil value in the literal container expression will result in a runtime exception.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "performActionsAfterConnection",
      "extent": {
        "end": {
          "byteColumn": 95,
          "byteOffset": 16292,
          "line": 498,
          "utf16Column": 94,
          "utf16Offset": 16291
        },
        "start": {
          "byteColumn": 47,
          "byteOffset": 16092,
          "line": 497,
          "utf16Column": 46,
          "utf16Offset": 16091
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "[NSArray arrayWithObjects:[CBUUID UUIDWithString:FK_SERVICE_GATT],[CBUUID UUIDWithString:FK_SERVICE_SOS],\n                                               [CBUUID UUIDWithString:FK_SERVICE_BATTERY],nil]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSArray arrayWithObjects:]</code> is called. Consider using an Objective-C container literal expression instead.</p><p>NOTE: there is a crucial difference between the current implementation and the suggestion here: While a nil value for any of the given values to this method will only terminate the argument list, a nil value in the literal container expression will result in a runtime exception.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSArray arrayWithObjects:] is called. Consider using an Objective-C container literal expression instead.NOTE: there is a crucial difference between the current implementation and the suggestion here: While a nil value for any of the given values to this method will only terminate the argument list, a nil value in the literal container expression will result in a runtime exception.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 143,
          "byteOffset": 31750,
          "line": 799,
          "utf16Column": 142,
          "utf16Offset": 31750
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 31612,
          "line": 799,
          "utf16Column": 4,
          "utf16Offset": 31612
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Main_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardDidShow:) name:UIKeyboardDidShowNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 95,
          "byteOffset": 318,
          "line": 12,
          "utf16Column": 95,
          "utf16Offset": 318
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 223,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 223
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Checkin_ViewController.h",
      "fileSnippet": "@interface Checkin_ViewController : UIViewController<UITableViewDataSource,UITableViewDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "Checkin_ViewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 142,
          "byteOffset": 21386,
          "line": 592,
          "utf16Column": 141,
          "utf16Offset": 21386
        },
        "start": {
          "byteColumn": 2,
          "byteOffset": 21246,
          "line": 592,
          "utf16Column": 1,
          "utf16Offset": 21246
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SOS_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillHide:) name:UIKeyboardWillHideNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_default/aware360icon_blue28.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 18,
          "byteOffset": 83867,
          "line": 2037,
          "utf16Column": 17,
          "utf16Offset": 83867
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 83862,
          "line": 2037,
          "utf16Column": 12,
          "utf16Offset": 83862
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "error",
      "html": {
        "info": null,
        "ruleDescription": "Methods that pass back <code class=\"fauxpas-objcclass\">NSError</code> objects by reference return <code class=\"fauxpas-codesymbol\">NO</code> or <code class=\"fauxpas-codesymbol\">nil</code> to indicate an error condition. This rule warns if the <code class=\"fauxpas-objcclass\">NSError</code> pointer is checked against <code class=\"fauxpas-codesymbol\">nil</code> without checking the return value.",
        "ruleName": "Fragile error condition check",
        "ruleShortName": "ErrorConditionCheck",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Methods that pass back NSError objects by reference return NO or nil to indicate an error condition. This rule warns if the NSError pointer is checked against nil without checking the return value.",
      "ruleName": "Fragile error condition check",
      "ruleShortName": "ErrorConditionCheck",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/Application icons/Safetylink44x58.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/Application icons/Safetylink44x58.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 28,
          "byteOffset": 14406,
          "line": 366,
          "utf16Column": 28,
          "utf16Offset": 14406
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 14378,
          "line": 366,
          "utf16Column": 0,
          "utf16Offset": 14378
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.h",
      "fileSnippet": "@interface Common : NSObject",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "Common",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 107,
          "byteOffset": 337,
          "line": 11,
          "utf16Column": 107,
          "utf16Offset": 337
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 230,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 230
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckinSettings_ViewController.h",
      "fileSnippet": "@interface CheckinSettings_ViewController : UIViewController<UpdateGUIDelegate,UIGestureRecognizerDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "CheckinSettings_ViewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "peripheral:didDiscoverCharacteristicsForService:error:",
      "extent": {
        "end": {
          "byteColumn": 73,
          "byteOffset": 17679,
          "line": 532,
          "utf16Column": 72,
          "utf16Offset": 17678
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 17611,
          "line": 532,
          "utf16Column": 4,
          "utf16Offset": 17610
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "NSLog(@\"Discovered Service %@\", [service.UUID representativeString])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ScheduleLocalNotification:alertbody:type:",
      "extent": {
        "end": {
          "byteColumn": 139,
          "byteOffset": 5933,
          "line": 167,
          "utf16Column": 138,
          "utf16Offset": 5933
        },
        "start": {
          "byteColumn": 39,
          "byteOffset": 5833,
          "line": 167,
          "utf16Column": 38,
          "utf16Offset": 5833
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.m",
      "fileSnippet": "[[[StorageContainer singleInstance] singlenotifications] objectForKey:[NSNumber numberWithInt:type]]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "butSubmitClick:",
      "extent": {
        "end": {
          "byteColumn": 121,
          "byteOffset": 1716,
          "line": 39,
          "utf16Column": 120,
          "utf16Offset": 1716
        },
        "start": {
          "byteColumn": 49,
          "byteOffset": 1644,
          "line": 39,
          "utf16Column": 48,
          "utf16Offset": 1644
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SetPassword_ViewController.m",
      "fileSnippet": "[[[NSBundle mainBundle] infoDictionary] objectForKey:@\"CFBundleVersion\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "LocationController",
      "extent": {
        "end": {
          "byteColumn": 65,
          "byteOffset": 1573,
          "line": 47,
          "utf16Column": 64,
          "utf16Offset": 1573
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1509,
          "line": 47,
          "utf16Column": 0,
          "utf16Offset": 1509
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/LocationController.h",
      "fileSnippet": "@property (nonatomic,retain) id<UpdateLocationDelegate> delegate",
      "html": {
        "info": null,
        "ruleDescription": "To avoid retain cycles, delegate setter methods should not retain or copy the delegate object.",
        "ruleName": "Retaining or copying delegate",
        "ruleShortName": "StrongDelegate",
        "ruleWarning": null
      },
      "identifier": "delegate",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "To avoid retain cycles, delegate setter methods should not retain or copy the delegate object.",
      "ruleName": "Retaining or copying delegate",
      "ruleShortName": "StrongDelegate",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 142,
          "byteOffset": 23408,
          "line": 660,
          "utf16Column": 141,
          "utf16Offset": 23408
        },
        "start": {
          "byteColumn": 2,
          "byteOffset": 23268,
          "line": 660,
          "utf16Column": 1,
          "utf16Offset": 23268
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Assist_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillHide:) name:UIKeyboardWillHideNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CommOptions",
      "extent": {
        "end": {
          "byteColumn": 59,
          "byteOffset": 3312,
          "line": 109,
          "utf16Column": 58,
          "utf16Offset": 3312
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 3254,
          "line": 109,
          "utf16Column": 0,
          "utf16Offset": 3254
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *secondaryServerName",
      "html": {
        "info": "The <code>secondaryServerName</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The secondaryServerName property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "UserReloadConfig",
      "extent": {
        "end": {
          "byteColumn": 140,
          "byteOffset": 32428,
          "line": 837,
          "utf16Column": 139,
          "utf16Offset": 32428
        },
        "start": {
          "byteColumn": 107,
          "byteOffset": 32395,
          "line": 837,
          "utf16Column": 106,
          "utf16Offset": 32395
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[StorageContainer singleInstance]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "StorageContainer",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CommOptions",
      "extent": {
        "end": {
          "byteColumn": 53,
          "byteOffset": 3633,
          "line": 116,
          "utf16Column": 52,
          "utf16Offset": 3633
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 3581,
          "line": 116,
          "utf16Column": 0,
          "utf16Offset": 3581
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *tlsCommonName",
      "html": {
        "info": "The <code>tlsCommonName</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The tlsCommonName property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "autoreconnectperipheral",
      "extent": {
        "end": {
          "byteColumn": 37,
          "byteOffset": 7329,
          "line": 246,
          "utf16Column": 36,
          "utf16Offset": 7328
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 7309,
          "line": 246,
          "utf16Column": 16,
          "utf16Offset": 7308
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "NSLog(@\"Auto Start\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 55,
          "byteOffset": 2276,
          "line": 77,
          "utf16Column": 54,
          "utf16Offset": 2276
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 2234,
          "line": 77,
          "utf16Column": 12,
          "utf16Offset": 2234
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_ViewController.m",
      "fileSnippet": "[cellTitle setText:@\"Contact Information\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Contact Information</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Contact Information",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 143,
          "byteOffset": 12603,
          "line": 374,
          "utf16Column": 142,
          "utf16Offset": 12603
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 12465,
          "line": 374,
          "utf16Column": 4,
          "utf16Offset": 12465
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/BillingInfo_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardDidHide:) name:UIKeyboardDidHideNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "finishedReceive:error:data:",
      "extent": {
        "end": {
          "byteColumn": 148,
          "byteOffset": 52640,
          "line": 1292,
          "utf16Column": 147,
          "utf16Offset": 52640
        },
        "start": {
          "byteColumn": 82,
          "byteOffset": 52574,
          "line": 1292,
          "utf16Column": 81,
          "utf16Offset": 52574
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[[error userInfo] objectForKey:NSURLErrorFailingURLStringErrorKey]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RemoveRecentVehiclePlateAtIndex:",
      "extent": {
        "end": {
          "byteColumn": 66,
          "byteOffset": 81989,
          "line": 1978,
          "utf16Column": 65,
          "utf16Offset": 81989
        },
        "start": {
          "byteColumn": 28,
          "byteOffset": 81951,
          "line": 1978,
          "utf16Column": 27,
          "utf16Offset": 81951
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[recentvehicleplate objectAtIndex:idx]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSArray objectAtIndex:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSArray objectAtIndex:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetPassword",
      "extent": {
        "end": {
          "byteColumn": 65,
          "byteOffset": 90753,
          "line": 2258,
          "utf16Column": 64,
          "utf16Offset": 90753
        },
        "start": {
          "byteColumn": 26,
          "byteOffset": 90714,
          "line": 2258,
          "utf16Column": 25,
          "utf16Offset": 90714
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[usersettings objectForKey:@\"password\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 141,
          "byteOffset": 364,
          "line": 12,
          "utf16Column": 141,
          "utf16Offset": 364
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 223,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 223
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SignOff_ViewController.h",
      "fileSnippet": "@interface SignOff_ViewController : UIViewController<UITableViewDataSource,UITableViewDelegate,UpdateGUIDelegate,UIGestureRecognizerDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "SignOff_ViewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetCompanionNotificationEnabled",
      "extent": {
        "end": {
          "byteColumn": 78,
          "byteOffset": 90251,
          "line": 2234,
          "utf16Column": 77,
          "utf16Offset": 90251
        },
        "start": {
          "byteColumn": 26,
          "byteOffset": 90199,
          "line": 2234,
          "utf16Column": 25,
          "utf16Offset": 90199
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[usersettings objectForKey:@\"companionnotification\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "init_all",
      "extent": {
        "end": {
          "byteColumn": 55,
          "byteOffset": 115263,
          "line": 2879,
          "utf16Column": 54,
          "utf16Offset": 115263
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 115217,
          "line": 2879,
          "utf16Column": 8,
          "utf16Offset": 115217
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "formatDate.dateFormat = @\"MMM dd yyyy,  HH:mm\"",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when an <code class=\"fauxpas-objcclass\">NSDateFormatter</code> is used with fixed-format dates without using the invariant <code class=\"fauxpas-string\">en_US_POSIX</code> locale. If any other locale is used, the date format string may be overwritten, depending on system date and time settings.</p> <p>When working with user-visible dates, date and time styles should be used instead of setting a date format.</p>",
        "ruleName": "Fixed-format <code class=\"fauxpas-objcclass\">NSDateFormatter</code> not using invariant (POSIX) locale",
        "ruleShortName": "FixedFormatDateFormatter",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Warns when an NSDateFormatter is used with fixed-format dates without using the invariant en_US_POSIX locale. If any other locale is used, the date format string may be overwritten, depending on system date and time settings. When working with user-visible dates, date and time styles should be used instead of setting a date format.",
      "ruleName": "Fixed-format NSDateFormatter not using invariant (POSIX) locale",
      "ruleShortName": "FixedFormatDateFormatter",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ScheduleLocalNotification:alertbody:type:",
      "extent": {
        "end": {
          "byteColumn": 70,
          "byteOffset": 4669,
          "line": 147,
          "utf16Column": 69,
          "utf16Offset": 4669
        },
        "start": {
          "byteColumn": 8,
          "byteOffset": 4607,
          "line": 147,
          "utf16Column": 7,
          "utf16Offset": 4607
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.m",
      "fileSnippet": "[Common checkNotifyTypePermission:UIUserNotificationTypeAlert]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "Common",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 133,
          "byteOffset": 10296,
          "line": 276,
          "utf16Column": 132,
          "utf16Offset": 10296
        },
        "start": {
          "byteColumn": 30,
          "byteOffset": 10193,
          "line": 276,
          "utf16Column": 29,
          "utf16Offset": 10193
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/ConfigureTemplates_ViewController.m",
      "fileSnippet": "[[[storeCon contactsettings]level3source] objectForKey:[[storeCon contactsettings] selected_level3key]]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": null,
      "fileSnippet": null,
      "html": {
        "info": "<p>The value of the build setting <code>FRAMEWORK_SEARCH_PATHS</code> contains the absolute path <div class=\"fauxpas-filepath\">/Users/MButler/Documents/XCode Projects/test1</div>. Make this path relative instead by using an appropriate build setting variable (e.g. <code>$(SRCROOT)</code>, <code>$(CONFIGURATION_BUILD_DIR)</code> or <code>$(SDKROOT)</code>).</p><p>Target <div class=\"fauxpas-target\">SafetyLink</div> build settings, build configuration <div class=\"fauxpas-buildconfig\">Debug</div></p>",
        "ruleDescription": "The project build configurations should not contain absolute path references. This will become a problem as soon as the project is moved to another developer’s computer.",
        "ruleName": "Absolute path in build setting value",
        "ruleShortName": "AbsPathInBuildSetting",
        "ruleWarning": null
      },
      "identifier": "FRAMEWORK_SEARCH_PATHS",
      "impact": "Maintainability",
      "info": "The value of the build setting FRAMEWORK_SEARCH_PATHS contains the absolute path /Users/MButler/Documents/XCode Projects/test1. Make this path relative instead by using an appropriate build setting variable (e.g. $(SRCROOT), $(CONFIGURATION_BUILD_DIR) or $(SDKROOT)).Target SafetyLink build settings, build configuration Debug",
      "ruleDescription": "The project build configurations should not contain absolute path references. This will become a problem as soon as the project is moved to another developer’s computer.",
      "ruleName": "Absolute path in build setting value",
      "ruleShortName": "AbsPathInBuildSetting",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 33,
          "byteOffset": 15250,
          "line": 381,
          "utf16Column": 33,
          "utf16Offset": 15250
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 15217,
          "line": 381,
          "utf16Column": 0,
          "utf16Offset": 15217
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.h",
      "fileSnippet": "@interface ManualTimer : NSObject",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "ManualTimer",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CreateNewRecentLoc:ldesc:llat:llng:",
      "extent": {
        "end": {
          "byteColumn": 91,
          "byteOffset": 84458,
          "line": 2047,
          "utf16Column": 90,
          "utf16Offset": 84458
        },
        "start": {
          "byteColumn": 15,
          "byteOffset": 84382,
          "line": 2047,
          "utf16Column": 14,
          "utf16Offset": 84382
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"[ERROR] COREDATA: Save raised an error - '%@'\", [error description])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "application:didReceiveRemoteNotification:",
      "extent": {
        "end": {
          "byteColumn": 67,
          "byteOffset": 2487,
          "line": 65,
          "utf16Column": 66,
          "utf16Offset": 2487
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 2429,
          "line": 65,
          "utf16Column": 8,
          "utf16Offset": 2429
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SafetyLinkAppDelegate.m",
      "fileSnippet": "NSLog(@\"Receive Remote Notification Inactive %@\",alertMsg)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 54,
          "byteOffset": 7158,
          "line": 187,
          "utf16Column": 53,
          "utf16Offset": 7157
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 7129,
          "line": 187,
          "utf16Column": 24,
          "utf16Offset": 7128
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_AppInfoVC.m",
      "fileSnippet": "[cellTitle setText:@\"Status\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Status</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Status",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "UpdateUserSettingsNameEmail:useremail:",
      "extent": {
        "end": {
          "byteColumn": 108,
          "byteOffset": 94122,
          "line": 2372,
          "utf16Column": 107,
          "utf16Offset": 94122
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 94019,
          "line": 2372,
          "utf16Column": 4,
          "utf16Offset": 94019
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "username = [username stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]]",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 33,
          "byteOffset": 506,
          "line": 21,
          "utf16Column": 33,
          "utf16Offset": 506
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 473,
          "line": 21,
          "utf16Column": 0,
          "utf16Offset": 473
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@interface ContactInfo : NSObject",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "ContactInfo",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_default/checkin_up.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/VehiclePlate.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RemoveTextMsgAtIndex:",
      "extent": {
        "end": {
          "byteColumn": 85,
          "byteOffset": 79229,
          "line": 1897,
          "utf16Column": 84,
          "utf16Offset": 79229
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 79153,
          "line": 1897,
          "utf16Column": 8,
          "utf16Offset": 79153
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"[ERROR] COREDATA: Save raised an error - '%@'\", [error description])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "locationManager:didUpdateToLocation:fromLocation:",
      "extent": {
        "end": {
          "byteColumn": 42,
          "byteOffset": 5844,
          "line": 140,
          "utf16Column": 41,
          "utf16Offset": 5844
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 5811,
          "line": 140,
          "utf16Column": 8,
          "utf16Offset": 5811
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/LocationController.m",
      "fileSnippet": "NSLog(@\"Accuracy 3km expire hit\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "SendStartStopJourney:",
      "extent": {
        "end": {
          "byteColumn": 35,
          "byteOffset": 60776,
          "line": 1508,
          "utf16Column": 34,
          "utf16Offset": 60776
        },
        "start": {
          "byteColumn": 23,
          "byteOffset": 60764,
          "line": 1508,
          "utf16Column": 22,
          "utf16Offset": 60764
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "comments=@\"\"",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "UpdateSplitPacketSize:",
      "extent": {
        "end": {
          "byteColumn": 30,
          "byteOffset": 41235,
          "line": 1255,
          "utf16Column": 29,
          "utf16Offset": 41235
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 41218,
          "line": 1255,
          "utf16Column": 12,
          "utf16Offset": 41218
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "[Constants alloc]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "Constants",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "displaysinglealert:body:type:",
      "extent": {
        "end": {
          "byteColumn": 145,
          "byteOffset": 100616,
          "line": 2525,
          "utf16Column": 144,
          "utf16Offset": 100616
        },
        "start": {
          "byteColumn": 30,
          "byteOffset": 100501,
          "line": 2525,
          "utf16Column": 29,
          "utf16Offset": 100501
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:title message:body delegate:self cancelButtonTitle:@\"OK\" otherButtonTitles: nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with string <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with string OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "LoadRecentVehiclePlatesCD",
      "extent": {
        "end": {
          "byteColumn": 88,
          "byteOffset": 80035,
          "line": 1925,
          "utf16Column": 87,
          "utf16Offset": 80035
        },
        "start": {
          "byteColumn": 3,
          "byteOffset": 79950,
          "line": 1925,
          "utf16Column": 2,
          "utf16Offset": 79950
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"[ERROR] COREDATA: Fetch request raised an error - '%@'\", [error description])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:viewForHeaderInSection:",
      "extent": {
        "end": {
          "byteColumn": 43,
          "byteOffset": 1671,
          "line": 60,
          "utf16Column": 42,
          "utf16Offset": 1670
        },
        "start": {
          "byteColumn": 22,
          "byteOffset": 1650,
          "line": 60,
          "utf16Column": 21,
          "utf16Offset": 1649
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_AppInfoVC.m",
      "fileSnippet": "label.text = @\"About\"",
      "html": {
        "info": "<code class=\"fauxpas-objcproperty\">UILabel.text</code> value set to string <code class=\"fauxpas-string\">About</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "UILabel.text value set to string About",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CreateNewTextMsg:tfrom:tbody:",
      "extent": {
        "end": {
          "byteColumn": 94,
          "byteOffset": 78040,
          "line": 1862,
          "utf16Column": 93,
          "utf16Offset": 78040
        },
        "start": {
          "byteColumn": 30,
          "byteOffset": 77868,
          "line": 1861,
          "utf16Column": 29,
          "utf16Offset": 77868
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"Msg Received\" message:tbody delegate:self\n                                              cancelButtonTitle:@\"OK\" otherButtonTitles: nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">Msg Received</code>, <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings Msg Received, OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CancelLocalNotification:",
      "extent": {
        "end": {
          "byteColumn": 84,
          "byteOffset": 6796,
          "line": 186,
          "utf16Column": 83,
          "utf16Offset": 6796
        },
        "start": {
          "byteColumn": 42,
          "byteOffset": 6754,
          "line": 186,
          "utf16Column": 41,
          "utf16Offset": 6754
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.m",
      "fileSnippet": "[NSNumber numberWithInt:currtype.intValue]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "showwarn:",
      "extent": {
        "end": {
          "byteColumn": 57,
          "byteOffset": 3159,
          "line": 105,
          "utf16Column": 56,
          "utf16Offset": 3159
        },
        "start": {
          "byteColumn": 30,
          "byteOffset": 3132,
          "line": 105,
          "utf16Column": 29,
          "utf16Offset": 3132
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SignOff_ViewController.m",
      "fileSnippet": "[NSNumber numberWithInt:et]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "StorageContainer",
      "extent": {
        "end": {
          "byteColumn": 56,
          "byteOffset": 9610,
          "line": 296,
          "utf16Column": 55,
          "utf16Offset": 9610
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 9555,
          "line": 296,
          "utf16Column": 0,
          "utf16Offset": 9555
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *selectedlocation",
      "html": {
        "info": "The <code>selectedlocation</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The selectedlocation property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "application:didFailToRegisterForRemoteNotificationsWithError:",
      "extent": {
        "end": {
          "byteColumn": 49,
          "byteOffset": 6719,
          "line": 160,
          "utf16Column": 48,
          "utf16Offset": 6719
        },
        "start": {
          "byteColumn": 2,
          "byteOffset": 6672,
          "line": 160,
          "utf16Column": 1,
          "utf16Offset": 6672
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SafetyLinkAppDelegate.m",
      "fileSnippet": "NSLog(@\"Failed to get token, error: %@\", error)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "TCPPacket_SPTemplateReply",
      "extent": {
        "end": {
          "byteColumn": 48,
          "byteOffset": 5570,
          "line": 194,
          "utf16Column": 47,
          "utf16Offset": 5570
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 5523,
          "line": 194,
          "utf16Column": 0,
          "utf16Offset": 5523
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.h",
      "fileSnippet": "@property (nonatomic) NSString *scheduleoptions",
      "html": {
        "info": "The <code>scheduleoptions</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The scheduleoptions property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "AddPadding:msgsize:",
      "extent": {
        "end": {
          "byteColumn": 29,
          "byteOffset": 13129,
          "line": 409,
          "utf16Column": 28,
          "utf16Offset": 13129
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 13105,
          "line": 409,
          "utf16Column": 4,
          "utf16Offset": 13105
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Encryption.m",
      "fileSnippet": "msgsize += RndBytesToAdd",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ScheduleEmergencyNotification:alertbody:type:",
      "extent": {
        "end": {
          "byteColumn": 95,
          "byteOffset": 3823,
          "line": 123,
          "utf16Column": 94,
          "utf16Offset": 3823
        },
        "start": {
          "byteColumn": 66,
          "byteOffset": 3794,
          "line": 123,
          "utf16Column": 65,
          "utf16Offset": 3794
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.m",
      "fileSnippet": "[NSNumber numberWithInt:type]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 140,
          "byteOffset": 360,
          "line": 12,
          "utf16Column": 140,
          "utf16Offset": 359
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 220,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 219
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_UserInfoVC.h",
      "fileSnippet": "@interface Options_UserInfoVC : UIViewController<UITableViewDataSource,UITableViewDelegate,UIGestureRecognizerDelegate,HandleURLConDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "Options_UserInfoVC",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetRememberPassword",
      "extent": {
        "end": {
          "byteColumn": 69,
          "byteOffset": 90502,
          "line": 2246,
          "utf16Column": 68,
          "utf16Offset": 90502
        },
        "start": {
          "byteColumn": 26,
          "byteOffset": 90459,
          "line": 2246,
          "utf16Column": 25,
          "utf16Offset": 90459
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[usersettings objectForKey:@\"rememberpass\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "NetActivityView",
      "extent": {
        "end": {
          "byteColumn": 59,
          "byteOffset": 1001,
          "line": 33,
          "utf16Column": 58,
          "utf16Offset": 1001
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 943,
          "line": 33,
          "utf16Column": 0,
          "utf16Offset": 943
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/NetActivityView.h",
      "fileSnippet": "@property (nonatomic, retain) id<NetViewDelegate> delegate",
      "html": {
        "info": null,
        "ruleDescription": "To avoid retain cycles, delegate setter methods should not retain or copy the delegate object.",
        "ruleName": "Retaining or copying delegate",
        "ruleShortName": "StrongDelegate",
        "ruleWarning": null
      },
      "identifier": "delegate",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "To avoid retain cycles, delegate setter methods should not retain or copy the delegate object.",
      "ruleName": "Retaining or copying delegate",
      "ruleShortName": "StrongDelegate",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "NetActivityView",
      "extent": {
        "end": {
          "byteColumn": 54,
          "byteOffset": 610,
          "line": 26,
          "utf16Column": 53,
          "utf16Offset": 610
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 557,
          "line": 26,
          "utf16Column": 0,
          "utf16Offset": 557
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/NetActivityView.h",
      "fileSnippet": "@property (nonatomic, retain) NSString *cancelmessage",
      "html": {
        "info": "The <code>cancelmessage</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The cancelmessage property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "finishedReceive:error:data:",
      "extent": {
        "end": {
          "byteColumn": 60,
          "byteOffset": 3805,
          "line": 73,
          "utf16Column": 59,
          "utf16Offset": 3805
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 3762,
          "line": 73,
          "utf16Column": 16,
          "utf16Offset": 3762
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SetPassword_ViewController.m",
      "fileSnippet": "NSLog(@\"Register Error - 0 bytes received\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 51,
          "byteOffset": 7370,
          "line": 179,
          "utf16Column": 50,
          "utf16Offset": 7369
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 7332,
          "line": 179,
          "utf16Column": 12,
          "utf16Offset": 7331
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_SLCompanionVC.m",
      "fileSnippet": "[cellTitle setText:@\"Emergency Delay\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Emergency Delay</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Emergency Delay",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "showwarn:",
      "extent": {
        "end": {
          "byteColumn": 100,
          "byteOffset": 3275,
          "line": 93,
          "utf16Column": 99,
          "utf16Offset": 3275
        },
        "start": {
          "byteColumn": 32,
          "byteOffset": 3082,
          "line": 92,
          "utf16Column": 31,
          "utf16Offset": 3082
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Hazard_ViewController.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"Please Provide Your Location\" message:msg delegate:self \n                                                cancelButtonTitle:@\"OK\" otherButtonTitles:nil, nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">Please Provide Your Location</code>, <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings Please Provide Your Location, OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 122,
          "byteOffset": 417,
          "line": 15,
          "utf16Column": 122,
          "utf16Offset": 417
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 295,
          "line": 15,
          "utf16Column": 0,
          "utf16Offset": 295
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckSN_ViewController.h",
      "fileSnippet": "@interface CheckSN_ViewController : UIViewController<HandleURLConDelegate,UITextFieldDelegate,UIGestureRecognizerDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "CheckSN_ViewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "PrepareSendData:eventtype:",
      "extent": {
        "end": {
          "byteColumn": 70,
          "byteOffset": 49775,
          "line": 1483,
          "utf16Column": 69,
          "utf16Offset": 49775
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 49730,
          "line": 1483,
          "utf16Column": 24,
          "utf16Offset": 49730
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "NSLog(@\"Send Set Device %i\",send.sequencenum)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "StatusUpdated",
      "extent": {
        "end": {
          "byteColumn": 36,
          "byteOffset": 11637,
          "line": 320,
          "utf16Column": 35,
          "utf16Offset": 11637
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 11610,
          "line": 320,
          "utf16Column": 8,
          "utf16Offset": 11610
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Hazard_ViewController.m",
      "fileSnippet": "[lblStart setText:@\"Reset\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Reset</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Reset",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "registerclick",
      "extent": {
        "end": {
          "byteColumn": 99,
          "byteOffset": 17187,
          "line": 408,
          "utf16Column": 98,
          "utf16Offset": 17187
        },
        "start": {
          "byteColumn": 35,
          "byteOffset": 17017,
          "line": 407,
          "utf16Column": 34,
          "utf16Offset": 17017
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckSN_ViewController.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"Error\" message:body delegate:self \n                                                   cancelButtonTitle:@\"OK\" otherButtonTitles: nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">Error</code>, <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings Error, OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_default/emergencycancel_down@2x.png",
      "fileSnippet": null,
      "html": {
        "info": "<div class=\"fauxpas-filename\">emergencycancel_down@2x.png</div> resolution (128 x 130) should be 2x that of <div class=\"fauxpas-filename\">emergencycancel_down.png</div> (64 x 66). Expected resolution: 128 x 132.",
        "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
        "ruleName": "Unexpected retina image resolution",
        "ruleShortName": "RetinaImagesResolution",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "emergencycancel_down@2x.png resolution (128 x 130) should be 2x that of emergencycancel_down.png (64 x 66). Expected resolution: 128 x 132.",
      "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
      "ruleName": "Unexpected retina image resolution",
      "ruleShortName": "RetinaImagesResolution",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_default/emergencycancel_up.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "butPhoneClick:",
      "extent": {
        "end": {
          "byteColumn": 124,
          "byteOffset": 3468,
          "line": 115,
          "utf16Column": 123,
          "utf16Offset": 3468
        },
        "start": {
          "byteColumn": 30,
          "byteOffset": 3223,
          "line": 114,
          "utf16Column": 29,
          "utf16Offset": 3223
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/BillingInfo_ViewController.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"Contact Monitor Center\" message:@\"Are you sure you want to call the Monitor Center?\"\n                                                       delegate:self cancelButtonTitle:@\"No\" otherButtonTitles:@\"Yes\", nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">Contact Monitor Center</code>, <code class=\"fauxpas-string\">Are you sure you want to call the Monitor Center?</code>, <code class=\"fauxpas-string\">No</code>, <code class=\"fauxpas-string\">Yes</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings Contact Monitor Center, Are you sure you want to call the Monitor Center?, No, Yes",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:commitEditingStyle:forRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 71,
          "byteOffset": 3141,
          "line": 90,
          "utf16Column": 70,
          "utf16Offset": 3141
        },
        "start": {
          "byteColumn": 35,
          "byteOffset": 3105,
          "line": 90,
          "utf16Column": 34,
          "utf16Offset": 3105
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/PatrolMsgs_ViewController.m",
      "fileSnippet": "[NSArray arrayWithObject: indexPath]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSArray arrayWithObject:]</code> is called. Consider using an Objective-C container literal expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSArray arrayWithObject:] is called. Consider using an Objective-C container literal expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "butConfimClick:",
      "extent": {
        "end": {
          "byteColumn": 126,
          "byteOffset": 7998,
          "line": 226,
          "utf16Column": 125,
          "utf16Offset": 7998
        },
        "start": {
          "byteColumn": 23,
          "byteOffset": 7895,
          "line": 226,
          "utf16Column": 22,
          "utf16Offset": 7895
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/ConfigureTemplates_ViewController.m",
      "fileSnippet": "[[ [storeCon contactsettings]level4source] objectForKey:[[storeCon contactsettings]selected_level4key]]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "MBBase64",
      "extent": {
        "end": {
          "byteColumn": 54,
          "byteOffset": 271,
          "line": 13,
          "utf16Column": 53,
          "utf16Offset": 271
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 218,
          "line": 13,
          "utf16Column": 0,
          "utf16Offset": 218
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Base64.h",
      "fileSnippet": "+ (id)dataWithBase64EncodedString:(NSString *)string;",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an init or factory method return type is anything other than <code class=\"fauxpas-codesymbol\">instancetype</code>.</p> <p>Properly specifying the return type for factory methods (e.g. <code class=\"fauxpas-objcmethod\">+[NSArray arrayWithObject:]</code>) allows the compiler to perform more type checking, which helps catch bugs. Even though the compiler automatically determines the return types of init methods (even if they are declared as <code class=\"fauxpas-codesymbol\">id</code>) it is still good to be explicit and use <code class=\"fauxpas-codesymbol\">instancetype</code>.</p>",
        "ruleName": "Constructor return type",
        "ruleShortName": "ConstructorReturnType",
        "ruleWarning": null
      },
      "identifier": "dataWithBase64EncodedString:",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Warns if an init or factory method return type is anything other than instancetype. Properly specifying the return type for factory methods (e.g. +[NSArray arrayWithObject:]) allows the compiler to perform more type checking, which helps catch bugs. Even though the compiler automatically determines the return types of init methods (even if they are declared as id) it is still good to be explicit and use instancetype.",
      "ruleName": "Constructor return type",
      "ruleShortName": "ConstructorReturnType",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/intercon_iamok/intercon_cancelwhite.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 142,
          "byteOffset": 29567,
          "line": 692,
          "utf16Column": 141,
          "utf16Offset": 29567
        },
        "start": {
          "byteColumn": 2,
          "byteOffset": 29427,
          "line": 692,
          "utf16Column": 1,
          "utf16Offset": 29427
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckSN_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillHide:) name:UIKeyboardWillHideNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/../Safetylink114.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/../Safetylink114.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 145,
          "byteOffset": 31463,
          "line": 797,
          "utf16Column": 144,
          "utf16Offset": 31463
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 31323,
          "line": 797,
          "utf16Column": 4,
          "utf16Offset": 31323
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Main_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillShow:) name:UIKeyboardWillShowNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/LocationController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SOS_ViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "LevelData",
      "extent": {
        "end": {
          "byteColumn": 42,
          "byteOffset": 13780,
          "line": 344,
          "utf16Column": 41,
          "utf16Offset": 13780
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 13739,
          "line": 344,
          "utf16Column": 0,
          "utf16Offset": 13739
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.h",
      "fileSnippet": "@property (nonatomic) NSString *levelname",
      "html": {
        "info": "The <code>levelname</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The levelname property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "Process:",
      "extent": {
        "end": {
          "byteColumn": 37,
          "byteOffset": 36920,
          "line": 1091,
          "utf16Column": 36,
          "utf16Offset": 36920
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 36900,
          "line": 1091,
          "utf16Column": 16,
          "utf16Offset": 36900
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "inp = constants.fesc",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetBillingState",
      "extent": {
        "end": {
          "byteColumn": 69,
          "byteOffset": 29524,
          "line": 762,
          "utf16Column": 68,
          "utf16Offset": 29524
        },
        "start": {
          "byteColumn": 22,
          "byteOffset": 29477,
          "line": 762,
          "utf16Column": 21,
          "utf16Offset": 29477
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[usersettings objectForKey:@\"lastbillingstate\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 131,
          "byteOffset": 612,
          "line": 21,
          "utf16Column": 131,
          "utf16Offset": 612
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 481,
          "line": 21,
          "utf16Column": 0,
          "utf16Offset": 481
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SettingPickList_ViewController.h",
      "fileSnippet": "@interface SettingPickList_ViewController : UIViewController<UITableViewDataSource,UITableViewDelegate,UIGestureRecognizerDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "SettingPickList_ViewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ConnectionStatusChanged:rccstatus:gpsstatus:expdays:",
      "extent": {
        "end": {
          "byteColumn": 43,
          "byteOffset": 31352,
          "line": 814,
          "utf16Column": 42,
          "utf16Offset": 31352
        },
        "start": {
          "byteColumn": 10,
          "byteOffset": 31319,
          "line": 814,
          "utf16Column": 9,
          "utf16Offset": 31319
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[StorageContainer singleInstance]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "StorageContainer",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 27,
          "byteOffset": 671,
          "line": 25,
          "utf16Column": 27,
          "utf16Offset": 671
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 644,
          "line": 25,
          "utf16Column": 0,
          "utf16Offset": 644
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Encryption.h",
      "fileSnippet": "@interface Issac : NSObject",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "Issac",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 161,
          "byteOffset": 389,
          "line": 11,
          "utf16Column": 161,
          "utf16Offset": 389
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 228,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 228
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/BillingInfo_ViewController.h",
      "fileSnippet": "@interface BillingInfo_ViewController : UIViewController<UITableViewDataSource,UITableViewDelegate,BillingDelegate,UIGestureRecognizerDelegate,UpdateGUIDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "BillingInfo_ViewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "butConfimClick:",
      "extent": {
        "end": {
          "byteColumn": 127,
          "byteOffset": 7871,
          "line": 225,
          "utf16Column": 126,
          "utf16Offset": 7871
        },
        "start": {
          "byteColumn": 23,
          "byteOffset": 7767,
          "line": 225,
          "utf16Column": 22,
          "utf16Offset": 7767
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/ConfigureTemplates_ViewController.m",
      "fileSnippet": "[[ [storeCon contactsettings] level3source] objectForKey:[[storeCon contactsettings]selected_level3key]]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "DisplayAlert:",
      "extent": {
        "end": {
          "byteColumn": 175,
          "byteOffset": 99143,
          "line": 2488,
          "utf16Column": 174,
          "utf16Offset": 99143
        },
        "start": {
          "byteColumn": 45,
          "byteOffset": 99013,
          "line": 2488,
          "utf16Column": 44,
          "utf16Offset": 99013
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"Alert\" message:notify.alertBody delegate:self cancelButtonTitle:@\"OK\" otherButtonTitles: nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">Alert</code>, <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings Alert, OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RegisterLocalNotifications",
      "extent": {
        "end": {
          "byteColumn": 71,
          "byteOffset": 65297,
          "line": 1618,
          "utf16Column": 70,
          "utf16Offset": 65297
        },
        "start": {
          "byteColumn": 43,
          "byteOffset": 65269,
          "line": 1618,
          "utf16Column": 42,
          "utf16Offset": 65269
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[allcurrent objectAtIndex:i]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSArray objectAtIndex:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSArray objectAtIndex:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 37,
          "byteOffset": 258,
          "line": 13,
          "utf16Column": 37,
          "utf16Offset": 258
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 221,
          "line": 13,
          "utf16Column": 0,
          "utf16Offset": 221
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Location.h",
      "fileSnippet": "@interface Location : NSManagedObject",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "Location",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 53,
          "byteOffset": 4644,
          "line": 120,
          "utf16Column": 52,
          "utf16Offset": 4643
        },
        "start": {
          "byteColumn": 21,
          "byteOffset": 4612,
          "line": 120,
          "utf16Column": 20,
          "utf16Offset": 4611
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_NotificationsVC.m",
      "fileSnippet": "[cellTitle setText:@\"Companion\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Companion</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Companion",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "loadContactOptions:savetofile:",
      "extent": {
        "end": {
          "byteColumn": 67,
          "byteOffset": 12883,
          "line": 367,
          "utf16Column": 66,
          "utf16Offset": 12883
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 12825,
          "line": 367,
          "utf16Column": 8,
          "utf16Offset": 12825
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"%@ %@\",@\"Error in Contacts File\",exception.reason)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "stream:handleEvent:",
      "extent": {
        "end": {
          "byteColumn": 35,
          "byteOffset": 32155,
          "line": 947,
          "utf16Column": 34,
          "utf16Offset": 32155
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 32133,
          "line": 947,
          "utf16Column": 12,
          "utf16Offset": 32133
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "NSLog(@\"TCP End Conn\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "FillBuf:offset:busSize:",
      "extent": {
        "end": {
          "byteColumn": 18,
          "byteOffset": 9440,
          "line": 290,
          "utf16Column": 17,
          "utf16Offset": 9440
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 9431,
          "line": 290,
          "utf16Column": 8,
          "utf16Offset": 9431
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Encryption.m",
      "fileSnippet": "--bufSize",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_ContactInfo.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "showwarn:",
      "extent": {
        "end": {
          "byteColumn": 57,
          "byteOffset": 3076,
          "line": 94,
          "utf16Column": 56,
          "utf16Offset": 3076
        },
        "start": {
          "byteColumn": 30,
          "byteOffset": 3049,
          "line": 94,
          "utf16Column": 29,
          "utf16Offset": 3049
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Assist_ViewController.m",
      "fileSnippet": "[NSNumber numberWithInt:et]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RegisterLocalNotifications",
      "extent": {
        "end": {
          "byteColumn": 120,
          "byteOffset": 72192,
          "line": 1736,
          "utf16Column": 119,
          "utf16Offset": 72192
        },
        "start": {
          "byteColumn": 77,
          "byteOffset": 72149,
          "line": 1736,
          "utf16Column": 76,
          "utf16Offset": 72149
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[NSNumber numberWithInt:LNT_OFFDUTY_EXPIRE]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "startScan",
      "extent": {
        "end": {
          "byteColumn": 45,
          "byteOffset": 4849,
          "line": 148,
          "utf16Column": 44,
          "utf16Offset": 4848
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 4813,
          "line": 148,
          "utf16Column": 8,
          "utf16Offset": 4812
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Discover_SLCompanionVC.m",
      "fileSnippet": "[lblDiscover setText:@\"Discovering\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Discovering</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Discovering",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CancelALocalNotification:",
      "extent": {
        "end": {
          "byteColumn": 72,
          "byteOffset": 7679,
          "line": 212,
          "utf16Column": 71,
          "utf16Offset": 7679
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 7624,
          "line": 212,
          "utf16Column": 16,
          "utf16Offset": 7624
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.m",
      "fileSnippet": "NSLog(@\"Remove Local Notification %@\",notify.alertBody)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "viewWillAppear:",
      "extent": {
        "end": {
          "byteColumn": 48,
          "byteOffset": 3920,
          "line": 110,
          "utf16Column": 47,
          "utf16Offset": 3920
        },
        "start": {
          "byteColumn": 12,
          "byteOffset": 3884,
          "line": 110,
          "utf16Column": 11,
          "utf16Offset": 3884
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/PatrolMsgs_ViewController.m",
      "fileSnippet": "txtNumMessages.text = @\"NO MESSAGES\"",
      "html": {
        "info": "<code class=\"fauxpas-objcproperty\">UILabel.text</code> value set to string <code class=\"fauxpas-string\">NO MESSAGES</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "UILabel.text value set to string NO MESSAGES",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "addURLParam:value:",
      "extent": {
        "end": {
          "byteColumn": 84,
          "byteOffset": 416,
          "line": 18,
          "utf16Column": 83,
          "utf16Offset": 416
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 341,
          "line": 18,
          "utf16Column": 8,
          "utf16Offset": 341
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/HTTPHelper.m",
      "fileSnippet": "key = [key stringByAddingPercentEscapesUsingEncoding:NSASCIIStringEncoding]",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_SLCompanionVC.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 36,
          "byteOffset": 14099,
          "line": 353,
          "utf16Column": 36,
          "utf16Offset": 14099
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 14063,
          "line": 353,
          "utf16Column": 0,
          "utf16Offset": 14063
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.h",
      "fileSnippet": "@interface ScheduleOption : NSObject",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "ScheduleOption",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "saveContext",
      "extent": {
        "end": {
          "byteColumn": 20,
          "byteOffset": 10057,
          "line": 239,
          "utf16Column": 19,
          "utf16Offset": 10057
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 10050,
          "line": 239,
          "utf16Column": 12,
          "utf16Offset": 10050
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SafetyLinkAppDelegate.m",
      "fileSnippet": "abort()",
      "html": {
        "info": "The <code class=\"fauxpas-cfunction\">abort</code> function is called",
        "ruleDescription": "The iOS Human Interface Guidelines say that you should never quit an iOS app programmatically.",
        "ruleName": "Terminating the app in a release build",
        "ruleShortName": "TerminatingApp",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The abort function is called",
      "ruleDescription": "The iOS Human Interface Guidelines say that you should never quit an iOS app programmatically.",
      "ruleName": "Terminating the app in a release build",
      "ruleShortName": "TerminatingApp",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ContactSettings",
      "extent": {
        "end": {
          "byteColumn": 51,
          "byteOffset": 5001,
          "line": 163,
          "utf16Column": 50,
          "utf16Offset": 5001
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 4951,
          "line": 163,
          "utf16Column": 0,
          "utf16Offset": 4951
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *level3label",
      "html": {
        "info": "The <code>level3label</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The level3label property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 52,
          "byteOffset": 5216,
          "line": 138,
          "utf16Column": 51,
          "utf16Offset": 5215
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 5177,
          "line": 138,
          "utf16Column": 12,
          "utf16Offset": 5176
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_SLCompanionVC.m",
      "fileSnippet": "[cellTitle setText:@\"Companion Device\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Companion Device</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Companion Device",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/Application icons/Safetylink22x29.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/Application icons/Safetylink22x29.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘2x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘2x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "saveContext",
      "extent": {
        "end": {
          "byteColumn": 71,
          "byteOffset": 10036,
          "line": 238,
          "utf16Column": 70,
          "utf16Offset": 10036
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 9978,
          "line": 238,
          "utf16Column": 12,
          "utf16Offset": 9978
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SafetyLinkAppDelegate.m",
      "fileSnippet": "NSLog(@\"Unresolved error %@, %@\", error, [error userInfo])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "displaysinglealert:body:type:",
      "extent": {
        "end": {
          "byteColumn": 146,
          "byteOffset": 101036,
          "line": 2535,
          "utf16Column": 145,
          "utf16Offset": 101036
        },
        "start": {
          "byteColumn": 31,
          "byteOffset": 100921,
          "line": 2535,
          "utf16Column": 30,
          "utf16Offset": 100921
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:title message:body delegate:self cancelButtonTitle:@\"OK\" otherButtonTitles: nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with string <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with string OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initwithdata:min:msg:",
      "extent": {
        "end": {
          "byteColumn": 82,
          "byteOffset": 1739,
          "line": 64,
          "utf16Column": 81,
          "utf16Offset": 1739
        },
        "start": {
          "byteColumn": 26,
          "byteOffset": 1683,
          "line": 64,
          "utf16Column": 25,
          "utf16Offset": 1683
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.m",
      "fileSnippet": "[[tod componentsSeparatedByString:@\":\"] objectAtIndex:0]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSArray objectAtIndex:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSArray objectAtIndex:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RegisterLocalNotifications",
      "extent": {
        "end": {
          "byteColumn": 121,
          "byteOffset": 69016,
          "line": 1684,
          "utf16Column": 120,
          "utf16Offset": 69016
        },
        "start": {
          "byteColumn": 77,
          "byteOffset": 68972,
          "line": 1684,
          "utf16Column": 76,
          "utf16Offset": 68972
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[NSNumber numberWithInt:LNT_HAZARD_PREWARN2]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 73,
          "byteOffset": 10303,
          "line": 232,
          "utf16Column": 72,
          "utf16Offset": 10302
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 10243,
          "line": 232,
          "utf16Column": 12,
          "utf16Offset": 10242
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_SLCompanionVC.m",
      "fileSnippet": "[cellDesc setText:@\"Test the SafetyLink Band functionality\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Test the SafetyLink Band functionality</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Test the SafetyLink Band functionality",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_NotificationsVC.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "locationManager:didUpdateToLocation:fromLocation:",
      "extent": {
        "end": {
          "byteColumn": 44,
          "byteOffset": 5503,
          "line": 133,
          "utf16Column": 43,
          "utf16Offset": 5503
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 5472,
          "line": 133,
          "utf16Column": 12,
          "utf16Offset": 5472
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/LocationController.m",
      "fileSnippet": "NSLog(@\"Accuracy 3km best hit\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "dealloc",
      "extent": {
        "end": {
          "byteColumn": 21,
          "byteOffset": 1171,
          "line": 30,
          "utf16Column": 20,
          "utf16Offset": 1171
        },
        "start": {
          "byteColumn": 2,
          "byteOffset": 1152,
          "line": 30,
          "utf16Column": 1,
          "utf16Offset": 1152
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SMXMLDocument.m",
      "fileSnippet": "self.children = nil",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "children",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 143,
          "byteOffset": 23696,
          "line": 662,
          "utf16Column": 142,
          "utf16Offset": 23696
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 23558,
          "line": 662,
          "utf16Column": 4,
          "utf16Offset": 23558
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Assist_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardDidHide:) name:UIKeyboardDidHideNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 143,
          "byteOffset": 9701,
          "line": 252,
          "utf16Column": 142,
          "utf16Offset": 9701
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 9563,
          "line": 252,
          "utf16Column": 4,
          "utf16Offset": 9563
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Location_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardDidShow:) name:UIKeyboardDidShowNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ShowRemoteAlert:body:",
      "extent": {
        "end": {
          "byteColumn": 90,
          "byteOffset": 74862,
          "line": 1780,
          "utf16Column": 89,
          "utf16Offset": 74862
        },
        "start": {
          "byteColumn": 26,
          "byteOffset": 74705,
          "line": 1779,
          "utf16Column": 25,
          "utf16Offset": 74705
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:title message:body delegate:self\n                                          cancelButtonTitle:@\"OK\" otherButtonTitles: nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with string <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with string OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "SingleComms",
      "extent": {
        "end": {
          "byteColumn": 52,
          "byteOffset": 41558,
          "line": 1268,
          "utf16Column": 51,
          "utf16Offset": 41558
        },
        "start": {
          "byteColumn": 35,
          "byteOffset": 41541,
          "line": 1268,
          "utf16Column": 34,
          "utf16Offset": 41541
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "[MyTCPComm alloc]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "MyTCPComm",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "stream:handleEvent:",
      "extent": {
        "end": {
          "byteColumn": 65,
          "byteOffset": 31444,
          "line": 935,
          "utf16Column": 64,
          "utf16Offset": 31444
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 31392,
          "line": 935,
          "utf16Column": 12,
          "utf16Offset": 31392
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "NSLog(@\"TCP Error: %@\",[error localizedDescription])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 36,
          "byteOffset": 396,
          "line": 17,
          "utf16Column": 36,
          "utf16Offset": 396
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 360,
          "line": 17,
          "utf16Column": 0,
          "utf16Offset": 360
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Encryption.h",
      "fileSnippet": "@interface Authentication : NSObject",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "Authentication",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ContactInfo",
      "extent": {
        "end": {
          "byteColumn": 52,
          "byteOffset": 1272,
          "line": 42,
          "utf16Column": 51,
          "utf16Offset": 1272
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1221,
          "line": 42,
          "utf16Column": 0,
          "utf16Offset": 1221
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *emaildisplay",
      "html": {
        "info": "The <code>emaildisplay</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The emaildisplay property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "recoverpass",
      "extent": {
        "end": {
          "byteColumn": 99,
          "byteOffset": 18332,
          "line": 436,
          "utf16Column": 98,
          "utf16Offset": 18332
        },
        "start": {
          "byteColumn": 35,
          "byteOffset": 18163,
          "line": 435,
          "utf16Column": 34,
          "utf16Offset": 18163
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckSN_ViewController.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"Error\" message:body delegate:self\n                                                   cancelButtonTitle:@\"OK\" otherButtonTitles: nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">Error</code>, <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings Error, OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TextStyle.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ConfigSettings",
      "extent": {
        "end": {
          "byteColumn": 53,
          "byteOffset": 4023,
          "line": 133,
          "utf16Column": 52,
          "utf16Offset": 4023
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 3971,
          "line": 133,
          "utf16Column": 0,
          "utf16Offset": 3971
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *masterPassKey",
      "html": {
        "info": "The <code>masterPassKey</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The masterPassKey property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 178,
          "byteOffset": 424,
          "line": 13,
          "utf16Column": 178,
          "utf16Offset": 424
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 246,
          "line": 13,
          "utf16Column": 0,
          "utf16Offset": 246
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Main_ViewController.h",
      "fileSnippet": "@interface Main_ViewController : UIViewController<UITableViewDataSource,UITableViewDelegate,UpdateGUIDelegate,ReloadConfigDelegate,UIGestureRecognizerDelegate,UITextViewDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "Main_ViewController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ThemeOptions",
      "extent": {
        "end": {
          "byteColumn": 49,
          "byteOffset": 1443,
          "line": 50,
          "utf16Column": 48,
          "utf16Offset": 1443
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1395,
          "line": 50,
          "utf16Column": 0,
          "utf16Offset": 1395
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *themename",
      "html": {
        "info": "The <code>themename</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The themename property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "init:",
      "extent": {
        "end": {
          "byteColumn": 33,
          "byteOffset": 1834,
          "line": 54,
          "utf16Column": 32,
          "utf16Offset": 1834
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 1826,
          "line": 54,
          "utf16Column": 24,
          "utf16Offset": 1826
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Encryption.m",
      "fileSnippet": "pass=@\"\"",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "StatusUpdated",
      "extent": {
        "end": {
          "byteColumn": 44,
          "byteOffset": 11861,
          "line": 328,
          "utf16Column": 43,
          "utf16Offset": 11861
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 11826,
          "line": 328,
          "utf16Column": 8,
          "utf16Offset": 11826
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Hazard_ViewController.m",
      "fileSnippet": "[lblCancelHazard setText:@\"Cancel\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Cancel</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Cancel",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithFrame:",
      "extent": {
        "end": {
          "byteColumn": 27,
          "byteOffset": 10787,
          "line": 313,
          "utf16Column": 26,
          "utf16Offset": 10787
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 10769,
          "line": 313,
          "utf16Column": 8,
          "utf16Offset": 10769
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/NetActivityView.m",
      "fileSnippet": "capSVR.text=@\"SVR\"",
      "html": {
        "info": "<code class=\"fauxpas-objcproperty\">UILabel.text</code> value set to string <code class=\"fauxpas-string\">SVR</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "UILabel.text value set to string SVR",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initwithdata:min:msg:",
      "extent": {
        "end": {
          "byteColumn": 49,
          "byteOffset": 1650,
          "line": 63,
          "utf16Column": 48,
          "utf16Offset": 1650
        },
        "start": {
          "byteColumn": 27,
          "byteOffset": 1628,
          "line": 63,
          "utf16Column": 26,
          "utf16Offset": 1628
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.m",
      "fileSnippet": "[ScheduleOption alloc]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "ScheduleOption",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ReceivedData:data:lastevent:",
      "extent": {
        "end": {
          "byteColumn": 33,
          "byteOffset": 47414,
          "line": 1159,
          "utf16Column": 32,
          "utf16Offset": 47414
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 47394,
          "line": 1159,
          "utf16Column": 12,
          "utf16Offset": 47394
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"gotcfginfo\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "finishedReceive:error:data:",
      "extent": {
        "end": {
          "byteColumn": 145,
          "byteOffset": 12421,
          "line": 335,
          "utf16Column": 144,
          "utf16Offset": 12420
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 12293,
          "line": 335,
          "utf16Column": 16,
          "utf16Offset": 12292
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_UserInfoVC.m",
      "fileSnippet": "NSLog(@\"Register Error - %@ %@\",[error localizedDescription],[[error userInfo] objectForKey:NSURLErrorFailingURLStringErrorKey])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 14,
          "byteOffset": 79136,
          "line": 1895,
          "utf16Column": 13,
          "utf16Offset": 79136
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 79131,
          "line": 1895,
          "utf16Column": 8,
          "utf16Offset": 79131
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "error",
      "html": {
        "info": null,
        "ruleDescription": "Methods that pass back <code class=\"fauxpas-objcclass\">NSError</code> objects by reference return <code class=\"fauxpas-codesymbol\">NO</code> or <code class=\"fauxpas-codesymbol\">nil</code> to indicate an error condition. This rule warns if the <code class=\"fauxpas-objcclass\">NSError</code> pointer is checked against <code class=\"fauxpas-codesymbol\">nil</code> without checking the return value.",
        "ruleName": "Fragile error condition check",
        "ruleShortName": "ErrorConditionCheck",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Methods that pass back NSError objects by reference return NO or nil to indicate an error condition. This rule warns if the NSError pointer is checked against nil without checking the return value.",
      "ruleName": "Fragile error condition check",
      "ruleShortName": "ErrorConditionCheck",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "AutoDismissSingleAlert:",
      "extent": {
        "end": {
          "byteColumn": 78,
          "byteOffset": 103313,
          "line": 2588,
          "utf16Column": 77,
          "utf16Offset": 103313
        },
        "start": {
          "byteColumn": 49,
          "byteOffset": 103284,
          "line": 2588,
          "utf16Column": 48,
          "utf16Offset": 103284
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[NSNumber numberWithInt:type]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "application:didReceiveRemoteNotification:",
      "extent": {
        "end": {
          "byteColumn": 51,
          "byteOffset": 1971,
          "line": 57,
          "utf16Column": 50,
          "utf16Offset": 1971
        },
        "start": {
          "byteColumn": 21,
          "byteOffset": 1941,
          "line": 57,
          "utf16Column": 20,
          "utf16Offset": 1941
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SafetyLinkAppDelegate.m",
      "fileSnippet": "[userInfo objectForKey:@\"aps\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_commercial/aware360_iconbackgrounddisabled.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ExtractScheduleOptions:",
      "extent": {
        "end": {
          "byteColumn": 74,
          "byteOffset": 36013,
          "line": 926,
          "utf16Column": 73,
          "utf16Offset": 36013
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 35948,
          "line": 926,
          "utf16Column": 8,
          "utf16Offset": 35948
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"%@ %@\",@\"Error in Schedule Options XML\",exception.reason)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 81,
          "byteOffset": 5672,
          "line": 138,
          "utf16Column": 80,
          "utf16Offset": 5671
        },
        "start": {
          "byteColumn": 21,
          "byteOffset": 5612,
          "line": 138,
          "utf16Column": 20,
          "utf16Offset": 5611
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_NotificationsVC.m",
      "fileSnippet": "[cellDesc setText:@\"Audible alarm when emergency is active\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Audible alarm when emergency is active</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Audible alarm when emergency is active",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetRecentVehiclePlate:",
      "extent": {
        "end": {
          "byteColumn": 54,
          "byteOffset": 82507,
          "line": 1997,
          "utf16Column": 53,
          "utf16Offset": 82507
        },
        "start": {
          "byteColumn": 16,
          "byteOffset": 82469,
          "line": 1997,
          "utf16Column": 15,
          "utf16Offset": 82469
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[recentvehicleplate objectAtIndex:idx]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSArray objectAtIndex:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSArray objectAtIndex:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 31,
          "byteOffset": 222,
          "line": 11,
          "utf16Column": 31,
          "utf16Offset": 222
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 191,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 191
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TextStyle.h",
      "fileSnippet": "@interface TextStyle : NSObject",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "TextStyle",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "AddEventBodyField:val:",
      "extent": {
        "end": {
          "byteColumn": 18,
          "byteOffset": 5369,
          "line": 191,
          "utf16Column": 17,
          "utf16Offset": 5369
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 5360,
          "line": 191,
          "utf16Column": 8,
          "utf16Offset": 5360
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "val = @\"\"",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "butSignOnOffClick:",
      "extent": {
        "end": {
          "byteColumn": 105,
          "byteOffset": 5396,
          "line": 139,
          "utf16Column": 104,
          "utf16Offset": 5396
        },
        "start": {
          "byteColumn": 41,
          "byteOffset": 5168,
          "line": 138,
          "utf16Column": 40,
          "utf16Offset": 5168
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Main_ViewController.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"Please Stop Billing\" message:@\"You Must Stop Billing Before Signing Off\" delegate:self\n                                                     cancelButtonTitle:@\"OK\" otherButtonTitles:nil, nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">Please Stop Billing</code>, <code class=\"fauxpas-string\">You Must Stop Billing Before Signing Off</code>, <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings Please Stop Billing, You Must Stop Billing Before Signing Off, OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "PrepareSendData:eventtype:",
      "extent": {
        "end": {
          "byteColumn": 71,
          "byteOffset": 49908,
          "line": 1486,
          "utf16Column": 70,
          "utf16Offset": 49908
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 49862,
          "line": 1486,
          "utf16Column": 24,
          "utf16Offset": 49862
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "NSLog(@\"Send Event:%i %i\",et,send.sequencenum)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "StatusUpdated",
      "extent": {
        "end": {
          "byteColumn": 94,
          "byteOffset": 16021,
          "line": 402,
          "utf16Column": 93,
          "utf16Offset": 16021
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 15940,
          "line": 402,
          "utf16Column": 12,
          "utf16Offset": 15940
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Main_ViewController.m",
      "fileSnippet": "[butStartStopBilling setTitle:@\"STOP BILLING\" forState:UIControlStateHighlighted]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIButton setTitle:forState:]</code> called with string <code class=\"fauxpas-string\">STOP BILLING</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIButton setTitle:forState:] called with string STOP BILLING",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "MonitorCommStateChange:",
      "extent": {
        "end": {
          "byteColumn": 41,
          "byteOffset": 21722,
          "line": 644,
          "utf16Column": 40,
          "utf16Offset": 21721
        },
        "start": {
          "byteColumn": 14,
          "byteOffset": 21695,
          "line": 644,
          "utf16Column": 13,
          "utf16Offset": 21694
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "[FitkatController Instance]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "FitkatController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 56,
          "byteOffset": 1783,
          "line": 62,
          "utf16Column": 55,
          "utf16Offset": 1783
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 1740,
          "line": 62,
          "utf16Column": 12,
          "utf16Offset": 1740
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_ViewController.m",
      "fileSnippet": "[cellTitle setText:@\"SafetyLink Companion\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">SafetyLink Companion</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string SafetyLink Companion",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "confirmclick",
      "extent": {
        "end": {
          "byteColumn": 118,
          "byteOffset": 5362,
          "line": 111,
          "utf16Column": 117,
          "utf16Offset": 5362
        },
        "start": {
          "byteColumn": 27,
          "byteOffset": 5147,
          "line": 110,
          "utf16Column": 26,
          "utf16Offset": 5147
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/UserInfo_ViewController.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"Input Error\" message:@\"User Name and Email cannot be empty.\"\n                                                    delegate:self cancelButtonTitle:@\"OK\" otherButtonTitles:nil, nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">Input Error</code>, <code class=\"fauxpas-string\">User Name and Email cannot be empty.</code>, <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings Input Error, User Name and Email cannot be empty., OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 60,
          "byteOffset": 5518,
          "line": 136,
          "utf16Column": 59,
          "utf16Offset": 5517
        },
        "start": {
          "byteColumn": 21,
          "byteOffset": 5479,
          "line": 136,
          "utf16Column": 20,
          "utf16Offset": 5478
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_NotificationsVC.m",
      "fileSnippet": "[cellTitle setText:@\"Silent Companion\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Silent Companion</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Silent Companion",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_default/emergency_down@2x.png",
      "fileSnippet": null,
      "html": {
        "info": "<div class=\"fauxpas-filename\">emergency_down@2x.png</div> resolution (128 x 130) should be 2x that of <div class=\"fauxpas-filename\">emergency_down.png</div> (64 x 66). Expected resolution: 128 x 132.",
        "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
        "ruleName": "Unexpected retina image resolution",
        "ruleShortName": "RetinaImagesResolution",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "emergency_down@2x.png resolution (128 x 130) should be 2x that of emergency_down.png (64 x 66). Expected resolution: 128 x 132.",
      "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
      "ruleName": "Unexpected retina image resolution",
      "ruleShortName": "RetinaImagesResolution",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/intercon_iamok/intercon_backwhite.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "SendStartStopBilling:",
      "extent": {
        "end": {
          "byteColumn": 196,
          "byteOffset": 60177,
          "line": 1495,
          "utf16Column": 195,
          "utf16Offset": 60177
        },
        "start": {
          "byteColumn": 31,
          "byteOffset": 60012,
          "line": 1495,
          "utf16Column": 30,
          "utf16Offset": 60012
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[[NSArray alloc] initWithObjects:@\"---Stop Billing\", [@\"Billing Info=\" stringByAppendingString:billingselect] , [@\"Comments=\" stringByAppendingString:comments], nil]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSArray initWithObjects:]</code> is called. Consider using an Objective-C container literal expression instead.</p><p>NOTE: there is a crucial difference between the current implementation and the suggestion here: While a nil value for any of the given values to this method will only terminate the argument list, a nil value in the literal container expression will result in a runtime exception.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSArray initWithObjects:] is called. Consider using an Objective-C container literal expression instead.NOTE: there is a crucial difference between the current implementation and the suggestion here: While a nil value for any of the given values to this method will only terminate the argument list, a nil value in the literal container expression will result in a runtime exception.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "SendStartStopBilling:",
      "extent": {
        "end": {
          "byteColumn": 197,
          "byteOffset": 60533,
          "line": 1501,
          "utf16Column": 196,
          "utf16Offset": 60533
        },
        "start": {
          "byteColumn": 31,
          "byteOffset": 60367,
          "line": 1501,
          "utf16Column": 30,
          "utf16Offset": 60367
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[[NSArray alloc] initWithObjects:@\"---Start Billing\", [@\"Billing Info=\" stringByAppendingString:billingselect] , [@\"Comments=\" stringByAppendingString:comments], nil]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSArray initWithObjects:]</code> is called. Consider using an Objective-C container literal expression instead.</p><p>NOTE: there is a crucial difference between the current implementation and the suggestion here: While a nil value for any of the given values to this method will only terminate the argument list, a nil value in the literal container expression will result in a runtime exception.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSArray initWithObjects:] is called. Consider using an Objective-C container literal expression instead.NOTE: there is a crucial difference between the current implementation and the suggestion here: While a nil value for any of the given values to this method will only terminate the argument list, a nil value in the literal container expression will result in a runtime exception.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/intercon_iamok/intercon_company@2x.png",
      "fileSnippet": null,
      "html": {
        "info": "<div class=\"fauxpas-filename\">intercon_company@2x.png</div> resolution (754 x 343) should be 2x that of <div class=\"fauxpas-filename\">intercon_company.png</div> (377 x 172). Expected resolution: 754 x 344.",
        "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
        "ruleName": "Unexpected retina image resolution",
        "ruleShortName": "RetinaImagesResolution",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "intercon_company@2x.png resolution (754 x 343) should be 2x that of intercon_company.png (377 x 172). Expected resolution: 754 x 344.",
      "ruleDescription": "The retina (‘@2x’ or ‘@3x’) version of an image resource must be exactly double or triple the size of the corresponding low-resolution image (assuming the point size of the presentation context remains the same regardless of screen resolution). Otherwise the effective resolution of the image will not match the effective resolution of its presentation context, which will lead to a blurry image, empty space at the edges, or overflow.",
      "ruleName": "Unexpected retina image resolution",
      "ruleShortName": "RetinaImagesResolution",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 53,
          "byteOffset": 2626,
          "line": 86,
          "utf16Column": 52,
          "utf16Offset": 2626
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 2590,
          "line": 86,
          "utf16Column": 16,
          "utf16Offset": 2590
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Checkin_ViewController.m",
      "fileSnippet": "[cellTitle setText:@\"Check-in Time\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Check-in Time</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Check-in Time",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "applicationDidEnterBackground:",
      "extent": {
        "end": {
          "byteColumn": 37,
          "byteOffset": 8705,
          "line": 195,
          "utf16Column": 36,
          "utf16Offset": 8705
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 8677,
          "line": 195,
          "utf16Column": 8,
          "utf16Offset": 8677
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SafetyLinkAppDelegate.m",
      "fileSnippet": "NSLog(@\"Entered Background\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 143,
          "byteOffset": 23669,
          "line": 652,
          "utf16Column": 142,
          "utf16Offset": 23669
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 23531,
          "line": 652,
          "utf16Column": 4,
          "utf16Offset": 23531
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Hazard_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardDidHide:) name:UIKeyboardDidHideNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 143,
          "byteOffset": 23525,
          "line": 651,
          "utf16Column": 142,
          "utf16Offset": 23525
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 23387,
          "line": 651,
          "utf16Column": 4,
          "utf16Offset": 23387
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Hazard_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardDidShow:) name:UIKeyboardDidShowNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "centralManager:didDiscoverPeripheral:advertisementData:RSSI:",
      "extent": {
        "end": {
          "byteColumn": 88,
          "byteOffset": 9837,
          "line": 318,
          "utf16Column": 87,
          "utf16Offset": 9836
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 9758,
          "line": 318,
          "utf16Column": 8,
          "utf16Offset": 9757
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "[gatt_peripherals setObject:peripheral forKey:peripheral.identifier.UUIDString]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSMutableDictionary setObject:forKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSMutableDictionary setObject:forKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 40,
          "byteOffset": 264,
          "line": 13,
          "utf16Column": 40,
          "utf16Offset": 264
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 224,
          "line": 13,
          "utf16Column": 0,
          "utf16Offset": 224
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TextMessage.h",
      "fileSnippet": "@interface TextMessage : NSManagedObject",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "TextMessage",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "butPhoneMonitorClick:",
      "extent": {
        "end": {
          "byteColumn": 124,
          "byteOffset": 8118,
          "line": 222,
          "utf16Column": 123,
          "utf16Offset": 8118
        },
        "start": {
          "byteColumn": 30,
          "byteOffset": 7873,
          "line": 221,
          "utf16Column": 29,
          "utf16Offset": 7873
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Hazard_ViewController.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"Contact Monitor Center\" message:@\"Are you sure you want to call the Monitor Center?\"\n                                                       delegate:self cancelButtonTitle:@\"No\" otherButtonTitles:@\"Yes\", nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">Contact Monitor Center</code>, <code class=\"fauxpas-string\">Are you sure you want to call the Monitor Center?</code>, <code class=\"fauxpas-string\">No</code>, <code class=\"fauxpas-string\">Yes</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings Contact Monitor Center, Are you sure you want to call the Monitor Center?, No, Yes",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 35,
          "byteOffset": 241,
          "line": 12,
          "utf16Column": 35,
          "utf16Offset": 241
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 206,
          "line": 12,
          "utf16Column": 0,
          "utf16Offset": 206
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/NetActivityView.h",
      "fileSnippet": "@interface NetActivityView : UIView",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "NetActivityView",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 85,
          "byteOffset": 1228,
          "line": 39,
          "utf16Column": 85,
          "utf16Offset": 1227
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 1143,
          "line": 39,
          "utf16Column": 0,
          "utf16Offset": 1142
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.h",
      "fileSnippet": "@interface FitkatController : NSObject<CBCentralManagerDelegate,CBPeripheralDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "FitkatController",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "MBBase64",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 282,
          "line": 15,
          "utf16Column": 53,
          "utf16Offset": 282
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 229,
          "line": 14,
          "utf16Column": 0,
          "utf16Offset": 229
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Base64.m",
      "fileSnippet": "+ (id)dataWithBase64EncodedString:(NSString *)string;",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an init or factory method return type is anything other than <code class=\"fauxpas-codesymbol\">instancetype</code>.</p> <p>Properly specifying the return type for factory methods (e.g. <code class=\"fauxpas-objcmethod\">+[NSArray arrayWithObject:]</code>) allows the compiler to perform more type checking, which helps catch bugs. Even though the compiler automatically determines the return types of init methods (even if they are declared as <code class=\"fauxpas-codesymbol\">id</code>) it is still good to be explicit and use <code class=\"fauxpas-codesymbol\">instancetype</code>.</p>",
        "ruleName": "Constructor return type",
        "ruleShortName": "ConstructorReturnType",
        "ruleWarning": null
      },
      "identifier": "dataWithBase64EncodedString:",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Warns if an init or factory method return type is anything other than instancetype. Properly specifying the return type for factory methods (e.g. +[NSArray arrayWithObject:]) allows the compiler to perform more type checking, which helps catch bugs. Even though the compiler automatically determines the return types of init methods (even if they are declared as id) it is still good to be explicit and use instancetype.",
      "ruleName": "Constructor return type",
      "ruleShortName": "ConstructorReturnType",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "finishedReceive:error:data:",
      "extent": {
        "end": {
          "byteColumn": 149,
          "byteOffset": 26552,
          "line": 613,
          "utf16Column": 148,
          "utf16Offset": 26552
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 26420,
          "line": 613,
          "utf16Column": 16,
          "utf16Offset": 26420
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckSN_ViewController.m",
      "fileSnippet": "NSLog(@\"ConfigUpdate Error - %@ %@\",[error localizedDescription],[[error userInfo] objectForKey:NSURLErrorFailingURLStringErrorKey])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "Process:",
      "extent": {
        "end": {
          "byteColumn": 37,
          "byteOffset": 36807,
          "line": 1087,
          "utf16Column": 36,
          "utf16Offset": 36807
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 36787,
          "line": 1087,
          "utf16Column": 16,
          "utf16Offset": 36787
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "inp = constants.fend",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "SendCheckinCode:comments:",
      "extent": {
        "end": {
          "byteColumn": 90,
          "byteOffset": 59948,
          "line": 1680,
          "utf16Column": 89,
          "utf16Offset": 59948
        },
        "start": {
          "byteColumn": 57,
          "byteOffset": 59915,
          "line": 1680,
          "utf16Column": 56,
          "utf16Offset": 59915
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "[NSNumber numberWithInt:tzoffset]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetCallsign",
      "extent": {
        "end": {
          "byteColumn": 35,
          "byteOffset": 91519,
          "line": 2295,
          "utf16Column": 34,
          "utf16Offset": 91519
        },
        "start": {
          "byteColumn": 16,
          "byteOffset": 91500,
          "line": 2295,
          "utf16Column": 15,
          "utf16Offset": 91500
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "(temp) ? temp : @\"\"",
      "html": {
        "info": null,
        "ruleDescription": "Expressions of the form <code>(obj ? obj : other)</code> should be written as <code>obj ?: other</code>.",
        "ruleName": "Null coalescing operator usage",
        "ruleShortName": "NullCoalescingOp",
        "ruleWarning": "Please note that in the form <code>(obj ? obj : other)</code> the <code>obj</code> expression is evaluated twice, while in the <code>obj ?: other</code> form it is evaluated only once."
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "Expressions of the form (obj ? obj : other) should be written as obj ?: other.",
      "ruleName": "Null coalescing operator usage",
      "ruleShortName": "NullCoalescingOp",
      "ruleWarning": "Please note that in the form (obj ? obj : other) the obj expression is evaluated twice, while in the obj ?: other form it is evaluated only once.",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetVehiclePlate",
      "extent": {
        "end": {
          "byteColumn": 35,
          "byteOffset": 91887,
          "line": 2313,
          "utf16Column": 34,
          "utf16Offset": 91887
        },
        "start": {
          "byteColumn": 16,
          "byteOffset": 91868,
          "line": 2313,
          "utf16Column": 15,
          "utf16Offset": 91868
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "(temp) ? temp : @\"\"",
      "html": {
        "info": null,
        "ruleDescription": "Expressions of the form <code>(obj ? obj : other)</code> should be written as <code>obj ?: other</code>.",
        "ruleName": "Null coalescing operator usage",
        "ruleShortName": "NullCoalescingOp",
        "ruleWarning": "Please note that in the form <code>(obj ? obj : other)</code> the <code>obj</code> expression is evaluated twice, while in the <code>obj ?: other</code> form it is evaluated only once."
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "Expressions of the form (obj ? obj : other) should be written as obj ?: other.",
      "ruleName": "Null coalescing operator usage",
      "ruleShortName": "NullCoalescingOp",
      "ruleWarning": "Please note that in the form (obj ? obj : other) the obj expression is evaluated twice, while in the obj ?: other form it is evaluated only once.",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "TCPPacket_SPTemplateReply",
      "extent": {
        "end": {
          "byteColumn": 39,
          "byteOffset": 5427,
          "line": 191,
          "utf16Column": 38,
          "utf16Offset": 5427
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 5389,
          "line": 191,
          "utf16Column": 0,
          "utf16Offset": 5389
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.h",
      "fileSnippet": "@property (nonatomic) NSString *level4",
      "html": {
        "info": "The <code>level4</code> property is declared with <code>strong</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The level4 property is declared with strong semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "updatecaptions",
      "extent": {
        "end": {
          "byteColumn": 76,
          "byteOffset": 3362,
          "line": 121,
          "utf16Column": 75,
          "utf16Offset": 3362
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 3295,
          "line": 121,
          "utf16Column": 8,
          "utf16Offset": 3295
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckinSettings_ViewController.m",
      "fileSnippet": "[butEnableDisable setTitle:@\"ENABLE\" forState:UIControlStateNormal]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIButton setTitle:forState:]</code> called with string <code class=\"fauxpas-string\">ENABLE</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIButton setTitle:forState:] called with string ENABLE",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "Encode:offset:size:",
      "extent": {
        "end": {
          "byteColumn": 42,
          "byteOffset": 34906,
          "line": 1032,
          "utf16Column": 41,
          "utf16Offset": 34906
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 34873,
          "line": 1032,
          "utf16Column": 8,
          "utf16Offset": 34873
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "block = [xt CAMS911Encrypt:block]",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 142,
          "byteOffset": 12315,
          "line": 372,
          "utf16Column": 141,
          "utf16Offset": 12315
        },
        "start": {
          "byteColumn": 2,
          "byteOffset": 12175,
          "line": 372,
          "utf16Column": 1,
          "utf16Offset": 12175
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/BillingInfo_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillHide:) name:UIKeyboardWillHideNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CancelLocalNotification:",
      "extent": {
        "end": {
          "byteColumn": 69,
          "byteOffset": 6639,
          "line": 184,
          "utf16Column": 68,
          "utf16Offset": 6639
        },
        "start": {
          "byteColumn": 43,
          "byteOffset": 6613,
          "line": 184,
          "utf16Column": 42,
          "utf16Offset": 6613
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.m",
      "fileSnippet": "[allLocal objectAtIndex:i]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSArray objectAtIndex:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSArray objectAtIndex:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 58,
          "byteOffset": 253,
          "line": 11,
          "utf16Column": 58,
          "utf16Offset": 253
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 195,
          "line": 11,
          "utf16Column": 0,
          "utf16Offset": 195
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CommentsDelegate.h",
      "fileSnippet": "@interface CommentsDelegate : NSObject<UITextViewDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "CommentsDelegate",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_UserInfoVC.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RegisterLocalNotifications",
      "extent": {
        "end": {
          "byteColumn": 115,
          "byteOffset": 71178,
          "line": 1715,
          "utf16Column": 114,
          "utf16Offset": 71178
        },
        "start": {
          "byteColumn": 73,
          "byteOffset": 71136,
          "line": 1715,
          "utf16Column": 72,
          "utf16Offset": 71136
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[NSNumber numberWithInt:LNT_HAZARD_EXPIRE]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 124,
          "byteOffset": 370,
          "line": 13,
          "utf16Column": 124,
          "utf16Offset": 369
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 246,
          "line": 13,
          "utf16Column": 0,
          "utf16Offset": 245
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_NotificationsVC.h",
      "fileSnippet": "@interface Options_NotificationsVC : UIViewController<UITableViewDataSource,UITableViewDelegate,UIGestureRecognizerDelegate>",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "Options_NotificationsVC",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ContactSettings",
      "extent": {
        "end": {
          "byteColumn": 51,
          "byteOffset": 5053,
          "line": 164,
          "utf16Column": 50,
          "utf16Offset": 5053
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 5003,
          "line": 164,
          "utf16Column": 0,
          "utf16Offset": 5003
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *level4label",
      "html": {
        "info": "The <code>level4label</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The level4label property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/telelink_journey/telelinkicon.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "startScanForPeripherals",
      "extent": {
        "end": {
          "byteColumn": 76,
          "byteOffset": 14975,
          "line": 460,
          "utf16Column": 75,
          "utf16Offset": 14974
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 14912,
          "line": 460,
          "utf16Column": 12,
          "utf16Offset": 14911
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "[gatt_peripherals setObject:cp forKey:cp.identifier.UUIDString]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSMutableDictionary setObject:forKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSMutableDictionary setObject:forKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CommOptions",
      "extent": {
        "end": {
          "byteColumn": 53,
          "byteOffset": 3207,
          "line": 107,
          "utf16Column": 52,
          "utf16Offset": 3207
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 3155,
          "line": 107,
          "utf16Column": 0,
          "utf16Offset": 3155
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *primaryServer",
      "html": {
        "info": "The <code>primaryServer</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The primaryServer property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "gestureReloadConfig:",
      "extent": {
        "end": {
          "byteColumn": 104,
          "byteOffset": 8852,
          "line": 226,
          "utf16Column": 103,
          "utf16Offset": 8852
        },
        "start": {
          "byteColumn": 32,
          "byteOffset": 8572,
          "line": 224,
          "utf16Column": 31,
          "utf16Offset": 8572
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Main_ViewController.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"Unable To Reload Configuration\" \n                                                    message:@\"Please Sign Off and Try Again\" delegate:nil \n                                                    cancelButtonTitle:@\"OK\" otherButtonTitles:nil, nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">Unable To Reload Configuration</code>, <code class=\"fauxpas-string\">Please Sign Off and Try Again</code>, <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings Unable To Reload Configuration, Please Sign Off and Try Again, OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": "StorageContainer",
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 110682,
          "line": 2756,
          "utf16Column": 24,
          "utf16Offset": 110682
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 110658,
          "line": 2755,
          "utf16Column": 0,
          "utf16Offset": 110658
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "-(NSDate*)getOffDutyTime",
      "html": {
        "info": "In Cocoa, it is idiomatic for accessor methods to be named in the form <code>something</code> instead of e.g. <code>getSomething</code>.",
        "ruleDescription": "Warns if getter methods are named in the form <code>getSomething</code> instead of <code>something</code>.",
        "ruleName": "Unidiomatic accessor naming",
        "ruleShortName": "UnidiomaticAccessorNaming",
        "ruleWarning": null
      },
      "identifier": "-[StorageContainer getOffDutyTime]",
      "impact": "Style",
      "info": "In Cocoa, it is idiomatic for accessor methods to be named in the form something instead of e.g. getSomething.",
      "ruleDescription": "Warns if getter methods are named in the form getSomething instead of something.",
      "ruleName": "Unidiomatic accessor naming",
      "ruleShortName": "UnidiomaticAccessorNaming",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetUse10Codes",
      "extent": {
        "end": {
          "byteColumn": 67,
          "byteOffset": 29003,
          "line": 746,
          "utf16Column": 66,
          "utf16Offset": 29003
        },
        "start": {
          "byteColumn": 26,
          "byteOffset": 28962,
          "line": 746,
          "utf16Column": 25,
          "utf16Offset": 28962
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[usersettings objectForKey:@\"use10Codes\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 14,
          "byteOffset": 88050,
          "line": 2159,
          "utf16Column": 13,
          "utf16Offset": 88050
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 88045,
          "line": 2159,
          "utf16Column": 8,
          "utf16Offset": 88045
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "error",
      "html": {
        "info": null,
        "ruleDescription": "Methods that pass back <code class=\"fauxpas-objcclass\">NSError</code> objects by reference return <code class=\"fauxpas-codesymbol\">NO</code> or <code class=\"fauxpas-codesymbol\">nil</code> to indicate an error condition. This rule warns if the <code class=\"fauxpas-objcclass\">NSError</code> pointer is checked against <code class=\"fauxpas-codesymbol\">nil</code> without checking the return value.",
        "ruleName": "Fragile error condition check",
        "ruleShortName": "ErrorConditionCheck",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Methods that pass back NSError objects by reference return NO or nil to indicate an error condition. This rule warns if the NSError pointer is checked against nil without checking the return value.",
      "ruleName": "Fragile error condition check",
      "ruleShortName": "ErrorConditionCheck",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "MonitorOptions",
      "extent": {
        "end": {
          "byteColumn": 57,
          "byteOffset": 2327,
          "line": 76,
          "utf16Column": 56,
          "utf16Offset": 2327
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 2271,
          "line": 76,
          "utf16Column": 0,
          "utf16Offset": 2271
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *emergencyPhoneNum",
      "html": {
        "info": "The <code>emergencyPhoneNum</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The emergencyPhoneNum property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 59,
          "byteOffset": 4705,
          "line": 136,
          "utf16Column": 58,
          "utf16Offset": 4704
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 4671,
          "line": 136,
          "utf16Column": 24,
          "utf16Offset": 4670
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_AppInfoVC.m",
      "fileSnippet": "[cellTitle setText:@\"App Version\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">App Version</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string App Version",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "PrepareSendData:eventtype:",
      "extent": {
        "end": {
          "byteColumn": 73,
          "byteOffset": 48562,
          "line": 1460,
          "utf16Column": 72,
          "utf16Offset": 48562
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 48514,
          "line": 1460,
          "utf16Column": 24,
          "utf16Offset": 48514
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "NSLog(@\"Send Assist Cancel %i\",send.sequencenum)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RemoveRecentVehiclePlate:",
      "extent": {
        "end": {
          "byteColumn": 85,
          "byteOffset": 81773,
          "line": 1970,
          "utf16Column": 84,
          "utf16Offset": 81773
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 81697,
          "line": 1970,
          "utf16Column": 8,
          "utf16Offset": 81697
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"[ERROR] COREDATA: Save raised an error - '%@'\", [error description])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 143,
          "byteOffset": 1725,
          "line": 43,
          "utf16Column": 142,
          "utf16Offset": 1724
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 1587,
          "line": 43,
          "utf16Column": 4,
          "utf16Offset": 1586
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_UserInfoVC.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardDidHide:) name:UIKeyboardDidHideNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RegisterLocalNotifications",
      "extent": {
        "end": {
          "byteColumn": 117,
          "byteOffset": 71062,
          "line": 1714,
          "utf16Column": 116,
          "utf16Offset": 71062
        },
        "start": {
          "byteColumn": 73,
          "byteOffset": 71018,
          "line": 1714,
          "utf16Column": 72,
          "utf16Offset": 71018
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[NSNumber numberWithInt:LNT_HAZARD_PREWARN2]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithInt:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithInt:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "finishedReceive:error:data:",
      "extent": {
        "end": {
          "byteColumn": 60,
          "byteOffset": 12667,
          "line": 340,
          "utf16Column": 59,
          "utf16Offset": 12666
        },
        "start": {
          "byteColumn": 17,
          "byteOffset": 12624,
          "line": 340,
          "utf16Column": 16,
          "utf16Offset": 12623
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_UserInfoVC.m",
      "fileSnippet": "NSLog(@\"Register Error - 0 bytes received\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ContactInfo",
      "extent": {
        "end": {
          "byteColumn": 50,
          "byteOffset": 895,
          "line": 35,
          "utf16Column": 49,
          "utf16Offset": 895
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 846,
          "line": 35,
          "utf16Column": 0,
          "utf16Offset": 846
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *phonevalue",
      "html": {
        "info": "The <code>phonevalue</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The phonevalue property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:commitEditingStyle:forRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 76,
          "byteOffset": 6452,
          "line": 139,
          "utf16Column": 75,
          "utf16Offset": 6452
        },
        "start": {
          "byteColumn": 40,
          "byteOffset": 6416,
          "line": 139,
          "utf16Column": 39,
          "utf16Offset": 6416
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Location_ViewController.m",
      "fileSnippet": "[NSArray arrayWithObject: indexPath]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSArray arrayWithObject:]</code> is called. Consider using an Objective-C container literal expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSArray arrayWithObject:] is called. Consider using an Objective-C container literal expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_default/hazard_up.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "AddChange:data:",
      "extent": {
        "end": {
          "byteColumn": 71,
          "byteOffset": 24510,
          "line": 723,
          "utf16Column": 70,
          "utf16Offset": 24510
        },
        "start": {
          "byteColumn": 39,
          "byteOffset": 24478,
          "line": 723,
          "utf16Column": 38,
          "utf16Offset": 24478
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "[NSNumber numberWithShort:ctype]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithShort:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithShort:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetSLApplyDelay",
      "extent": {
        "end": {
          "byteColumn": 73,
          "byteOffset": 3992,
          "line": 138,
          "utf16Column": 72,
          "utf16Offset": 3991
        },
        "start": {
          "byteColumn": 26,
          "byteOffset": 3945,
          "line": 138,
          "utf16Column": 25,
          "utf16Offset": 3944
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "[usersettings objectForKey:@\"slbandapplydelay\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/UniqueMAC.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "LoadRecentLocsCD",
      "extent": {
        "end": {
          "byteColumn": 88,
          "byteOffset": 83059,
          "line": 2012,
          "utf16Column": 87,
          "utf16Offset": 83059
        },
        "start": {
          "byteColumn": 3,
          "byteOffset": 82974,
          "line": 2012,
          "utf16Column": 2,
          "utf16Offset": 82974
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"[ERROR] COREDATA: Fetch request raised an error - '%@'\", [error description])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "TCPPacket_ChangeInfo",
      "extent": {
        "end": {
          "byteColumn": 48,
          "byteOffset": 6536,
          "line": 232,
          "utf16Column": 47,
          "utf16Offset": 6536
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 6489,
          "line": 232,
          "utf16Column": 0,
          "utf16Offset": 6489
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *callsign",
      "html": {
        "info": "The <code>callsign</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The callsign property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 33,
          "byteOffset": 2773,
          "line": 91,
          "utf16Column": 33,
          "utf16Offset": 2773
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 2740,
          "line": 91,
          "utf16Column": 0,
          "utf16Offset": 2740
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@interface CommOptions : NSObject",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "CommOptions",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_default/emergency_up.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "persistentStoreCoordinator",
      "extent": {
        "end": {
          "byteColumn": 25,
          "byteOffset": 11224,
          "line": 274,
          "utf16Column": 24,
          "utf16Offset": 11224
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 11204,
          "line": 274,
          "utf16Column": 4,
          "utf16Offset": 11204
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SafetyLinkAppDelegate.m",
      "fileSnippet": "NSError *error = nil",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when <code class=\"fauxpas-objcclass\">NSError</code> or <code class=\"fauxpas-typedef\">CFErrorRef</code> variable values are never used.</p> <p>If you are not interested in the error return value of a method or function, pass <code class=\"fauxpas-codesymbol\">NULL</code> for the error argument.</p>",
        "ruleName": "Unused error value",
        "ruleShortName": "UnusedErrorValue",
        "ruleWarning": null
      },
      "identifier": "error",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Warns when NSError or CFErrorRef variable values are never used. If you are not interested in the error return value of a method or function, pass NULL for the error argument.",
      "ruleName": "Unused error value",
      "ruleShortName": "UnusedErrorValue",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetRegDomain",
      "extent": {
        "end": {
          "byteColumn": 66,
          "byteOffset": 91664,
          "line": 2303,
          "utf16Column": 65,
          "utf16Offset": 91664
        },
        "start": {
          "byteColumn": 26,
          "byteOffset": 91624,
          "line": 2303,
          "utf16Column": 25,
          "utf16Offset": 91624
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[usersettings objectForKey:@\"regdomain\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "autoclosetick:",
      "extent": {
        "end": {
          "byteColumn": 123,
          "byteOffset": 1953,
          "line": 69,
          "utf16Column": 122,
          "utf16Offset": 1952
        },
        "start": {
          "byteColumn": 32,
          "byteOffset": 1735,
          "line": 68,
          "utf16Column": 31,
          "utf16Offset": 1734
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_SLCTestMode.m",
      "fileSnippet": "[[UIAlertView alloc] initWithTitle:@\"Auto Close Timeout\" message:@\"Auto Close Test Mode Screen\"\n                                                         delegate:self cancelButtonTitle:@\"OK\" otherButtonTitles:nil, nil]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:]</code> called with strings <code class=\"fauxpas-string\">Auto Close Timeout</code>, <code class=\"fauxpas-string\">Auto Close Test Mode Screen</code>, <code class=\"fauxpas-string\">OK</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIAlertView initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] called with strings Auto Close Timeout, Auto Close Test Mode Screen, OK",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_default/bevelup.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "LoadRecentBillingCD",
      "extent": {
        "end": {
          "byteColumn": 88,
          "byteOffset": 86044,
          "line": 2102,
          "utf16Column": 87,
          "utf16Offset": 86044
        },
        "start": {
          "byteColumn": 3,
          "byteOffset": 85959,
          "line": 2102,
          "utf16Column": 2,
          "utf16Offset": 85959
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"[ERROR] COREDATA: Fetch request raised an error - '%@'\", [error description])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 59,
          "byteOffset": 2112,
          "line": 72,
          "utf16Column": 58,
          "utf16Offset": 2112
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 2066,
          "line": 72,
          "utf16Column": 12,
          "utf16Offset": 2066
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_ViewController.m",
      "fileSnippet": "[cellTitle setText:@\"Application Information\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">Application Information</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string Application Information",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ConfigSettings",
      "extent": {
        "end": {
          "byteColumn": 53,
          "byteOffset": 4077,
          "line": 134,
          "utf16Column": 52,
          "utf16Offset": 4077
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 4025,
          "line": 134,
          "utf16Column": 0,
          "utf16Offset": 4025
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *iphonePassKey",
      "html": {
        "info": "The <code>iphonePassKey</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The iphonePassKey property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetContactNumber",
      "extent": {
        "end": {
          "byteColumn": 35,
          "byteOffset": 92076,
          "line": 2322,
          "utf16Column": 34,
          "utf16Offset": 92076
        },
        "start": {
          "byteColumn": 16,
          "byteOffset": 92057,
          "line": 2322,
          "utf16Column": 15,
          "utf16Offset": 92057
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "(temp) ? temp : @\"\"",
      "html": {
        "info": null,
        "ruleDescription": "Expressions of the form <code>(obj ? obj : other)</code> should be written as <code>obj ?: other</code>.",
        "ruleName": "Null coalescing operator usage",
        "ruleShortName": "NullCoalescingOp",
        "ruleWarning": "Please note that in the form <code>(obj ? obj : other)</code> the <code>obj</code> expression is evaluated twice, while in the <code>obj ?: other</code> form it is evaluated only once."
      },
      "identifier": null,
      "impact": "Style",
      "info": null,
      "ruleDescription": "Expressions of the form (obj ? obj : other) should be written as obj ?: other.",
      "ruleName": "Null coalescing operator usage",
      "ruleShortName": "NullCoalescingOp",
      "ruleWarning": "Please note that in the form (obj ? obj : other) the obj expression is evaluated twice, while in the obj ?: other form it is evaluated only once.",
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "tableView:cellForRowAtIndexPath:",
      "extent": {
        "end": {
          "byteColumn": 72,
          "byteOffset": 7443,
          "line": 180,
          "utf16Column": 71,
          "utf16Offset": 7442
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 7384,
          "line": 180,
          "utf16Column": 12,
          "utf16Offset": 7383
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_SLCompanionVC.m",
      "fileSnippet": "[cellDesc setText:@\"20 sec delay before emergency is sent\"]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UILabel setText:]</code> called with string <code class=\"fauxpas-string\">20 sec delay before emergency is sent</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UILabel setText:] called with string 20 sec delay before emergency is sent",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CreateNewRecentBilling:bedesc:",
      "extent": {
        "end": {
          "byteColumn": 91,
          "byteOffset": 87352,
          "line": 2135,
          "utf16Column": 90,
          "utf16Offset": 87352
        },
        "start": {
          "byteColumn": 15,
          "byteOffset": 87276,
          "line": 2135,
          "utf16Column": 14,
          "utf16Offset": 87276
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"[ERROR] COREDATA: Save raised an error - '%@'\", [error description])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 145,
          "byteOffset": 12172,
          "line": 371,
          "utf16Column": 144,
          "utf16Offset": 12172
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 12032,
          "line": 371,
          "utf16Column": 4,
          "utf16Offset": 12032
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/BillingInfo_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillShow:) name:UIKeyboardWillShowNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "billingbuttononoff:",
      "extent": {
        "end": {
          "byteColumn": 89,
          "byteOffset": 11396,
          "line": 284,
          "utf16Column": 88,
          "utf16Offset": 11396
        },
        "start": {
          "byteColumn": 79,
          "byteOffset": 11386,
          "line": 284,
          "utf16Column": 78,
          "utf16Offset": 11386
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Main_ViewController.m",
      "fileSnippet": "hide = YES",
      "html": {
        "info": null,
        "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
        "ruleName": "Modifying the value of an argument variable",
        "ruleShortName": "ArgumentModification",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Argument variable values should not be modified directly — code is easier to follow if you can always trust that argument variable values do not change.",
      "ruleName": "Modifying the value of an argument variable",
      "ruleShortName": "ArgumentModification",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "PrepareSendData:eventtype:",
      "extent": {
        "end": {
          "byteColumn": 46,
          "byteOffset": 45843,
          "line": 1408,
          "utf16Column": 45,
          "utf16Offset": 45843
        },
        "start": {
          "byteColumn": 24,
          "byteOffset": 45821,
          "line": 1408,
          "utf16Column": 23,
          "utf16Offset": 45821
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "NSLog(@\"Try Send SOS\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 145,
          "byteOffset": 21243,
          "line": 591,
          "utf16Column": 144,
          "utf16Offset": 21243
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 21103,
          "line": 591,
          "utf16Column": 4,
          "utf16Offset": 21103
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SOS_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillShow:) name:UIKeyboardWillShowNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "loadConfigWhileRunning:",
      "extent": {
        "end": {
          "byteColumn": 23,
          "byteOffset": 7458,
          "line": 256,
          "utf16Column": 22,
          "utf16Offset": 7458
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 7444,
          "line": 256,
          "utf16Column": 8,
          "utf16Offset": 7444
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSError *error",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when <code class=\"fauxpas-objcclass\">NSError</code> or <code class=\"fauxpas-typedef\">CFErrorRef</code> variable values are never used.</p> <p>If you are not interested in the error return value of a method or function, pass <code class=\"fauxpas-codesymbol\">NULL</code> for the error argument.</p>",
        "ruleName": "Unused error value",
        "ruleShortName": "UnusedErrorValue",
        "ruleWarning": null
      },
      "identifier": "error",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Warns when NSError or CFErrorRef variable values are never used. If you are not interested in the error return value of a method or function, pass NULL for the error argument.",
      "ruleName": "Unused error value",
      "ruleShortName": "UnusedErrorValue",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "SendStartStopJourney:",
      "extent": {
        "end": {
          "byteColumn": 253,
          "byteOffset": 61538,
          "line": 1519,
          "utf16Column": 252,
          "utf16Offset": 61538
        },
        "start": {
          "byteColumn": 31,
          "byteOffset": 61316,
          "line": 1519,
          "utf16Column": 30,
          "utf16Offset": 61316
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[[NSArray alloc] initWithObjects:@\"---Start Journey\", [@\"CurrentLoc=\" stringByAppendingString:selectedlocation] , [@\"Dest=\" stringByAppendingString:billingselect] , [@\"RouteDetails=\" stringByAppendingString:comments], nil]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSArray initWithObjects:]</code> is called. Consider using an Objective-C container literal expression instead.</p><p>NOTE: there is a crucial difference between the current implementation and the suggestion here: While a nil value for any of the given values to this method will only terminate the argument list, a nil value in the literal container expression will result in a runtime exception.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSArray initWithObjects:] is called. Consider using an Objective-C container literal expression instead.NOTE: there is a crucial difference between the current implementation and the suggestion here: While a nil value for any of the given values to this method will only terminate the argument list, a nil value in the literal container expression will result in a runtime exception.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "PrepareSendData:eventtype:",
      "extent": {
        "end": {
          "byteColumn": 76,
          "byteOffset": 46680,
          "line": 1425,
          "utf16Column": 75,
          "utf16Offset": 46680
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 46629,
          "line": 1425,
          "utf16Column": 24,
          "utf16Offset": 46629
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "NSLog(@\"Send Request Template %i\",send.sequencenum)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ContactSettings",
      "extent": {
        "end": {
          "byteColumn": 52,
          "byteOffset": 5338,
          "line": 169,
          "utf16Column": 51,
          "utf16Offset": 5338
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 5287,
          "line": 169,
          "utf16Column": 0,
          "utf16Offset": 5287
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *escalationid",
      "html": {
        "info": "The <code>escalationid</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The escalationid property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 143,
          "byteOffset": 11048,
          "line": 328,
          "utf16Column": 142,
          "utf16Offset": 11048
        },
        "start": {
          "byteColumn": 5,
          "byteOffset": 10910,
          "line": 328,
          "utf16Column": 4,
          "utf16Offset": 10910
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SignOff_ViewController.m",
      "fileSnippet": "[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardDidShow:) name:UIKeyboardDidShowNotification object:nil]",
      "html": {
        "info": null,
        "ruleDescription": "<p>You must invoke <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:]</code> or <code class=\"fauxpas-objcmethod\">-[NSNotificationCenter removeObserver:name:object:]</code> before the observer object is deallocated.</p> <p>This rule only considers cases where the observer reference is <code>self</code>, or an instance variable or an Objective-C property in <code>self</code>.</p> <p>This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).</p>",
        "ruleName": "Missing <code class=\"fauxpas-objcclass\">NSNotificationCenter</code> observer detachment",
        "ruleShortName": "MissingNotificationCenterDetachment",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "You must invoke -[NSNotificationCenter removeObserver:] or -[NSNotificationCenter removeObserver:name:object:] before the observer object is deallocated. This rule only considers cases where the observer reference is self, or an instance variable or an Objective-C property in self. This only applies to iOS 8 (and earlier) and OS X 10.10 (and earlier).",
      "ruleName": "Missing NSNotificationCenter observer detachment",
      "ruleShortName": "MissingNotificationCenterDetachment",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 2,
      "confidenceDescription": "Low",
      "context": "loadConfigSettings:savetofile:",
      "extent": {
        "end": {
          "byteColumn": 60,
          "byteOffset": 22641,
          "line": 546,
          "utf16Column": 59,
          "utf16Offset": 22641
        },
        "start": {
          "byteColumn": 21,
          "byteOffset": 22602,
          "line": 546,
          "utf16Column": 20,
          "utf16Offset": 22602
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[formatter setDateFormat:@\"yyyy-MM-dd\"]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when an <code class=\"fauxpas-objcclass\">NSDateFormatter</code> is used with fixed-format dates without using the invariant <code class=\"fauxpas-string\">en_US_POSIX</code> locale. If any other locale is used, the date format string may be overwritten, depending on system date and time settings.</p> <p>When working with user-visible dates, date and time styles should be used instead of setting a date format.</p>",
        "ruleName": "Fixed-format <code class=\"fauxpas-objcclass\">NSDateFormatter</code> not using invariant (POSIX) locale",
        "ruleShortName": "FixedFormatDateFormatter",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Warns when an NSDateFormatter is used with fixed-format dates without using the invariant en_US_POSIX locale. If any other locale is used, the date format string may be overwritten, depending on system date and time settings. When working with user-visible dates, date and time styles should be used instead of setting a date format.",
      "ruleName": "Fixed-format NSDateFormatter not using invariant (POSIX) locale",
      "ruleShortName": "FixedFormatDateFormatter",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "RegisterScheduleOptionsLocalNotification:",
      "extent": {
        "end": {
          "byteColumn": 79,
          "byteOffset": 62660,
          "line": 1559,
          "utf16Column": 78,
          "utf16Offset": 62660
        },
        "start": {
          "byteColumn": 51,
          "byteOffset": 62632,
          "line": 1559,
          "utf16Column": 50,
          "utf16Offset": 62632
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "[allcurrent objectAtIndex:i]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSArray objectAtIndex:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSArray objectAtIndex:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/ConfigureTemplates_ViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ScheduleEmergencyNotification:alertbody:type:",
      "extent": {
        "end": {
          "byteColumn": 111,
          "byteOffset": 3839,
          "line": 123,
          "utf16Column": 110,
          "utf16Offset": 3839
        },
        "start": {
          "byteColumn": 31,
          "byteOffset": 3759,
          "line": 123,
          "utf16Column": 30,
          "utf16Offset": 3759
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.m",
      "fileSnippet": "[NSDictionary dictionaryWithObject:[NSNumber numberWithInt:type] forKey:@\"type\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSDictionary dictionaryWithObject:forKey:]</code> is called. Consider using an Objective-C container literal expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSDictionary dictionaryWithObject:forKey:] is called. Consider using an Objective-C container literal expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "CheckLicenseSN",
      "extent": {
        "end": {
          "byteColumn": 55,
          "byteOffset": 1941,
          "line": 52,
          "utf16Column": 54,
          "utf16Offset": 1941
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 1899,
          "line": 52,
          "utf16Column": 12,
          "utf16Offset": 1899
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckSN_ViewController.m",
      "fileSnippet": "NSLog(@\"%@\",@\"Error reading license file\")",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 74,
          "byteOffset": 12010,
          "line": 368,
          "utf16Column": 73,
          "utf16Offset": 12010
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 11949,
          "line": 368,
          "utf16Column": 12,
          "utf16Offset": 11949
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/BillingInfo_ViewController.m",
      "fileSnippet": "[butStartStop setTitle:@\"STOP\" forState:UIControlStateNormal]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIButton setTitle:forState:]</code> called with string <code class=\"fauxpas-string\">STOP</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIButton setTitle:forState:] called with string STOP",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "connectToPeripheral:",
      "extent": {
        "end": {
          "byteColumn": 67,
          "byteOffset": 15794,
          "line": 483,
          "utf16Column": 66,
          "utf16Offset": 15793
        },
        "start": {
          "byteColumn": 31,
          "byteOffset": 15758,
          "line": 483,
          "utf16Column": 30,
          "utf16Offset": 15757
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "[gatt_peripherals objectForKey:uuid]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "finishedReceive:error:data:",
      "extent": {
        "end": {
          "byteColumn": 144,
          "byteOffset": 20446,
          "line": 504,
          "utf16Column": 143,
          "utf16Offset": 20446
        },
        "start": {
          "byteColumn": 78,
          "byteOffset": 20380,
          "line": 504,
          "utf16Column": 77,
          "utf16Offset": 20380
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/CheckSN_ViewController.m",
      "fileSnippet": "[[error userInfo] objectForKey:NSURLErrorFailingURLStringErrorKey]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "descriptionWithIndent:",
      "extent": {
        "end": {
          "byteColumn": 80,
          "byteOffset": 1497,
          "line": 41,
          "utf16Column": 79,
          "utf16Offset": 1497
        },
        "start": {
          "byteColumn": 45,
          "byteOffset": 1462,
          "line": 41,
          "utf16Column": 44,
          "utf16Offset": 1462
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SMXMLDocument.m",
      "fileSnippet": "[attributes objectForKey:attribute]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 41,
          "byteOffset": 268,
          "line": 13,
          "utf16Column": 41,
          "utf16Offset": 268
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 227,
          "line": 13,
          "utf16Column": 0,
          "utf16Offset": 227
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/BillingEntry.h",
      "fileSnippet": "@interface BillingEntry : NSManagedObject",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "BillingEntry",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "viewDidLoad",
      "extent": {
        "end": {
          "byteColumn": 82,
          "byteOffset": 11727,
          "line": 357,
          "utf16Column": 81,
          "utf16Offset": 11727
        },
        "start": {
          "byteColumn": 13,
          "byteOffset": 11658,
          "line": 357,
          "utf16Column": 12,
          "utf16Offset": 11658
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/BillingInfo_ViewController.m",
      "fileSnippet": "[butStartStop setTitle:@\"STOP JOURNEY\" forState:UIControlStateNormal]",
      "html": {
        "info": "<code class=\"fauxpas-objcmethod\">-[UIButton setTitle:forState:]</code> called with string <code class=\"fauxpas-string\">STOP JOURNEY</code>",
        "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through <code class=\"fauxpas-codesymbol\">NSLocalizedString()</code> and friends.",
        "ruleName": "UI String not localized",
        "ruleShortName": "HardcodedUIString",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "-[UIButton setTitle:forState:] called with string STOP JOURNEY",
      "ruleDescription": "All strings that are given to APIs that display them in the user interface should be routed through NSLocalizedString() and friends.",
      "ruleName": "UI String not localized",
      "ruleShortName": "HardcodedUIString",
      "ruleWarning": null,
      "severity": 9,
      "severityDescription": "Error"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 36,
          "byteOffset": 15674,
          "line": 399,
          "utf16Column": 36,
          "utf16Offset": 15674
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 15638,
          "line": 399,
          "utf16Column": 0,
          "utf16Offset": 15638
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.h",
      "fileSnippet": "@interface MyQueueMessage : NSObject",
      "html": {
        "info": null,
        "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. <code>Thing</code> instead of <code>FPXThing</code>).",
        "ruleName": "Unprefixed Objective-C class",
        "ruleShortName": "UnprefixedClass",
        "ruleWarning": null
      },
      "identifier": "MyQueueMessage",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns when an Objective-C class name has no prefix (e.g. Thing instead of FPXThing).",
      "ruleName": "Unprefixed Objective-C class",
      "ruleShortName": "UnprefixedClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "parser:didStartElement:namespaceURI:qualifiedName:attributes:",
      "extent": {
        "end": {
          "byteColumn": 45,
          "byteOffset": 2791,
          "line": 84,
          "utf16Column": 44,
          "utf16Offset": 2789
        },
        "start": {
          "byteColumn": 25,
          "byteOffset": 2771,
          "line": 84,
          "utf16Column": 24,
          "utf16Offset": 2769
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SMXMLDocument.m",
      "fileSnippet": "[SMXMLElement alloc]",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. <code>[FOOThing alloc]</code>.</p> <p>It is recommended to use <code class=\"fauxpas-codesymbol\">self</code> instead (e.g. <code>[self alloc]</code> or <code>[[self class] alloc]</code>) so that the concrete class would receive the message, and subclassing behavior would not be impeded.</p>",
        "ruleName": "Hardcoded self class reference",
        "ruleShortName": "HardcodedSelfClass",
        "ruleWarning": null
      },
      "identifier": "SMXMLElement",
      "impact": "Maintainability",
      "info": null,
      "ruleDescription": "Warns if an Objective-C class (or an instance of a class) sends a message to its own class object using a hardcoded reference to the class, e.g. [FOOThing alloc]. It is recommended to use self instead (e.g. [self alloc] or [[self class] alloc]) so that the concrete class would receive the message, and subclassing behavior would not be impeded.",
      "ruleName": "Hardcoded self class reference",
      "ruleShortName": "HardcodedSelfClass",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "LoadTextMsgsCD",
      "extent": {
        "end": {
          "byteColumn": 88,
          "byteOffset": 75528,
          "line": 1796,
          "utf16Column": 87,
          "utf16Offset": 75528
        },
        "start": {
          "byteColumn": 3,
          "byteOffset": 75443,
          "line": 1796,
          "utf16Column": 2,
          "utf16Offset": 75443
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSLog(@\"[ERROR] COREDATA: Fetch request raised an error - '%@'\", [error description])",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/intercon_iamok/intercon_backred.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Options_AppInfoVC.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "initWithDocument:",
      "extent": {
        "end": {
          "byteColumn": 28,
          "byteOffset": 1035,
          "line": 21,
          "utf16Column": 27,
          "utf16Offset": 1035
        },
        "start": {
          "byteColumn": 3,
          "byteOffset": 1010,
          "line": 21,
          "utf16Column": 2,
          "utf16Offset": 1010
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SMXMLDocument.m",
      "fileSnippet": "self.document = aDocument",
      "html": {
        "info": null,
        "ruleDescription": "It is recommended to avoid invoking setter methods on <code class=\"fauxpas-codesymbol\">self</code> in init methods, or in <code class=\"fauxpas-objcmethod\">-[NSObject dealloc]</code>. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
        "ruleName": "Setter invocation in init or dealloc method",
        "ruleShortName": "SetterInvocationInInitOrDealloc",
        "ruleWarning": null
      },
      "identifier": "document",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "It is recommended to avoid invoking setter methods on self in init methods, or in -[NSObject dealloc]. Doing so might trigger KVC notifications, which others might observe, and expect the object to be in a valid, consistent state.",
      "ruleName": "Setter invocation in init or dealloc method",
      "ruleShortName": "SetterInvocationInInitOrDealloc",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "PrepareSendData:",
      "extent": {
        "end": {
          "byteColumn": 62,
          "byteOffset": 45643,
          "line": 1401,
          "utf16Column": 61,
          "utf16Offset": 45643
        },
        "start": {
          "byteColumn": 20,
          "byteOffset": 45601,
          "line": 1401,
          "utf16Column": 19,
          "utf16Offset": 45601
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "NSLog(@\"Send unknown %i\",send.sequencenum)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "StorageContainer",
      "extent": {
        "end": {
          "byteColumn": 53,
          "byteOffset": 9664,
          "line": 297,
          "utf16Column": 52,
          "utf16Offset": 9664
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 9612,
          "line": 297,
          "utf16Column": 0,
          "utf16Offset": 9612
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.h",
      "fileSnippet": "@property (nonatomic,retain) NSString *billingselect",
      "html": {
        "info": "The <code>billingselect</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The billingselect property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "GetSLBandName",
      "extent": {
        "end": {
          "byteColumn": 67,
          "byteOffset": 2832,
          "line": 102,
          "utf16Column": 66,
          "utf16Offset": 2831
        },
        "start": {
          "byteColumn": 26,
          "byteOffset": 2791,
          "line": 102,
          "utf16Column": 25,
          "utf16Offset": 2790
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/FitkatController.m",
      "fileSnippet": "[usersettings objectForKey:@\"slbandname\"]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSDictionary objectForKey:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSDictionary objectForKey:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "ScheduleLocalNotification:alertbody:type:",
      "extent": {
        "end": {
          "byteColumn": 48,
          "byteOffset": 5642,
          "line": 163,
          "utf16Column": 47,
          "utf16Offset": 5642
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 5603,
          "line": 163,
          "utf16Column": 8,
          "utf16Offset": 5603
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/Common.m",
      "fileSnippet": "NSLog(@\"Add Notification %@\",alertbody)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "valueWithPath:",
      "extent": {
        "end": {
          "byteColumn": 89,
          "byteOffset": 4657,
          "line": 141,
          "utf16Column": 88,
          "utf16Offset": 4655
        },
        "start": {
          "byteColumn": 61,
          "byteOffset": 4629,
          "line": 141,
          "utf16Column": 60,
          "utf16Offset": 4627
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SMXMLDocument.m",
      "fileSnippet": "[components objectAtIndex:1]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">-[NSArray objectAtIndex:]</code> is called. Consider using an Objective-C subscript expression instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "-[NSArray objectAtIndex:] is called. Consider using an Objective-C subscript expression instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "SendHazardCode:notes:",
      "extent": {
        "end": {
          "byteColumn": 87,
          "byteOffset": 58546,
          "line": 1651,
          "utf16Column": 86,
          "utf16Offset": 58546
        },
        "start": {
          "byteColumn": 57,
          "byteOffset": 58516,
          "line": 1651,
          "utf16Column": 56,
          "utf16Offset": 58516
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/TCPComms.m",
      "fileSnippet": "[NSNumber numberWithShort:min]",
      "html": {
        "info": "<p><code class=\"fauxpas-objcmethod\">+[NSNumber numberWithShort:]</code> is called. Consider using Objective-C literal notation (or a boxed expression) instead.</p>",
        "ruleDescription": "<p>Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible.</p> <p>Note that Xcode can automatically fix your code to do this (see the <em>Edit → Refactor → Convert To Modern Objective-C Syntax…</em> menu item).</p>",
        "ruleName": "Old, verbose Objective-C syntax",
        "ruleShortName": "OldVerboseObjCSyntax",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Style",
      "info": "+[NSNumber numberWithShort:] is called. Consider using Objective-C literal notation (or a boxed expression) instead.",
      "ruleDescription": "Warns if Objective-C literals, boxed expressions and subscript notation are not used whenever possible. Note that Xcode can automatically fix your code to do this (see the Edit → Refactor → Convert To Modern Objective-C Syntax… menu item).",
      "ruleName": "Old, verbose Objective-C syntax",
      "ruleShortName": "OldVerboseObjCSyntax",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "application:didReceiveLocalNotification:",
      "extent": {
        "end": {
          "byteColumn": 80,
          "byteOffset": 1109,
          "line": 36,
          "utf16Column": 79,
          "utf16Offset": 1109
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 1038,
          "line": 36,
          "utf16Column": 8,
          "utf16Offset": 1038
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SafetyLinkAppDelegate.m",
      "fileSnippet": "NSLog(@\"Receive Local Notification Inactive %@\",notification.alertBody)",
      "html": {
        "info": null,
        "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
        "ruleName": "<code class=\"fauxpas-codesymbol\">NSLog()</code> used in release build",
        "ruleShortName": "NSLogUsed",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Logging should be disabled in release builds (except perhaps for fatal errors).",
      "ruleName": "NSLog() used in release build",
      "ruleShortName": "NSLogUsed",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/images/aware360_commercial/aware360_iconhazard.png",
      "fileSnippet": null,
      "html": {
        "info": "The ‘3x retina’ version of this image is missing.",
        "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
        "ruleName": "Missing image resolution variant",
        "ruleShortName": "MissingImageResolutionVariant",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The ‘3x retina’ version of this image is missing.",
      "ruleDescription": "Warns when either the high-resolution (@2x or @3x) or the low-resolution variant of an image resource is missing.",
      "ruleName": "Missing image resolution variant",
      "ruleShortName": "MissingImageResolutionVariant",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    },
    {
      "confidence": 10,
      "confidenceDescription": "Absolute",
      "context": null,
      "extent": {
        "end": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        },
        "start": {
          "byteColumn": 0,
          "byteOffset": 0,
          "line": 0,
          "utf16Column": 0,
          "utf16Offset": 0
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/BillingLookup_ViewController.m",
      "fileSnippet": null,
      "html": {
        "info": "<p>The following warning flags are not enabled:</p> <ul><li><div class=\"fauxpas-accent\"><strong>-Wall</strong></div> — Enables all warnings that have a high confidence value and low rate of false positives.</li> <li><div class=\"fauxpas-accent\"><strong>-Wconversion</strong></div> — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (<code>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wdeprecated-implementations</strong></div> — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (<code>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Werror</strong></div> — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (<code>GCC_TREAT_WARNINGS_AS_ERRORS</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wextra</strong></div> — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections.</li> <li><div class=\"fauxpas-accent\"><strong>-Wfloat-equal</strong></div> — Warns if floating-point values are used in equality comparisons.</li> <li><div class=\"fauxpas-accent\"><strong>-Wimplicit-retain-self</strong></div> — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (<code>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wnewline-eof</strong></div> — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (<code>GCC_WARN_ABOUT_MISSING_NEWLINE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wshadow</strong></div> — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (<code>GCC_WARN_SHADOW</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wsign-compare</strong></div> — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (<code>GCC_WARN_SIGN_COMPARE</code>) Xcode setting controls this.</li> <li><div class=\"fauxpas-accent\"><strong>-Wundef</strong></div> — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.</li></ul>",
        "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
        "ruleName": "Recommended compiler warning options",
        "ruleShortName": "CompilerWarnings",
        "ruleWarning": null
      },
      "identifier": "-Wall,-Wconversion,-Wdeprecated-implementations,-Werror,-Wextra,-Wfloat-equal,-Wimplicit-retain-self,-Wnewline-eof,-Wshadow,-Wsign-compare,-Wundef",
      "impact": "Maintainability",
      "info": "The following warning flags are not enabled: -Wall — Enables all warnings that have a high confidence value and low rate of false positives. -Wconversion — Warns about implicit conversions that may alter a value. This is a group flag that encompasses many other similar warnings (for example, -Wenum-conversion, -Wsign-conversion, -Wint-conversion, -Wbool-conversion …) The “Suspicious Implicit Conversions” (CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION) Xcode setting controls this. -Wdeprecated-implementations — Warns if deprecated Objective-C methods are being overridden. The “Overriding Deprecated Objective-C Methods” (CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS) Xcode setting controls this. -Werror — Treats warnings as errors. Recommended so that warnings could not be ignored out of habit (warnings that are intentionally ignored should then be ignored explicitly by adding a &apos;-Wno-&lt;warning-name&gt;&apos; compiler flag). The “Treat Warnings as Errors” (GCC_TREAT_WARNINGS_AS_ERRORS) Xcode setting controls this. -Wextra — Enables additional warnings that are useful but may have higher false positive rates or common philosophical objections. -Wfloat-equal — Warns if floating-point values are used in equality comparisons. -Wimplicit-retain-self — Warns if &apos;self&apos; is being implicitly retained by a block. The “Implicit retain of &apos;self&apos; within blocks” (CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF) Xcode setting controls this. -Wnewline-eof — Warns if a file does not end in a newline character. The “Missing Newline at End of File” (GCC_WARN_ABOUT_MISSING_NEWLINE) Xcode setting controls this. -Wshadow — Warns whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. The “Hidden local variables” (GCC_WARN_SHADOW) Xcode setting controls this. -Wsign-compare — Warns when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. The “Sign Comparison” (GCC_WARN_SIGN_COMPARE) Xcode setting controls this. -Wundef — Warns if an undefined identifier is evaluated in an &apos;#if&apos; directive.",
      "ruleDescription": "Some compiler warnings and warning groups are so useful that they should be enabled at all times.",
      "ruleName": "Recommended compiler warning options",
      "ruleShortName": "CompilerWarnings",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 5,
      "confidenceDescription": "Medium",
      "context": "ExtractNameFromTemplateLevel:",
      "extent": {
        "end": {
          "byteColumn": 23,
          "byteOffset": 34757,
          "line": 894,
          "utf16Column": 22,
          "utf16Offset": 34757
        },
        "start": {
          "byteColumn": 9,
          "byteOffset": 34743,
          "line": 894,
          "utf16Column": 8,
          "utf16Offset": 34743
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/StorageContainer.m",
      "fileSnippet": "NSError *error",
      "html": {
        "info": null,
        "ruleDescription": "<p>Warns when <code class=\"fauxpas-objcclass\">NSError</code> or <code class=\"fauxpas-typedef\">CFErrorRef</code> variable values are never used.</p> <p>If you are not interested in the error return value of a method or function, pass <code class=\"fauxpas-codesymbol\">NULL</code> for the error argument.</p>",
        "ruleName": "Unused error value",
        "ruleShortName": "UnusedErrorValue",
        "ruleWarning": null
      },
      "identifier": "error",
      "impact": "Functionality",
      "info": null,
      "ruleDescription": "Warns when NSError or CFErrorRef variable values are never used. If you are not interested in the error return value of a method or function, pass NULL for the error argument.",
      "ruleName": "Unused error value",
      "ruleShortName": "UnusedErrorValue",
      "ruleWarning": null,
      "severity": 5,
      "severityDescription": "Warning"
    },
    {
      "confidence": 8,
      "confidenceDescription": "High",
      "context": "SMXMLElement",
      "extent": {
        "end": {
          "byteColumn": 46,
          "byteOffset": 1708,
          "line": 45,
          "utf16Column": 45,
          "utf16Offset": 1708
        },
        "start": {
          "byteColumn": 1,
          "byteOffset": 1663,
          "line": 45,
          "utf16Column": 0,
          "utf16Offset": 1663
        }
      },
      "file": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SL_Test1/SMXMLDocument.h",
      "fileSnippet": "@property (nonatomic, retain) NSString *value",
      "html": {
        "info": "The <code>value</code> property is declared with <code>retain</code> semantics. This should be <code>copy</code> instead.",
        "ruleDescription": "<p>Warns if “retaining” semantics are specified in a <code>@property</code> declaration for a common immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> class type that also has a mutable subclass variant (for example <code class=\"fauxpas-objcclass\">NSString</code>).</p><p>This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).</p>",
        "ruleName": "Non-copying property of immutable <code class=\"fauxpas-objcprotocol\">NSCopying</code> type",
        "ruleShortName": "RetainingImmutableProperty",
        "ruleWarning": null
      },
      "identifier": null,
      "impact": "Functionality",
      "info": "The value property is declared with retain semantics. This should be copy instead.",
      "ruleDescription": "Warns if “retaining” semantics are specified in a @property declaration for a common immutable NSCopying class type that also has a mutable subclass variant (for example NSString).This rule helps avoid situations where the value of a property could change without the setter being invoked (i.e. the object gets mutated).",
      "ruleName": "Non-copying property of immutable NSCopying type",
      "ruleShortName": "RetainingImmutableProperty",
      "ruleWarning": null,
      "severity": 3,
      "severityDescription": "Concern"
    }
  ],
  "fauxPasVersion": "1.7.1",
  "projectIconBase64PNG": "",
  "projectName": "SafetyLink",
  "projectPath": "/Users/evgzor/Dropbox/Projects/SafetyLink_IOS/SafetyLink.xcodeproj",
  "targetBundleVersion": "1.9.7",
  "targetName": "SafetyLink",
  "timeStamp": 1483780866,
  "versionControlRevision": "4b0a1be73dc137ae61b231af1e014753bf94503b",
  "versionControlSystemName": "Git"
}